{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/internal.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "InternalService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/internal/api-keys": {
      "get": {
        "summary": "ListAPIKeys lists the available API keys.",
        "operationId": "InternalService_ListAPIKeys",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListAPIKeysResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Required! Max number of items to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "isAdmin",
            "description": "Return only admin keys.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "organizationID",
            "description": "Filter on organization ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "applicationID",
            "description": "Filter on application ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "description": "sort list by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "sort direction",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      },
      "post": {
        "summary": "CreateAPIKey creates the given API key.",
        "operationId": "InternalService_CreateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateAPIKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateAPIKeyRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      },
      "put": {
        "summary": "UpdateAPIKey updates the given API key.",
        "operationId": "InternalService_UpdateAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateAPIKeyRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/api-keys/{id}": {
      "get": {
        "summary": "GetAPIKey returns API key object by the given id",
        "operationId": "InternalService_GetAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetAPIKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "API key ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      },
      "delete": {
        "summary": "DeleteAPIKey deletes the API key.",
        "operationId": "InternalService_DeleteAPIKey",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "API key ID.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/devices/summary": {
      "get": {
        "summary": "GetDevicesSummary returns an aggregated summary of the devices.",
        "operationId": "InternalService_GetDevicesSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetDevicesSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationID",
            "description": "Organization ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/devices/summarylog": {
      "get": {
        "summary": "GetDevicesSummaryLog returns log of aggregated summary.",
        "operationId": "InternalService_GetDevicesSummaryLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "description": "Id (number). If Zero - all organisations (allowed for admin)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "description": "format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregation",
            "description": "aggregation of the data: HOUR,DAY,WEEK,MONTH",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/gateways/summary": {
      "get": {
        "summary": "GetGatewaysSummary returns an aggregated summary of the gateways.",
        "operationId": "InternalService_GetGatewaysSummary",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetGatewaysSummaryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationID",
            "description": "Organization ID.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/gateways/summarylog": {
      "get": {
        "summary": "GetGatewaysSummaryLog returns log of aggregated summary.",
        "operationId": "InternalService_GetGatewaysSummaryLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetGatewayCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "description": "Id (number). If Zero - all organisations (allowed for admin)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "description": "format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregation",
            "description": "aggregation of the data: HOUR,DAY,WEEK,MONTH",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/info": {
      "get": {
        "summary": "GetInfo returns summary about versions and so on.",
        "operationId": "InternalService_GetInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/login": {
      "post": {
        "summary": "Log in a user",
        "operationId": "InternalService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiLoginRequest"
            }
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/monitoring/counters": {
      "get": {
        "summary": "GetMainCounters returns main app-server metrics",
        "operationId": "InternalService_GetMainCounters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetMainCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "interval",
            "description": "Aggregation interval.  One of \"minute\", \"hour\", \"day\", \"month\".\nCase insensitive.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startTimestamp",
            "description": "Timestamp to start from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTimestamp",
            "description": "Timestamp until to get from.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/oidc/login": {
      "get": {
        "summary": "OpenID Connect login.",
        "operationId": "InternalService_OpenIDConnectLogin",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiOpenIDConnectLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "code",
            "description": "OpenID Connect callback code.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "description": "OpenID Connect callback state.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/profile": {
      "get": {
        "summary": "Get the current user's profile",
        "operationId": "InternalService_Profile",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiProfileResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/search": {
      "get": {
        "summary": "Perform a global search.",
        "operationId": "InternalService_GlobalSearch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGlobalSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "search",
            "description": "Search query.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "Max number of results to return.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset offset of the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "InternalService"
        ]
      }
    },
    "/api/internal/settings": {
      "get": {
        "summary": "Get the global settings.",
        "operationId": "InternalService_Settings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "InternalService"
        ]
      }
    }
  },
  "definitions": {
    "apiAPIKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "API key ID.\nThis value will be automatically generated on create."
        },
        "name": {
          "type": "string",
          "description": "Name."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Is global admin key."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID.\nIn case this API key is to manage resources within a single organization\nset this to the ID of this organization."
        },
        "applicationID": {
          "type": "string",
          "format": "int64",
          "title": "Application ID.\nIn case the API key is to manage resources within an application, set\nthis to the ID of this application.message"
        },
        "description": {
          "type": "string",
          "description": "description."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the key."
        }
      }
    },
    "apiBranding": {
      "type": "object",
      "properties": {
        "registration": {
          "type": "string",
          "description": "Registration html."
        },
        "footer": {
          "type": "string",
          "description": "Footer html."
        },
        "topNavColor": {
          "type": "string",
          "description": "Top nav bar color."
        },
        "tabsColor": {
          "type": "string",
          "description": "Tabs color."
        },
        "metaTitle": {
          "type": "string",
          "description": "Page title."
        },
        "metaDescription": {
          "type": "string",
          "description": "Seo description."
        }
      }
    },
    "apiCreateAPIKeyRequest": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/apiAPIKey",
          "description": "The API key to create."
        }
      }
    },
    "apiCreateAPIKeyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "API key ID."
        },
        "jwtToken": {
          "type": "string",
          "description": "JWT token for this API Key."
        }
      }
    },
    "apiGetAPIKeyResponse": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/apiAPIKey",
          "title": "The API key object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiGetDevicesSummaryResponse": {
      "type": "object",
      "properties": {
        "activeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Active count."
        },
        "inactiveCount": {
          "type": "integer",
          "format": "int64",
          "description": "Inactive count."
        },
        "drCount": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          },
          "description": "per data-rate count.\nDevices that have never been seen are excluded."
        },
        "neverSeenCount": {
          "type": "integer",
          "format": "int64",
          "description": "Never seen count."
        }
      }
    },
    "apiGetGatewaysSummaryResponse": {
      "type": "object",
      "properties": {
        "activeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Active count."
        },
        "inactiveCount": {
          "type": "integer",
          "format": "int64",
          "description": "Inactive count."
        },
        "neverSeenCount": {
          "type": "integer",
          "format": "int64",
          "description": "Never seen count."
        }
      }
    },
    "apiGetInfoResponse": {
      "type": "object",
      "properties": {
        "api": {
          "type": "string",
          "title": "api version"
        },
        "appServer": {
          "type": "string",
          "description": "application server verson."
        },
        "netServer": {
          "type": "string",
          "title": "network server version"
        },
        "handyrusty": {
          "type": "string",
          "title": "network server version"
        },
        "clickhouse": {
          "type": "string",
          "title": "clickhouse version"
        },
        "appPostgres": {
          "type": "string",
          "title": "postgres version of application server"
        },
        "netPostgres": {
          "type": "string",
          "title": "postgres version of network server"
        },
        "redis": {
          "type": "string",
          "description": "mosquito version\n string mosquito = 9;",
          "title": "redis version"
        }
      }
    },
    "apiGetMainCountersResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiMainCounters"
          }
        }
      }
    },
    "apiGlobalSearchResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiGlobalSearchResult"
          }
        },
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of searched rows available within the result-set."
        }
      }
    },
    "apiGlobalSearchResult": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Record kind."
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Search score."
        },
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization id."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "applicationID": {
          "type": "string",
          "format": "int64",
          "description": "Application id."
        },
        "applicationName": {
          "type": "string",
          "description": "Application name."
        },
        "deviceDevEUI": {
          "type": "string",
          "description": "Device DevEUI (hex encoded)."
        },
        "deviceName": {
          "type": "string",
          "description": "Device name."
        },
        "gatewayMAC": {
          "type": "string",
          "description": "Gateway MAC (hex encoded)."
        },
        "gatewayName": {
          "type": "string",
          "description": "Gateway name."
        },
        "routingProfileID": {
          "type": "string",
          "format": "int64",
          "description": "Routing profile id."
        },
        "routingProfileName": {
          "type": "string",
          "description": "Routing profile name."
        }
      }
    },
    "apiListAPIKeysResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of API keys."
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiAPIKey"
          }
        }
      }
    },
    "apiLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        }
      }
    },
    "apiLoginResponse": {
      "type": "object",
      "properties": {
        "jwt": {
          "type": "string",
          "description": "The JWT tag to be used to access application-server interfaces."
        }
      }
    },
    "apiMainCounters": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Timestamp of the (aggregated) measurement."
        },
        "rxCount": {
          "type": "integer",
          "format": "int32",
          "title": "counter of uplinks recieved by as from ns in total"
        },
        "rxCountSent": {
          "type": "integer",
          "format": "int32",
          "title": "counter of uplinks sent by as to integrations in total"
        },
        "rxCountErr": {
          "type": "integer",
          "format": "int32",
          "title": "counter of uplinks unable to sent by as to integrations in total"
        }
      }
    },
    "apiOpenIDConnect": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable OpenID Connect authentication."
        },
        "loginURL": {
          "type": "string",
          "description": "Login url."
        },
        "loginLabel": {
          "type": "string",
          "description": "Login label."
        },
        "logoutURL": {
          "type": "string",
          "description": "Logout url."
        }
      }
    },
    "apiOpenIDConnectLoginResponse": {
      "type": "object",
      "properties": {
        "jwtToken": {
          "type": "string",
          "description": "JWT token to use for authentication."
        }
      }
    },
    "apiOrganizationLink": {
      "type": "object",
      "properties": {
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "organizationName": {
          "type": "string",
          "description": "Organization name."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "User is admin within the context of this organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags."
        },
        "isDeviceAdmin": {
          "type": "boolean",
          "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups)."
        },
        "isGatewayAdmin": {
          "type": "boolean",
          "description": "User is able to modify gateways."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      },
      "description": "Defines an organization to which an user is associated."
    },
    "apiProfileResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/apiUser",
          "description": "User object."
        },
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiOrganizationLink"
          },
          "description": "Organizations to which the user is associated."
        }
      }
    },
    "apiSettingsResponse": {
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string",
          "title": "ServerName"
        },
        "branding": {
          "$ref": "#/definitions/apiBranding",
          "description": "Branding settings."
        },
        "openidConnect": {
          "$ref": "#/definitions/apiOpenIDConnect",
          "description": "OpenID Connect settings."
        }
      }
    },
    "apiUpdateAPIKeyRequest": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/apiAPIKey",
          "description": "The API key to create."
        }
      }
    },
    "apiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID.\nWill be set automatically on create."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the user."
        },
        "email": {
          "type": "string",
          "description": "E-mail of the user."
        },
        "note": {
          "type": "string",
          "description": "Optional note to store with the user."
        },
        "name": {
          "type": "string",
          "title": "user's name"
        },
        "surname": {
          "type": "string",
          "title": "user's last name"
        },
        "company": {
          "type": "string",
          "title": "the company where the employee is working at"
        },
        "position": {
          "type": "string",
          "title": "user's position and subdivision in the company"
        },
        "phone": {
          "type": "string",
          "title": "user's phone"
        },
        "loginAt": {
          "type": "string",
          "format": "date-time",
          "description": "last login at timestamp."
        },
        "loginWithLdap": {
          "type": "boolean",
          "title": "mark as LDAP-user, if true - allow him to login with name@domain via LDAP"
        }
      }
    },
    "hrDeviceCounters": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "integer",
          "format": "int64",
          "title": "id of the organisation that handles the devices"
        },
        "createdAt": {
          "type": "integer",
          "format": "int64",
          "description": "Created at unix timestamp."
        },
        "activeCount": {
          "type": "integer",
          "format": "int64",
          "description": "Active count."
        },
        "inactiveCount": {
          "type": "integer",
          "format": "int64",
          "description": "Inactive count."
        },
        "neverSeenCount": {
          "type": "integer",
          "format": "int64",
          "description": "Never seen count."
        }
      },
      "title": "counters"
    },
    "hrGetDeviceCountersResponse": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "integer",
          "format": "int64",
          "title": "id of the organisation that handles the devices"
        },
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrDeviceCounters"
          }
        }
      }
    },
    "hrGetGatewayCountersResponse": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "integer",
          "format": "int64",
          "title": "id of the organisation that handles the devices"
        },
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrDeviceCounters"
          },
          "title": "log of counters"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
