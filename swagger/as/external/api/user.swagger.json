{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/user-logs": {
      "get": {
        "summary": "ListLogs returns a list of user-activity logs",
        "operationId": "UserService_ListLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListUserLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Required! Max number of user to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "organizationId",
            "description": "an organization where the user action been detected",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "search",
            "description": "search field by username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "description": "sort list by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "sort direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateFrom",
            "description": "DateTime from search. Works only with date_to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateTo",
            "description": "DateTime from search. Works only with date_from",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get user list.",
        "operationId": "UserService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Required! Max number of user to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "orderBy",
            "description": "sort list by name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "description": "sort direction",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "search condition",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a new user.",
        "operationId": "UserService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get data for a particular user.",
        "operationId": "UserService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete a user.",
        "operationId": "UserService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{user.id}": {
      "put": {
        "summary": "Update an existing user.",
        "operationId": "UserService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "User ID.\nWill be set automatically on create.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "sessionTTL": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The session timeout, in minutes."
                    },
                    "isAdmin": {
                      "type": "boolean",
                      "description": "Set to true to make the user a global administrator."
                    },
                    "isActive": {
                      "type": "boolean",
                      "description": "Set to false to disable the user."
                    },
                    "email": {
                      "type": "string",
                      "description": "E-mail of the user."
                    },
                    "note": {
                      "type": "string",
                      "description": "Optional note to store with the user."
                    },
                    "name": {
                      "type": "string",
                      "title": "user's name"
                    },
                    "surname": {
                      "type": "string",
                      "title": "user's last name"
                    },
                    "company": {
                      "type": "string",
                      "title": "the company where the employee is working at"
                    },
                    "position": {
                      "type": "string",
                      "title": "user's position and subdivision in the company"
                    },
                    "phone": {
                      "type": "string",
                      "title": "user's phone"
                    },
                    "loginAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last login at timestamp."
                    },
                    "loginWithLdap": {
                      "type": "boolean",
                      "title": "mark as LDAP-user, if true - allow him to login with name@domain via LDAP"
                    }
                  },
                  "description": "User object to update.",
                  "title": "User object to update."
                }
              }
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{userId}/password": {
      "put": {
        "summary": "UpdatePassword updates a password.",
        "operationId": "UserService_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type": "string",
                  "description": "New pasword."
                }
              }
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "apiCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/apiUser",
          "description": "User object to create."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        },
        "organizations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserOrganization"
          },
          "description": "Add the user to the following organizations."
        }
      }
    },
    "apiCreateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID."
        }
      }
    },
    "apiGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/apiUser",
          "description": "User object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiListUserLogsResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of logs in db."
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserLogListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "apiListUserResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of users."
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/apiUserListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "apiUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID.\nWill be set automatically on create."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the user."
        },
        "email": {
          "type": "string",
          "description": "E-mail of the user."
        },
        "note": {
          "type": "string",
          "description": "Optional note to store with the user."
        },
        "name": {
          "type": "string",
          "title": "user's name"
        },
        "surname": {
          "type": "string",
          "title": "user's last name"
        },
        "company": {
          "type": "string",
          "title": "the company where the employee is working at"
        },
        "position": {
          "type": "string",
          "title": "user's position and subdivision in the company"
        },
        "phone": {
          "type": "string",
          "title": "user's phone"
        },
        "loginAt": {
          "type": "string",
          "format": "date-time",
          "description": "last login at timestamp."
        },
        "loginWithLdap": {
          "type": "boolean",
          "title": "mark as LDAP-user, if true - allow him to login with name@domain via LDAP"
        }
      }
    },
    "apiUserListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "User ID.\nWill be set automatically on create."
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the user."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "loginAt": {
          "type": "string",
          "format": "date-time",
          "description": "last login at timestamp."
        },
        "name": {
          "type": "string",
          "title": "user's name"
        },
        "surname": {
          "type": "string",
          "title": "user's last name"
        },
        "company": {
          "type": "string",
          "title": "the company where the employee is working at"
        },
        "position": {
          "type": "string",
          "title": "user's position and subdivision in the company"
        },
        "phone": {
          "type": "string",
          "title": "user's phone"
        },
        "orgCnt": {
          "type": "integer",
          "format": "int32",
          "title": "number of organizations where the user is member"
        }
      }
    },
    "apiUserLogListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Log ID.\nset automatically on create."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "userId": {
          "type": "string",
          "format": "int64",
          "description": "id of user who operated."
        },
        "userName": {
          "type": "string",
          "description": "id of user who operated."
        },
        "event": {
          "type": "string",
          "title": "the name of event that happend"
        },
        "statePrev": {
          "type": "string",
          "title": "previous state of an object that changed or deleted (json)"
        },
        "stateCur": {
          "type": "string",
          "title": "current state of an object that created, changed or deleted (json)"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "title": "an organization where the user action been detected"
        }
      }
    },
    "apiUserOrganization": {
      "type": "object",
      "properties": {
        "organizationID": {
          "type": "string",
          "format": "int64",
          "description": "Organization ID."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "User is admin within the context of the organization.\nThere is no need to set the is_device_admin and is_gateway_admin flags."
        },
        "isDeviceAdmin": {
          "type": "boolean",
          "description": "User is able to modify device related resources (applications,\ndevice-profiles, devices, multicast-groups)."
        },
        "isGatewayAdmin": {
          "type": "boolean",
          "description": "User is able to modify gateways."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
