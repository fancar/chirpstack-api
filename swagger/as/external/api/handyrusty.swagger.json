{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/handyrusty.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/handy-rusty/frames/counters": {
      "post": {
        "summary": "GetFrameCounters returns frame counters by type for the given range. Aggregation: day",
        "operationId": "GetFrameCounters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetFrameCountersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetFrameCountersRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/logs/device-frames": {
      "post": {
        "summary": "GetDeviceFramesLog returns an array with recieved and transmitted device's frames",
        "operationId": "GetDeviceFramesLog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceFramesLogResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetDeviceFramesLogRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/speed": {
      "post": {
        "summary": "GetFrameSpeed returns an array with rx+tx frames per minute measurments",
        "operationId": "GetFrameSpeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetFrameSpeedResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetFrameSpeedRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/rc/exec-command": {
      "post": {
        "summary": "ExecCommand sends the command to execute on gw. It waits 2 mins for the answer from gw",
        "operationId": "ExecCommand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gwGatewayCommandExecResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrExecCommandRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    }
  },
  "definitions": {
    "commonLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude."
        },
        "source": {
          "$ref": "#/definitions/commonLocationSource",
          "description": "Location source."
        },
        "accuracy": {
          "type": "integer",
          "format": "int64",
          "description": "Accuracy (in meters)."
        }
      }
    },
    "commonLocationSource": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GPS",
        "CONFIG",
        "GEO_RESOLVER_TDOA",
        "GEO_RESOLVER_RSSI",
        "GEO_RESOLVER_GNSS",
        "GEO_RESOLVER_WIFI"
      ],
      "default": "UNKNOWN",
      "description": " - UNKNOWN: Unknown.\n - GPS: GPS.\n - CONFIG: Manually configured.\n - GEO_RESOLVER_TDOA: Geo resolver (TDOA).\n - GEO_RESOLVER_RSSI: Geo resolver (RSSI).\n - GEO_RESOLVER_GNSS: Geo resolver (GNSS).\n - GEO_RESOLVER_WIFI: Geo resolver (WIFI)."
    },
    "gwFineTimestampType": {
      "type": "string",
      "enum": [
        "NONE",
        "ENCRYPTED",
        "PLAIN"
      ],
      "default": "NONE",
      "description": " - NONE: No fine-timestamp available.\n - ENCRYPTED: Encrypted fine-timestamp.\n - PLAIN: Plain fine-timestamp."
    },
    "gwGatewayCommandExecResponse": {
      "type": "object",
      "properties": {
        "gatewayID": {
          "type": "string",
          "format": "byte",
          "description": "Gateway ID."
        },
        "execID": {
          "type": "string",
          "format": "byte",
          "description": "Execution request ID (UUID)."
        },
        "stdout": {
          "type": "string",
          "format": "byte",
          "description": "Standard output."
        },
        "stderr": {
          "type": "string",
          "format": "byte",
          "description": "Standard error."
        },
        "error": {
          "type": "string",
          "description": "Error message."
        }
      }
    },
    "hrDeviceFrameLog": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "title": "RX (uplink -recieved from devices) or TX (downlink - transmitted from NS)"
        },
        "dateTime": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "mType": {
          "type": "string"
        },
        "devAddr": {
          "type": "string"
        },
        "devEUI": {
          "type": "string"
        },
        "rxRssi": {
          "type": "integer",
          "format": "int32",
          "title": "params from base station with best SNR"
        },
        "rxSnr": {
          "type": "number",
          "format": "double"
        },
        "rxChannel": {
          "type": "integer",
          "format": "int64"
        },
        "rxRfChain": {
          "type": "integer",
          "format": "int64"
        },
        "gw": {
          "type": "string",
          "title": "id of base station with best SNR"
        },
        "txInfo": {
          "type": "string",
          "title": "json-string"
        },
        "rxInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hrRXInfo"
          },
          "title": "RXInfo an array with info from BS recieved the frame"
        },
        "PhyPayloadJson": {
          "type": "string",
          "title": "json-string with LORA payload"
        },
        "airtime": {
          "type": "number",
          "format": "double"
        },
        "esp": {
          "type": "number",
          "format": "double"
        },
        "late": {
          "type": "integer",
          "format": "int64"
        },
        "frmPayload": {
          "type": "string"
        }
      },
      "title": "for storage"
    },
    "hrExecCommandRequest": {
      "type": "object",
      "properties": {
        "gatewayId": {
          "type": "string",
          "description": "Gateway ID (HEX encoded)."
        },
        "command": {
          "type": "string",
          "title": "command that will be executed on gateway (according to the gw config)"
        }
      }
    },
    "hrFrameCounters": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Date: the metrics counted for."
        },
        "rxCnt": {
          "type": "integer",
          "format": "int64",
          "title": "RxCnt: total recieved frames counted"
        },
        "txCnt": {
          "type": "integer",
          "format": "int64",
          "title": "TxCnt: total transmitted frames counted"
        },
        "totalCnt": {
          "type": "integer",
          "format": "int64",
          "title": "TotalCnt: both TxCnt and RxCnt counted"
        },
        "unknownType": {
          "type": "integer",
          "format": "int64",
          "title": "UnknownType:"
        },
        "joinRequest": {
          "type": "integer",
          "format": "int64",
          "title": "JoinRequest"
        },
        "rejoinRequest": {
          "type": "integer",
          "format": "int64",
          "title": "RejoinRequest"
        },
        "joinAccept": {
          "type": "integer",
          "format": "int64",
          "title": "JoinAccept"
        },
        "unconfirmedDataUp": {
          "type": "integer",
          "format": "int64",
          "title": "UnconfirmedDataUp"
        },
        "unconfirmedDataDown": {
          "type": "integer",
          "format": "int64",
          "title": "UnconfirmedDataDown"
        },
        "confirmedDataUp": {
          "type": "integer",
          "format": "int64",
          "title": "ConfirmedDataUp"
        },
        "confirmedDataDown": {
          "type": "integer",
          "format": "int64",
          "title": "ConfirmedDataDown"
        },
        "proprietary": {
          "type": "integer",
          "format": "int64",
          "title": "Proprietary"
        }
      }
    },
    "hrFrameSpeed": {
      "type": "object",
      "properties": {
        "t": {
          "type": "string",
          "format": "int64",
          "title": "T: Created at timestamp (unix)"
        },
        "y": {
          "type": "integer",
          "format": "int64",
          "title": "Y: TotalCnt: both TxCnt and RxCnt frames counted for the amount of time"
        }
      }
    },
    "hrGetDeviceFramesLogRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64",
          "title": "you can specify offset (for pagination)"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "you can specify rows limit"
        },
        "start": {
          "type": "string",
          "title": "You can specify start DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "You can specify end DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Additional sql filters (key,value): allowed: direction,devEUI,mType,gw,devAddr"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "title": "You can set the id to 0 if admin"
        }
      }
    },
    "hrGetDeviceFramesLogResponse": {
      "type": "object",
      "properties": {
        "itemsTotal": {
          "type": "integer",
          "format": "int64",
          "title": "total numner of selected rows"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hrDeviceFrameLog"
          },
          "title": "the array of selected device-frames logs"
        }
      }
    },
    "hrGetFrameCountersRequest": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        }
      }
    },
    "hrGetFrameCountersResponse": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hrFrameCounters"
          },
          "title": "list counters with frame counters by type"
        }
      }
    },
    "hrGetFrameSpeedRequest": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        }
      }
    },
    "hrGetFrameSpeedResponse": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/hrFrameSpeed"
          },
          "title": "list counters with frames speed"
        }
      }
    },
    "hrRXInfo": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "type": "string",
          "title": "GatewayID"
        },
        "rssi": {
          "type": "integer",
          "format": "int32"
        },
        "lora_snr": {
          "type": "number",
          "format": "double"
        },
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "rf_chain": {
          "type": "integer",
          "format": "int64"
        },
        "board": {
          "type": "integer",
          "format": "int64"
        },
        "antenna": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/commonLocation"
        },
        "FineTimestampType": {
          "$ref": "#/definitions/gwFineTimestampType"
        },
        "gps_timestamp": {
          "type": "string"
        },
        "fine_timestamp": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "uplink_id": {
          "type": "string",
          "description": "Unique and random ID which can be used to correlate the uplink across multiple logs."
        }
      },
      "title": "for RXInfo item in uplink frames"
    }
  }
}
