{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/handyrusty.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "HandyRustyService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/handy-rusty/current-state": {
      "get": {
        "operationId": "HandyRustyService_GetCurrentState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetCurrentStateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/device/stats/last-14-days": {
      "get": {
        "summary": "Get stats for device from clickhouse for last 14 days",
        "operationId": "HandyRustyService_GetDeviceStatsLastTwoweeks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceStatsLastTwoweeksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "devEui",
            "description": "Device EUI",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/device/stats/last-14-days-aggregated": {
      "get": {
        "summary": "Get stats for device from clickhouse for last 14 days aggregated by day",
        "operationId": "HandyRustyService_GetDeviceStatsLastTwoweeksAggregated",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceStatsLastTwoweeksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "devEui",
            "description": "Device EUI",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/device/stats/last-24-hours": {
      "get": {
        "summary": "Get stats for device from clickhouse current and for last 24 hours",
        "operationId": "HandyRustyService_GetDeviceStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "devEui",
            "description": "Device EUI",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/device/stats/last-24-hours/for-list": {
      "post": {
        "summary": "Get stats for device from clickhouse current and for last 24 hours to show in list",
        "operationId": "HandyRustyService_GetAveragesForDeviceList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetAveragesForDeviceListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetAveragesForDeviceListRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/counters": {
      "post": {
        "summary": "GetFrameCounters returns frame counters by type for the given range. Aggregation: day",
        "operationId": "HandyRustyService_GetFrameCounters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetFrameCountersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetFrameCountersRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/logs/device-frames": {
      "post": {
        "summary": "GetDeviceFrames returns an array with recieved and transmitted device's frames",
        "operationId": "HandyRustyService_GetDeviceFrames",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetDeviceFramesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetDeviceFramesRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/logs/device-frames/csv": {
      "get": {
        "summary": "StreamDeviceFramesCSV streams the frame-logs from handyrusty CH-storage.\n  * The data is transferred by chunks (stream);\n  * This endpoint does not work from a web-browser!",
        "operationId": "HandyRustyService_StreamDeviceFramesCSV",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/hrStreamDeviceFramesCSVResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of hrStreamDeviceFramesCSVResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "you can specify offset (for pagination)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "you can specify rows limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "start",
            "description": "You can specify start DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "end",
            "description": "You can specify end DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filters",
            "description": "map of filters. Allowed values for: direction,devEUI,mType,gw,devAddr\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "organizationId",
            "description": "You can set the id to 0 if admin",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "timeZone",
            "description": "here user sends his local timezone.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "gwOnly",
            "description": "for internal use. Will be ignored from external api.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "getTotal",
            "description": "get total number of packets according to the filter except limit\\offset. For pagination purposes",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "inFilters",
            "description": "Additional sql IN filters. works the same way as filters {\"filter_name:\"filter_value\"}\nexcept you send not value but '\"filter_name: {values:[\"some\",\"list\",\"of\",\"values\"]}'.\nCAUTION(!) WE DO NOT RECOMMEND TO USE IT WITHIN GET requests\n\nThis is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false
          },
          {
            "name": "order",
            "description": "sort direction DESC or ASC (DESC by default)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "reverse",
            "description": "if true - sort direction will be reversed",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/frames/speed": {
      "post": {
        "summary": "GetFrameSpeed returns an array with rx+tx frames per minute measurments",
        "operationId": "HandyRustyService_GetFrameSpeed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetFrameSpeedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrGetFrameSpeedRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/gateway/stats": {
      "get": {
        "operationId": "HandyRustyService_GetGwStats",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetGwStatsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Gateway ID (HEX encoded).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/integration/replies": {
      "get": {
        "operationId": "HandyRustyService_GetIntegrationReplies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/hrGetIntegrationRepliesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "you can specify offset (for pagination)",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "you can specify rows limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "organisationId",
            "description": "id of organization where integration linked to",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "routingProfileId",
            "description": "id of routing profile",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "devEui",
            "description": "Device EUI",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "isError",
            "description": "http status != 200",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isOk",
            "description": "http status == 200",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "description": "You can specify start DateTime point.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end",
            "description": "You can specify end DateTime point.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    },
    "/api/handy-rusty/rc/exec-command": {
      "post": {
        "summary": "ExecCommand sends the command to execute on gw. It waits 30 sec for an answer from gw",
        "operationId": "HandyRustyService_ExecCommand",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gwGatewayCommandExecResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/hrExecCommandRequest"
            }
          }
        ],
        "tags": [
          "HandyRustyService"
        ]
      }
    }
  },
  "definitions": {
    "commonLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude."
        },
        "source": {
          "$ref": "#/definitions/commonLocationSource",
          "description": "Location source."
        },
        "accuracy": {
          "type": "integer",
          "format": "int64",
          "description": "Accuracy (in meters)."
        }
      }
    },
    "commonLocationSource": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GPS",
        "CONFIG",
        "GEO_RESOLVER_TDOA",
        "GEO_RESOLVER_RSSI",
        "GEO_RESOLVER_GNSS",
        "GEO_RESOLVER_WIFI"
      ],
      "default": "UNKNOWN",
      "description": " - UNKNOWN: Unknown.\n - GPS: GPS.\n - CONFIG: Manually configured.\n - GEO_RESOLVER_TDOA: Geo resolver (TDOA).\n - GEO_RESOLVER_RSSI: Geo resolver (RSSI).\n - GEO_RESOLVER_GNSS: Geo resolver (GNSS).\n - GEO_RESOLVER_WIFI: Geo resolver (WIFI)."
    },
    "gwFineTimestampType": {
      "type": "string",
      "enum": [
        "NONE",
        "ENCRYPTED",
        "PLAIN"
      ],
      "default": "NONE",
      "description": " - NONE: No fine-timestamp available.\n - ENCRYPTED: Encrypted fine-timestamp.\n - PLAIN: Plain fine-timestamp."
    },
    "gwGatewayCommandExecResponse": {
      "type": "object",
      "properties": {
        "gatewayID": {
          "type": "string",
          "format": "byte",
          "title": "Gateway ID. base64 encoded byte-array"
        },
        "execID": {
          "type": "string",
          "format": "byte",
          "title": "Execution request ID (UUID). base64 encoded byte-array"
        },
        "stdout": {
          "type": "string",
          "format": "byte",
          "title": "Standard output. base64 encoded byte-array"
        },
        "stderr": {
          "type": "string",
          "format": "byte",
          "title": "Standard error. base64 encoded byte-array"
        },
        "error": {
          "type": "string",
          "description": "Error message."
        },
        "name": {
          "type": "string",
          "title": "file (or other item) name. Optional"
        }
      }
    },
    "hrAveragesForDeviceList": {
      "type": "object",
      "properties": {
        "devEui": {
          "type": "string",
          "title": "Device EUI"
        },
        "perAvg": {
          "type": "number",
          "format": "float",
          "title": "average per for last 24 hours"
        },
        "packetCnt": {
          "type": "integer",
          "format": "int64",
          "title": "rx+tx packets for last 24 hours"
        },
        "snrLast": {
          "type": "number",
          "format": "double",
          "title": "last signal to noise ratio"
        },
        "rssiLast": {
          "type": "integer",
          "format": "int32",
          "title": "last received signal strength indication"
        }
      }
    },
    "hrDeviceFrameLog": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "title": "RX (uplink -recieved from devices) or TX (downlink - transmitted from NS)"
        },
        "dateTime": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "mType": {
          "type": "string"
        },
        "devAddr": {
          "type": "string"
        },
        "devEUI": {
          "type": "string"
        },
        "rxRssi": {
          "type": "integer",
          "format": "int32",
          "title": "params from base station with best SNR"
        },
        "rxSnr": {
          "type": "number",
          "format": "double"
        },
        "rxChannel": {
          "type": "integer",
          "format": "int64"
        },
        "rxRfChain": {
          "type": "integer",
          "format": "int64"
        },
        "gw": {
          "type": "string",
          "title": "id of base station with best SNR"
        },
        "txInfo": {
          "type": "string",
          "title": "json-string"
        },
        "rxInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrRXInfo"
          },
          "title": "RXInfo an array with info from BS recieved the frame"
        },
        "PhyPayloadJson": {
          "type": "string",
          "title": "json-string with LORA payload"
        },
        "airtime": {
          "type": "number",
          "format": "double"
        },
        "esp": {
          "type": "number",
          "format": "double"
        },
        "late": {
          "type": "integer",
          "format": "int64"
        },
        "frmPayload": {
          "type": "string"
        },
        "FCntUp": {
          "type": "integer",
          "format": "int64",
          "title": "data from device-session"
        },
        "NFCntDown": {
          "type": "integer",
          "format": "int64"
        },
        "AFCntDown": {
          "type": "integer",
          "format": "int64"
        },
        "ConfFCnt": {
          "type": "integer",
          "format": "int64"
        },
        "spFact": {
          "type": "integer",
          "format": "int64",
          "title": "spreading factor (TxInfo)"
        },
        "limit": {
          "type": "string",
          "title": "billing limit: \"\" - within range limit, \"M\" - marked as overlimit, \"D\" - droped because of overlimit"
        }
      },
      "title": "for storage"
    },
    "hrDeviceStats": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "last received uplink DateTime"
        },
        "rxCnt": {
          "type": "integer",
          "format": "int64",
          "title": "number of uplink packets"
        },
        "txCnt": {
          "type": "integer",
          "format": "int64",
          "title": "number of downlink packets"
        },
        "per": {
          "type": "number",
          "format": "float",
          "title": "packet error rate"
        },
        "esp": {
          "type": "number",
          "format": "float",
          "title": "estimated signal power"
        },
        "rssi": {
          "type": "number",
          "format": "float",
          "title": "average received signal strength"
        },
        "snr": {
          "type": "number",
          "format": "float",
          "title": "signal to noise ratio"
        },
        "sf": {
          "type": "integer",
          "format": "int64",
          "title": "spreading factor"
        }
      }
    },
    "hrExecCommandRequest": {
      "type": "object",
      "properties": {
        "gatewayId": {
          "type": "string",
          "description": "Gateway ID (HEX encoded)."
        },
        "command": {
          "type": "string",
          "title": "command that will be executed on gateway (according to the gw config)"
        },
        "timeout": {
          "type": "integer",
          "format": "int64",
          "title": "You can set timeout for the command execution. Default 30 seconds. Range 1-1000"
        },
        "backgroundTask": {
          "type": "boolean",
          "description": "Background task execution. If set true, the result will be saved in app-db.\n Allows to get large amount of data from devices asynchronously."
        }
      }
    },
    "hrFrameCounters": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "int64",
          "description": "Date: the metrics counted for."
        },
        "rxCnt": {
          "type": "integer",
          "format": "int64",
          "title": "RxCnt: total recieved frames counted"
        },
        "txCnt": {
          "type": "integer",
          "format": "int64",
          "title": "TxCnt: total transmitted frames counted"
        },
        "totalCnt": {
          "type": "integer",
          "format": "int64",
          "title": "TotalCnt: both TxCnt and RxCnt counted"
        },
        "unknownType": {
          "type": "integer",
          "format": "int64",
          "title": "UnknownType:"
        },
        "joinRequest": {
          "type": "integer",
          "format": "int64",
          "title": "JoinRequest"
        },
        "rejoinRequest": {
          "type": "integer",
          "format": "int64",
          "title": "RejoinRequest"
        },
        "joinAccept": {
          "type": "integer",
          "format": "int64",
          "title": "JoinAccept"
        },
        "unconfirmedDataUp": {
          "type": "integer",
          "format": "int64",
          "title": "UnconfirmedDataUp"
        },
        "unconfirmedDataDown": {
          "type": "integer",
          "format": "int64",
          "title": "UnconfirmedDataDown"
        },
        "confirmedDataUp": {
          "type": "integer",
          "format": "int64",
          "title": "ConfirmedDataUp"
        },
        "confirmedDataDown": {
          "type": "integer",
          "format": "int64",
          "title": "ConfirmedDataDown"
        },
        "proprietary": {
          "type": "integer",
          "format": "int64",
          "title": "Proprietary"
        }
      }
    },
    "hrFrameSpeed": {
      "type": "object",
      "properties": {
        "t": {
          "type": "string",
          "format": "int64",
          "title": "T: Created at timestamp (unix)"
        },
        "y": {
          "type": "integer",
          "format": "int64",
          "title": "Y: TotalCnt: both TxCnt and RxCnt frames counted for the amount of time"
        }
      }
    },
    "hrGetAveragesForDeviceListRequest": {
      "type": "object",
      "properties": {
        "devList": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Device EUI array"
        }
      }
    },
    "hrGetAveragesForDeviceListResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrAveragesForDeviceList"
          }
        }
      }
    },
    "hrGetCurrentStateResponse": {
      "type": "object",
      "properties": {
        "wlLastPacket": {
          "type": "string",
          "title": "DateTime of last packet saved in wireless-loger"
        },
        "wlLastPacketUnix": {
          "type": "string",
          "format": "int64",
          "title": "the same as previuos in unixTime format"
        }
      }
    },
    "hrGetDeviceFramesRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64",
          "title": "you can specify offset (for pagination)"
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "you can specify rows limit"
        },
        "start": {
          "type": "string",
          "title": "You can specify start DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "You can specify end DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "map of filters. Allowed values for: direction,devEUI,mType,gw,devAddr"
        },
        "organizationId": {
          "type": "string",
          "format": "int64",
          "title": "You can set the id to 0 if admin"
        },
        "timeZone": {
          "type": "string",
          "description": "here user sends his local timezone."
        },
        "gwOnly": {
          "type": "boolean",
          "description": "for internal use. Will be ignored from external api."
        },
        "getTotal": {
          "type": "boolean",
          "title": "get total number of packets according to the filter except limit\\offset. For pagination purposes"
        },
        "inFilters": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/hrListOfString"
          },
          "title": "Additional sql IN filters. works the same way as filters {\"filter_name:\"filter_value\"}\nexcept you send not value but '\"filter_name: {values:[\"some\",\"list\",\"of\",\"values\"]}'.\nCAUTION(!) WE DO NOT RECOMMEND TO USE IT WITHIN GET requests"
        },
        "order": {
          "type": "string",
          "title": "sort direction DESC or ASC (DESC by default)"
        },
        "reverse": {
          "type": "boolean",
          "title": "if true - sort direction will be reversed"
        }
      }
    },
    "hrGetDeviceFramesResponse": {
      "type": "object",
      "properties": {
        "itemsTotal": {
          "type": "integer",
          "format": "int64",
          "title": "total numner of selected rows"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrDeviceFrameLog"
          },
          "title": "the array of selected device-frames logs"
        }
      }
    },
    "hrGetDeviceStatsLastTwoweeksResponse": {
      "type": "object",
      "properties": {
        "stats": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrDeviceStats"
          }
        }
      }
    },
    "hrGetDeviceStatsResponse": {
      "type": "object",
      "properties": {
        "packetCnt": {
          "type": "integer",
          "format": "int64",
          "title": "number of rx+tx packets for last 24 hours"
        },
        "espAvg": {
          "type": "number",
          "format": "float",
          "title": "average estimated signal power for last 24 hours"
        },
        "snrAvg": {
          "type": "number",
          "format": "float",
          "title": "average signal to noise ratio for last 24 hours"
        },
        "rssiAvg": {
          "type": "number",
          "format": "float",
          "title": "average received signal strength indication for last 24 hours"
        },
        "perAvg": {
          "type": "number",
          "format": "float",
          "title": "average packet error rate for last 24 hours"
        },
        "espLast": {
          "type": "number",
          "format": "double",
          "title": "last estimated signal power"
        },
        "snrLast": {
          "type": "number",
          "format": "double",
          "title": "last signal to noise ratio"
        },
        "rssiLast": {
          "type": "integer",
          "format": "int32",
          "title": "last received signal strength indication"
        },
        "sfLast": {
          "type": "integer",
          "format": "int64",
          "title": "last time spreading factor"
        },
        "rxLast": {
          "type": "string",
          "format": "date-time",
          "title": "last received uplink DateTime"
        },
        "txLast": {
          "type": "string",
          "format": "date-time",
          "title": "last received downlink DateTime"
        },
        "joinLast": {
          "type": "string",
          "format": "date-time",
          "title": "last successful join DateTime"
        },
        "perLast": {
          "type": "number",
          "format": "float",
          "title": "instantaneous packet error rate for last 20 packets history in device-session"
        }
      }
    },
    "hrGetFrameCountersRequest": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        }
      }
    },
    "hrGetFrameCountersResponse": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrFrameCounters"
          },
          "title": "list counters with frame counters by type"
        }
      }
    },
    "hrGetFrameSpeedRequest": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        },
        "end": {
          "type": "string",
          "title": "format RFC3339: 2006-01-02T15:04:05.000Z"
        }
      }
    },
    "hrGetFrameSpeedResponse": {
      "type": "object",
      "properties": {
        "counters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrFrameSpeed"
          },
          "title": "list counters with frames speed"
        }
      }
    },
    "hrGetGwStatsResponse": {
      "type": "object",
      "properties": {
        "radioHour": {
          "type": "number",
          "format": "float",
          "title": "last hour radio availability %"
        },
        "radioDay": {
          "type": "number",
          "format": "float",
          "title": "last day radio availability %"
        },
        "radioMonth": {
          "type": "number",
          "format": "float",
          "title": "last month radio availability %"
        }
      }
    },
    "hrGetIntegrationRepliesResponse": {
      "type": "object",
      "properties": {
        "itemsTotal": {
          "type": "integer",
          "format": "int64",
          "title": "total numner of selected rows"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/hrIntegrationReply"
          },
          "title": "the array of selected replies"
        }
      }
    },
    "hrIntegrationReply": {
      "type": "object",
      "properties": {
        "integrationUrl": {
          "type": "string",
          "title": "url from integration parameters where event informations sending"
        },
        "statusCode": {
          "type": "integer",
          "format": "int32",
          "title": "http status code of sent event (protobuf/as/integration/integration.proto)"
        },
        "statusCodeDescription": {
          "type": "string",
          "title": "description of http status code"
        },
        "applicationId": {
          "type": "string",
          "format": "int64",
          "title": "id of application where integration linked to"
        },
        "devEUI": {
          "type": "string",
          "title": "Device EUI"
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "title": "time of receining reply"
        }
      }
    },
    "hrListOfString": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "hrRXInfo": {
      "type": "object",
      "properties": {
        "gateway_id": {
          "type": "string",
          "title": "GatewayID"
        },
        "rssi": {
          "type": "integer",
          "format": "int32"
        },
        "lora_snr": {
          "type": "number",
          "format": "double"
        },
        "channel": {
          "type": "integer",
          "format": "int64"
        },
        "rf_chain": {
          "type": "integer",
          "format": "int64"
        },
        "board": {
          "type": "integer",
          "format": "int64"
        },
        "antenna": {
          "type": "integer",
          "format": "int64"
        },
        "location": {
          "$ref": "#/definitions/commonLocation"
        },
        "FineTimestampType": {
          "$ref": "#/definitions/gwFineTimestampType"
        },
        "gps_timestamp": {
          "type": "string"
        },
        "fine_timestamp": {
          "type": "string"
        },
        "context": {
          "type": "string"
        },
        "uplink_id": {
          "type": "string",
          "description": "Unique and random ID which can be used to correlate the uplink across multiple logs."
        }
      },
      "title": "for RXInfo item in uplink frames"
    },
    "hrStreamDeviceFramesCSVResponse": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "rows": {
          "type": "integer",
          "format": "int64"
        },
        "chunk": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
