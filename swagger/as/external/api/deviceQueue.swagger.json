{
  "swagger": "2.0",
  "info": {
    "title": "as/external/api/deviceQueue.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/devices/{dev_eui}/fcnt": {
      "get": {
        "summary": "GetNextDownlinkFCnt returns next downlink f-counter for the device\nused by clients who encrypt payload data themself",
        "operationId": "GetNextDownlinkFCnt",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetNextDownlinkFCntResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      }
    },
    "/api/devices/{dev_eui}/queue": {
      "get": {
        "summary": "List lists the items in the device-queue.",
        "operationId": "List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListDeviceQueueItemsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "countOnly",
            "description": "Return only the count, not the result-set.",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      },
      "delete": {
        "summary": "Flush flushes the downlink device-queue.",
        "operationId": "Flush",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          }
        },
        "parameters": [
          {
            "name": "dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      }
    },
    "/api/devices/{dev_eui}/queue/actilitystyle": {
      "post": {
        "summary": "ActilityEnqueue adds the given item to the device-queue with actility-styled request\\response.",
        "operationId": "ActilityEnqueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueActilityItemResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueActilityItemRequest"
            }
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      }
    },
    "/api/devices/{dev_eui}/queue_hex": {
      "post": {
        "summary": "EnqueueHex adds the given item to the device-queue with hex-payload.",
        "operationId": "EnqueueHex",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueItemResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueItemHexRequest"
            }
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      }
    },
    "/api/devices/{device_queue_item.dev_eui}/queue": {
      "post": {
        "summary": "Enqueue adds the given item to the device-queue.",
        "operationId": "Enqueue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueItemResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "device_queue_item.dev_eui",
            "description": "Device EUI (HEX encoded).",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiEnqueueDeviceQueueItemRequest"
            }
          }
        ],
        "tags": [
          "DeviceQueueService"
        ]
      }
    }
  },
  "definitions": {
    "apiDeviceQueueItem": {
      "type": "object",
      "properties": {
        "devEUI": {
          "type": "string",
          "description": "Device EUI (HEX encoded)."
        },
        "confirmed": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set this to true when an acknowledgement from the device is required.\nPlease note that this must not be used to guarantee a delivery."
        },
        "fCnt": {
          "type": "integer",
          "format": "int64",
          "description": "Optional. Downlink frame-counter. Us it only if you encrypt payload byself!\nBy default=0, means it will be set to queue as is and encrypted right before send the dl.\nSpecify the excact next fCnt here. Otherwise it will be droped.\nif fCnt\u003e0 set, we send data as is, without encryption."
        },
        "fPort": {
          "type": "integer",
          "format": "int64",
          "title": "FPort used (must be \u003e 0)"
        },
        "data": {
          "type": "string",
          "format": "byte",
          "description": "Base64 encoded data.\nOr use the json_object field when an application codec has been configured."
        },
        "jsonObject": {
          "type": "string",
          "description": "Optional. JSON object (string).\nOnly use this when an application codec has been configured that can convert\nthis object into binary form."
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "title": "Time to live (in seconds). You can specify the maximum time in queue for the item"
        },
        "messageId": {
          "type": "string",
          "title": "Optional. the id will be generated on server side if empty\nlater on in case of error you'll recieve the message with the ID"
        },
        "owner": {
          "type": "string",
          "title": "Optional field"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "service field for queue listing"
        },
        "timeoutAfter": {
          "type": "string",
          "format": "date-time",
          "title": "service field for queue listing"
        },
        "applicationID": {
          "type": "integer",
          "format": "int64",
          "title": "id of the application. Optional. For validation purposes"
        }
      }
    },
    "apiDownlinkItemHex": {
      "type": "object",
      "properties": {
        "confirmed": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set this to true when an acknowledgement from the device is required.\nPlease note that this must not be used to guarantee a delivery."
        },
        "fCnt": {
          "type": "integer",
          "format": "int64",
          "title": "Optional. Downlink frame-counter.\nThis will be automatically set on enquue.\nIf you encrypt data on your side - specify the fCnt here"
        },
        "fPort": {
          "type": "integer",
          "format": "int64",
          "title": "FPort used (must be \u003e 0)"
        },
        "data": {
          "type": "string",
          "title": "hex-encoded string"
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "title": "Optional. Time to live (in seconds). You can specify the maximum time in queue for the item"
        },
        "messageId": {
          "type": "string",
          "title": "Optional. the id will be generated on server side if empty\nlater on in case of error you'll recieve the message with the ID"
        }
      },
      "title": "DownlinkItemHex data payload as hex-string"
    },
    "apiEnqueueDeviceQueueActilityItemRequest": {
      "type": "object",
      "properties": {
        "devEUI": {
          "type": "string",
          "description": "Device EUI (HEX encoded)."
        },
        "confirmDownlink": {
          "type": "boolean",
          "format": "boolean",
          "description": "Set this to true when an acknowledgement from the device is required.\nPlease note that this must not be used to guarantee a delivery."
        },
        "flushDownlinkQueue": {
          "type": "boolean",
          "format": "boolean",
          "description": "Indicates to flush the LRC downlink queue before adding the new message to the queue.\nDefault is false."
        },
        "payloadHex": {
          "type": "string",
          "description": "Payload of the message in hexadecimal format."
        },
        "targetPorts": {
          "type": "string",
          "description": "LoRa port(s) targetted by the message."
        },
        "fCnt": {
          "type": "integer",
          "format": "int64",
          "title": "Downlink frame-counter.\nThis will be automatically set on enquue.\nIf you encrypt data on your side - specify the fCnt here"
        },
        "ttl": {
          "type": "integer",
          "format": "int64",
          "title": "Time to live (in seconds). You canspecify the maximum time in queue for the item"
        },
        "getFcnt": {
          "type": "boolean",
          "format": "boolean",
          "description": "! CAUTION !\nSet this to true when you really need to recieve next fCnt \nor you want to know the enqueue-status immediately (eg development purposes)\n! Please do not call the method in parallel if the flag set it to true. \nIt can be painfully slow.\nThe flag basicaly means 'put it right into queue'.\n! The next fCnt be returned only if you set f_cnt parmeter. \nOtherwise it allways be 0.\nIf you set it to false. It will be processed asynchronously.\nIn case of process with error - it will be sent as ErrorEvents via you apps.\nYou can match it by the message_id parameter."
        }
      }
    },
    "apiEnqueueDeviceQueueActilityItemResponse": {
      "type": "object",
      "properties": {
        "confirmDownlink": {
          "type": "boolean",
          "format": "boolean",
          "description": "Frame-counter for the enqueued payload."
        },
        "flushDownlinkQueue": {
          "type": "boolean",
          "format": "boolean"
        },
        "payloadHex": {
          "type": "string"
        },
        "targetPorts": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "msgId": {
          "type": "string",
          "title": "downlink message ID (UUID string). ! Generated for background tasks !"
        }
      }
    },
    "apiEnqueueDeviceQueueItemHexRequest": {
      "type": "object",
      "properties": {
        "devEUI": {
          "type": "string",
          "description": "Device EUI (HEX encoded)."
        },
        "deviceQueueItem": {
          "$ref": "#/definitions/apiDownlinkItemHex",
          "description": "Queue-item object to enqueue."
        },
        "getFcnt": {
          "type": "boolean",
          "format": "boolean",
          "description": "! CAUTION !\nSet this to true when you really need to recieve next fCnt \nor you want to know the enqueue-status immediately (eg development purposes)\n! Please do not call the method in parallel if the flag set it to true. \nIt can be painfully slow.\nThe flag basicaly means 'put it right into queue'.\n! The next fCnt be returned only if you set f_cnt parmeter. \nOtherwise it allways be 0.\nIf you set it to false. It will be processed asynchronously.\nIn case of process with error - it will be sent as ErrorEvents via you apps.\nYou can match it by the message_id parameter."
        }
      }
    },
    "apiEnqueueDeviceQueueItemRequest": {
      "type": "object",
      "properties": {
        "deviceQueueItem": {
          "$ref": "#/definitions/apiDeviceQueueItem",
          "description": "Queue-item object to enqueue."
        },
        "getFcnt": {
          "type": "boolean",
          "format": "boolean",
          "description": "! CAUTION !\nSet this to true when you really need to recieve next fCnt \nor you want to know the enqueue-status immediately (eg development purposes)\n! Please do not call the method in parallel if the flag set it to true. \nIt can be painfully slow.\nThe flag basicaly means 'put it right into queue'.\n! The next fCnt be returned only if you set f_cnt parmeter. \nOtherwise it allways be 0.\nIf you set it to false. It will be processed asynchronously.\nIn case of process with error - it will be sent as ErrorEvents via you apps.\nYou can match it by the message_id parameter."
        }
      }
    },
    "apiEnqueueDeviceQueueItemResponse": {
      "type": "object",
      "properties": {
        "fCnt": {
          "type": "integer",
          "format": "int64",
          "title": "Frame-counter for the enqueued payload.\nit allways zero if get_fcnt in request is false"
        },
        "msgId": {
          "type": "string",
          "title": "downlink message ID (UUID string). ! Generated for background tasks !"
        }
      }
    },
    "apiGetNextDownlinkFCntResponse": {
      "type": "object",
      "properties": {
        "fCnt": {
          "type": "integer",
          "format": "int64",
          "description": "Next downlink frame-counter."
        }
      }
    },
    "apiListDeviceQueueItemsResponse": {
      "type": "object",
      "properties": {
        "deviceQueueItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiDeviceQueueItem"
          },
          "description": "The device queue items."
        },
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of items in the queue."
        }
      }
    }
  }
}
