// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: handyrusty/hr.proto

package handyrusty

import (
	context "context"
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	HandyRustyService_GetVersion_FullMethodName                           = "/hr.HandyRustyService/GetVersion"
	HandyRustyService_GetDeviceCounters_FullMethodName                    = "/hr.HandyRustyService/GetDeviceCounters"
	HandyRustyService_GetGatewayCounters_FullMethodName                   = "/hr.HandyRustyService/GetGatewayCounters"
	HandyRustyService_GetFrameCounters_FullMethodName                     = "/hr.HandyRustyService/GetFrameCounters"
	HandyRustyService_GetFrameSpeed_FullMethodName                        = "/hr.HandyRustyService/GetFrameSpeed"
	HandyRustyService_ExecCommand_FullMethodName                          = "/hr.HandyRustyService/ExecCommand"
	HandyRustyService_GetDeviceFramesLog_FullMethodName                   = "/hr.HandyRustyService/GetDeviceFramesLog"
	HandyRustyService_StreamDeviceFramesLogCSV_FullMethodName             = "/hr.HandyRustyService/StreamDeviceFramesLogCSV"
	HandyRustyService_GetCurrentState_FullMethodName                      = "/hr.HandyRustyService/GetCurrentState"
	HandyRustyService_StoreIntegrationReplies_FullMethodName              = "/hr.HandyRustyService/StoreIntegrationReplies"
	HandyRustyService_GetIntegrationReplies_FullMethodName                = "/hr.HandyRustyService/GetIntegrationReplies"
	HandyRustyService_GetGatewayLogs_FullMethodName                       = "/hr.HandyRustyService/GetGatewayLogs"
	HandyRustyService_GetGwStats_FullMethodName                           = "/hr.HandyRustyService/GetGwStats"
	HandyRustyService_GetDeviceStats_FullMethodName                       = "/hr.HandyRustyService/GetDeviceStats"
	HandyRustyService_GetDeviceStatsLastTwoweeks_FullMethodName           = "/hr.HandyRustyService/GetDeviceStatsLastTwoweeks"
	HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_FullMethodName = "/hr.HandyRustyService/GetDeviceStatsLastTwoweeksAggregated"
	HandyRustyService_GetAveragesForDeviceList_FullMethodName             = "/hr.HandyRustyService/GetAveragesForDeviceList"
)

// HandyRustyServiceClient is the client API for HandyRustyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type HandyRustyServiceClient interface {
	// GetVersion returns the ChirpStack Network Server version.
	GetVersion(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetDeviceCounters(ctx context.Context, in *GetDeviceCountersRequest, opts ...grpc.CallOption) (*GetDeviceCountersResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetGatewayCounters(ctx context.Context, in *GetGatewayCountersRequest, opts ...grpc.CallOption) (*GetGatewayCountersResponse, error)
	// GetFrameCounters returns the summary-counters of frames by type
	GetFrameCounters(ctx context.Context, in *GetFrameCountersRequest, opts ...grpc.CallOption) (*GetFrameCountersResponse, error)
	// GetFramesSpeed returns the frames per minute array for given timedate gap
	GetFrameSpeed(ctx context.Context, in *GetFrameSpeedRequest, opts ...grpc.CallOption) (*GetFrameSpeedResponse, error)
	// ExecCommand sends command to the gateway and returns the answer
	ExecCommand(ctx context.Context, in *ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with device-frame logs
	GetDeviceFramesLog(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	StreamDeviceFramesLogCSV(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error)
	// GetCurrentState returns items for monitoring purposes.
	GetCurrentState(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCurrentStateResponse, error)
	// Store to clickhouse replies of integration event notifications
	StoreIntegrationReplies(ctx context.Context, in *StoreIntegrationReplyRequest, opts ...grpc.CallOption) (*StoreIntegrationReplyResponse, error)
	// Get replies of integration event notifications
	GetIntegrationReplies(ctx context.Context, in *GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*GetIntegrationRepliesResponse, error)
	// Get dictionaries from clickhouse
	GetGatewayLogs(ctx context.Context, in *LogsGatewayRequest, opts ...grpc.CallOption) (*LogsGatewayResponse, error)
	// Get stats for gateway from clickhouse
	GetGwStats(ctx context.Context, in *GetGwStatsRequest, opts ...grpc.CallOption) (*GetGwStatsResponse, error)
	// Get stats for device from clickhouse current
	GetDeviceStats(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetAveragesForDeviceList(ctx context.Context, in *GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*GetAveragesForDeviceListResponse, error)
}

type handyRustyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHandyRustyServiceClient(cc grpc.ClientConnInterface) HandyRustyServiceClient {
	return &handyRustyServiceClient{cc}
}

func (c *handyRustyServiceClient) GetVersion(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetVersion_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceCounters(ctx context.Context, in *GetDeviceCountersRequest, opts ...grpc.CallOption) (*GetDeviceCountersResponse, error) {
	out := new(GetDeviceCountersResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetDeviceCounters_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGatewayCounters(ctx context.Context, in *GetGatewayCountersRequest, opts ...grpc.CallOption) (*GetGatewayCountersResponse, error) {
	out := new(GetGatewayCountersResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetGatewayCounters_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameCounters(ctx context.Context, in *GetFrameCountersRequest, opts ...grpc.CallOption) (*GetFrameCountersResponse, error) {
	out := new(GetFrameCountersResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetFrameCounters_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameSpeed(ctx context.Context, in *GetFrameSpeedRequest, opts ...grpc.CallOption) (*GetFrameSpeedResponse, error) {
	out := new(GetFrameSpeedResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetFrameSpeed_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) ExecCommand(ctx context.Context, in *ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error) {
	out := new(gw.GatewayCommandExecResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_ExecCommand_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceFramesLog(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*GetDeviceFramesLogResponse, error) {
	out := new(GetDeviceFramesLogResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetDeviceFramesLog_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StreamDeviceFramesLogCSV(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error) {
	stream, err := c.cc.NewStream(ctx, &HandyRustyService_ServiceDesc.Streams[0], HandyRustyService_StreamDeviceFramesLogCSV_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &handyRustyServiceStreamDeviceFramesLogCSVClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HandyRustyService_StreamDeviceFramesLogCSVClient interface {
	Recv() (*StreamDeviceFramesLogCSVResponse, error)
	grpc.ClientStream
}

type handyRustyServiceStreamDeviceFramesLogCSVClient struct {
	grpc.ClientStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVClient) Recv() (*StreamDeviceFramesLogCSVResponse, error) {
	m := new(StreamDeviceFramesLogCSVResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *handyRustyServiceClient) GetCurrentState(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*GetCurrentStateResponse, error) {
	out := new(GetCurrentStateResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetCurrentState_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StoreIntegrationReplies(ctx context.Context, in *StoreIntegrationReplyRequest, opts ...grpc.CallOption) (*StoreIntegrationReplyResponse, error) {
	out := new(StoreIntegrationReplyResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_StoreIntegrationReplies_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetIntegrationReplies(ctx context.Context, in *GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*GetIntegrationRepliesResponse, error) {
	out := new(GetIntegrationRepliesResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetIntegrationReplies_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGatewayLogs(ctx context.Context, in *LogsGatewayRequest, opts ...grpc.CallOption) (*LogsGatewayResponse, error) {
	out := new(LogsGatewayResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetGatewayLogs_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGwStats(ctx context.Context, in *GetGwStatsRequest, opts ...grpc.CallOption) (*GetGwStatsResponse, error) {
	out := new(GetGwStatsResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetGwStats_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStats(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsResponse, error) {
	out := new(GetDeviceStatsResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetDeviceStats_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeks(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetDeviceStatsLastTwoweeks_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *GetDeviceStatsRequest, opts ...grpc.CallOption) (*GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetAveragesForDeviceList(ctx context.Context, in *GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*GetAveragesForDeviceListResponse, error) {
	out := new(GetAveragesForDeviceListResponse)
	err := c.cc.Invoke(ctx, HandyRustyService_GetAveragesForDeviceList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandyRustyServiceServer is the server API for HandyRustyService service.
// All implementations must embed UnimplementedHandyRustyServiceServer
// for forward compatibility
type HandyRustyServiceServer interface {
	// GetVersion returns the ChirpStack Network Server version.
	GetVersion(context.Context, *emptypb.Empty) (*GetVersionResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetDeviceCounters(context.Context, *GetDeviceCountersRequest) (*GetDeviceCountersResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetGatewayCounters(context.Context, *GetGatewayCountersRequest) (*GetGatewayCountersResponse, error)
	// GetFrameCounters returns the summary-counters of frames by type
	GetFrameCounters(context.Context, *GetFrameCountersRequest) (*GetFrameCountersResponse, error)
	// GetFramesSpeed returns the frames per minute array for given timedate gap
	GetFrameSpeed(context.Context, *GetFrameSpeedRequest) (*GetFrameSpeedResponse, error)
	// ExecCommand sends command to the gateway and returns the answer
	ExecCommand(context.Context, *ExecCommandRequest) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with device-frame logs
	GetDeviceFramesLog(context.Context, *GetDeviceFramesLogRequest) (*GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	StreamDeviceFramesLogCSV(*GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error
	// GetCurrentState returns items for monitoring purposes.
	GetCurrentState(context.Context, *emptypb.Empty) (*GetCurrentStateResponse, error)
	// Store to clickhouse replies of integration event notifications
	StoreIntegrationReplies(context.Context, *StoreIntegrationReplyRequest) (*StoreIntegrationReplyResponse, error)
	// Get replies of integration event notifications
	GetIntegrationReplies(context.Context, *GetIntegrationRepliesRequest) (*GetIntegrationRepliesResponse, error)
	// Get dictionaries from clickhouse
	GetGatewayLogs(context.Context, *LogsGatewayRequest) (*LogsGatewayResponse, error)
	// Get stats for gateway from clickhouse
	GetGwStats(context.Context, *GetGwStatsRequest) (*GetGwStatsResponse, error)
	// Get stats for device from clickhouse current
	GetDeviceStats(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetAveragesForDeviceList(context.Context, *GetAveragesForDeviceListRequest) (*GetAveragesForDeviceListResponse, error)
	mustEmbedUnimplementedHandyRustyServiceServer()
}

// UnimplementedHandyRustyServiceServer must be embedded to have forward compatible implementations.
type UnimplementedHandyRustyServiceServer struct {
}

func (UnimplementedHandyRustyServiceServer) GetVersion(context.Context, *emptypb.Empty) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetDeviceCounters(context.Context, *GetDeviceCountersRequest) (*GetDeviceCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceCounters not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetGatewayCounters(context.Context, *GetGatewayCountersRequest) (*GetGatewayCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayCounters not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetFrameCounters(context.Context, *GetFrameCountersRequest) (*GetFrameCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameCounters not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetFrameSpeed(context.Context, *GetFrameSpeedRequest) (*GetFrameSpeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameSpeed not implemented")
}
func (UnimplementedHandyRustyServiceServer) ExecCommand(context.Context, *ExecCommandRequest) (*gw.GatewayCommandExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecCommand not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetDeviceFramesLog(context.Context, *GetDeviceFramesLogRequest) (*GetDeviceFramesLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceFramesLog not implemented")
}
func (UnimplementedHandyRustyServiceServer) StreamDeviceFramesLogCSV(*GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeviceFramesLogCSV not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetCurrentState(context.Context, *emptypb.Empty) (*GetCurrentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentState not implemented")
}
func (UnimplementedHandyRustyServiceServer) StoreIntegrationReplies(context.Context, *StoreIntegrationReplyRequest) (*StoreIntegrationReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreIntegrationReplies not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetIntegrationReplies(context.Context, *GetIntegrationRepliesRequest) (*GetIntegrationRepliesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIntegrationReplies not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetGatewayLogs(context.Context, *LogsGatewayRequest) (*LogsGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayLogs not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetGwStats(context.Context, *GetGwStatsRequest) (*GetGwStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGwStats not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetDeviceStats(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStats not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeks(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeks not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeksAggregated(context.Context, *GetDeviceStatsRequest) (*GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeksAggregated not implemented")
}
func (UnimplementedHandyRustyServiceServer) GetAveragesForDeviceList(context.Context, *GetAveragesForDeviceListRequest) (*GetAveragesForDeviceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAveragesForDeviceList not implemented")
}
func (UnimplementedHandyRustyServiceServer) mustEmbedUnimplementedHandyRustyServiceServer() {}

// UnsafeHandyRustyServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to HandyRustyServiceServer will
// result in compilation errors.
type UnsafeHandyRustyServiceServer interface {
	mustEmbedUnimplementedHandyRustyServiceServer()
}

func RegisterHandyRustyServiceServer(s grpc.ServiceRegistrar, srv HandyRustyServiceServer) {
	s.RegisterService(&HandyRustyService_ServiceDesc, srv)
}

func _HandyRustyService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetVersion_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetVersion(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetDeviceCounters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceCounters(ctx, req.(*GetDeviceCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGatewayCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGatewayCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetGatewayCounters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGatewayCounters(ctx, req.(*GetGatewayCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetFrameCounters_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, req.(*GetFrameCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetFrameSpeed_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, req.(*GetFrameSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_ExecCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_ExecCommand_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, req.(*ExecCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceFramesLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceFramesLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetDeviceFramesLog_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, req.(*GetDeviceFramesLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StreamDeviceFramesLogCSV_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDeviceFramesLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HandyRustyServiceServer).StreamDeviceFramesLogCSV(m, &handyRustyServiceStreamDeviceFramesLogCSVServer{stream})
}

type HandyRustyService_StreamDeviceFramesLogCSVServer interface {
	Send(*StreamDeviceFramesLogCSVResponse) error
	grpc.ServerStream
}

type handyRustyServiceStreamDeviceFramesLogCSVServer struct {
	grpc.ServerStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVServer) Send(m *StreamDeviceFramesLogCSVResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HandyRustyService_GetCurrentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetCurrentState_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StoreIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreIntegrationReplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).StoreIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_StoreIntegrationReplies_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).StoreIntegrationReplies(ctx, req.(*StoreIntegrationReplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIntegrationRepliesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetIntegrationReplies_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, req.(*GetIntegrationRepliesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGatewayLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogsGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGatewayLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetGatewayLogs_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGatewayLogs(ctx, req.(*LogsGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGwStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGwStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetGwStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, req.(*GetGwStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetDeviceStats_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, req.(*GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetDeviceStatsLastTwoweeks_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, req.(*GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, req.(*GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetAveragesForDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAveragesForDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: HandyRustyService_GetAveragesForDeviceList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, req.(*GetAveragesForDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// HandyRustyService_ServiceDesc is the grpc.ServiceDesc for HandyRustyService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var HandyRustyService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "hr.HandyRustyService",
	HandlerType: (*HandyRustyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _HandyRustyService_GetVersion_Handler,
		},
		{
			MethodName: "GetDeviceCounters",
			Handler:    _HandyRustyService_GetDeviceCounters_Handler,
		},
		{
			MethodName: "GetGatewayCounters",
			Handler:    _HandyRustyService_GetGatewayCounters_Handler,
		},
		{
			MethodName: "GetFrameCounters",
			Handler:    _HandyRustyService_GetFrameCounters_Handler,
		},
		{
			MethodName: "GetFrameSpeed",
			Handler:    _HandyRustyService_GetFrameSpeed_Handler,
		},
		{
			MethodName: "ExecCommand",
			Handler:    _HandyRustyService_ExecCommand_Handler,
		},
		{
			MethodName: "GetDeviceFramesLog",
			Handler:    _HandyRustyService_GetDeviceFramesLog_Handler,
		},
		{
			MethodName: "GetCurrentState",
			Handler:    _HandyRustyService_GetCurrentState_Handler,
		},
		{
			MethodName: "StoreIntegrationReplies",
			Handler:    _HandyRustyService_StoreIntegrationReplies_Handler,
		},
		{
			MethodName: "GetIntegrationReplies",
			Handler:    _HandyRustyService_GetIntegrationReplies_Handler,
		},
		{
			MethodName: "GetGatewayLogs",
			Handler:    _HandyRustyService_GetGatewayLogs_Handler,
		},
		{
			MethodName: "GetGwStats",
			Handler:    _HandyRustyService_GetGwStats_Handler,
		},
		{
			MethodName: "GetDeviceStats",
			Handler:    _HandyRustyService_GetDeviceStats_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeks",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeksAggregated",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler,
		},
		{
			MethodName: "GetAveragesForDeviceList",
			Handler:    _HandyRustyService_GetAveragesForDeviceList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamDeviceFramesLogCSV",
			Handler:       _HandyRustyService_StreamDeviceFramesLogCSV_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "handyrusty/hr.proto",
}
