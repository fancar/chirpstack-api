// Code generated by protoc-gen-go. DO NOT EDIT.
// source: handyrusty/hr.proto

package handyrusty

import (
	context "context"
	fmt "fmt"
	common "github.com/brocaar/chirpstack-api/go/v3/common"
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogsGwItem struct {
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	//code of event
	Code int64 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// Gateway ID (HEX encoded).
	GatewayId            string   `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogsGwItem) Reset()         { *m = LogsGwItem{} }
func (m *LogsGwItem) String() string { return proto.CompactTextString(m) }
func (*LogsGwItem) ProtoMessage()    {}
func (*LogsGwItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{0}
}

func (m *LogsGwItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsGwItem.Unmarshal(m, b)
}
func (m *LogsGwItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsGwItem.Marshal(b, m, deterministic)
}
func (m *LogsGwItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsGwItem.Merge(m, src)
}
func (m *LogsGwItem) XXX_Size() int {
	return xxx_messageInfo_LogsGwItem.Size(m)
}
func (m *LogsGwItem) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsGwItem.DiscardUnknown(m)
}

var xxx_messageInfo_LogsGwItem proto.InternalMessageInfo

func (m *LogsGwItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *LogsGwItem) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LogsGwItem) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

type LogsGatewayRequest struct {
	// Max number of nodes to return in the result-set.
	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset of the result-set (for pagination).
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// you must specify the filed
	OrganizationId int64 `protobuf:"varint,3,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	// list of gateways (hex-strings). All the gws must be under the same organization
	GwList []string `protobuf:"bytes,4,rep,name=gw_list,json=gwList,proto3" json:"gw_list,omitempty"`
	// code of event according to dictionary gwlogs_state
	Code int64 `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
	// Timestamp for filter from the date.
	StartTimestamp *timestamp.Timestamp `protobuf:"bytes,6,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	// Timestamp for filtering up to the date.
	EndTimestamp         *timestamp.Timestamp `protobuf:"bytes,7,opt,name=end_timestamp,json=endTimestamp,proto3" json:"end_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogsGatewayRequest) Reset()         { *m = LogsGatewayRequest{} }
func (m *LogsGatewayRequest) String() string { return proto.CompactTextString(m) }
func (*LogsGatewayRequest) ProtoMessage()    {}
func (*LogsGatewayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{1}
}

func (m *LogsGatewayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsGatewayRequest.Unmarshal(m, b)
}
func (m *LogsGatewayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsGatewayRequest.Marshal(b, m, deterministic)
}
func (m *LogsGatewayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsGatewayRequest.Merge(m, src)
}
func (m *LogsGatewayRequest) XXX_Size() int {
	return xxx_messageInfo_LogsGatewayRequest.Size(m)
}
func (m *LogsGatewayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsGatewayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogsGatewayRequest proto.InternalMessageInfo

func (m *LogsGatewayRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *LogsGatewayRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *LogsGatewayRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *LogsGatewayRequest) GetGwList() []string {
	if m != nil {
		return m.GwList
	}
	return nil
}

func (m *LogsGatewayRequest) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *LogsGatewayRequest) GetStartTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.StartTimestamp
	}
	return nil
}

func (m *LogsGatewayRequest) GetEndTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.EndTimestamp
	}
	return nil
}

type LogsGatewayResponse struct {
	// Total number of nodes available within the result-set.
	TotalCount int64 `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	// result array
	Result               []*LogsGwItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *LogsGatewayResponse) Reset()         { *m = LogsGatewayResponse{} }
func (m *LogsGatewayResponse) String() string { return proto.CompactTextString(m) }
func (*LogsGatewayResponse) ProtoMessage()    {}
func (*LogsGatewayResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{2}
}

func (m *LogsGatewayResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogsGatewayResponse.Unmarshal(m, b)
}
func (m *LogsGatewayResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogsGatewayResponse.Marshal(b, m, deterministic)
}
func (m *LogsGatewayResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogsGatewayResponse.Merge(m, src)
}
func (m *LogsGatewayResponse) XXX_Size() int {
	return xxx_messageInfo_LogsGatewayResponse.Size(m)
}
func (m *LogsGatewayResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogsGatewayResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogsGatewayResponse proto.InternalMessageInfo

func (m *LogsGatewayResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *LogsGatewayResponse) GetResult() []*LogsGwItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetIntegrationRepliesRequest struct {
	// you can specify offset (for pagination)
	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// you can specify rows limit
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// id of organization where integration linked to
	OrganisationId int64 `protobuf:"varint,3,opt,name=organisation_id,json=organisationId,proto3" json:"organisation_id,omitempty"`
	// id of routing profile
	RoutingProfileId int64 `protobuf:"varint,4,opt,name=routing_profile_id,json=routingProfileId,proto3" json:"routing_profile_id,omitempty"`
	// Device EUI
	DevEui string `protobuf:"bytes,5,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// http status != 200
	IsError bool `protobuf:"varint,6,opt,name=is_error,json=isError,proto3" json:"is_error,omitempty"`
	// You can specify start DateTime point.
	Start *timestamp.Timestamp `protobuf:"bytes,7,opt,name=start,proto3" json:"start,omitempty"`
	// You can specify end DateTime point.
	End                  *timestamp.Timestamp `protobuf:"bytes,8,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetIntegrationRepliesRequest) Reset()         { *m = GetIntegrationRepliesRequest{} }
func (m *GetIntegrationRepliesRequest) String() string { return proto.CompactTextString(m) }
func (*GetIntegrationRepliesRequest) ProtoMessage()    {}
func (*GetIntegrationRepliesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{3}
}

func (m *GetIntegrationRepliesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIntegrationRepliesRequest.Unmarshal(m, b)
}
func (m *GetIntegrationRepliesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIntegrationRepliesRequest.Marshal(b, m, deterministic)
}
func (m *GetIntegrationRepliesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIntegrationRepliesRequest.Merge(m, src)
}
func (m *GetIntegrationRepliesRequest) XXX_Size() int {
	return xxx_messageInfo_GetIntegrationRepliesRequest.Size(m)
}
func (m *GetIntegrationRepliesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIntegrationRepliesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIntegrationRepliesRequest proto.InternalMessageInfo

func (m *GetIntegrationRepliesRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetIntegrationRepliesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetIntegrationRepliesRequest) GetOrganisationId() int64 {
	if m != nil {
		return m.OrganisationId
	}
	return 0
}

func (m *GetIntegrationRepliesRequest) GetRoutingProfileId() int64 {
	if m != nil {
		return m.RoutingProfileId
	}
	return 0
}

func (m *GetIntegrationRepliesRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *GetIntegrationRepliesRequest) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *GetIntegrationRepliesRequest) GetStart() *timestamp.Timestamp {
	if m != nil {
		return m.Start
	}
	return nil
}

func (m *GetIntegrationRepliesRequest) GetEnd() *timestamp.Timestamp {
	if m != nil {
		return m.End
	}
	return nil
}

type GetIntegrationRepliesResponse struct {
	// total numner of selected rows
	ItemsTotal uint32 `protobuf:"varint,1,opt,name=items_total,json=itemsTotal,proto3" json:"items_total,omitempty"`
	// the array of selected replies
	Result               []*IntegrationReply `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetIntegrationRepliesResponse) Reset()         { *m = GetIntegrationRepliesResponse{} }
func (m *GetIntegrationRepliesResponse) String() string { return proto.CompactTextString(m) }
func (*GetIntegrationRepliesResponse) ProtoMessage()    {}
func (*GetIntegrationRepliesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{4}
}

func (m *GetIntegrationRepliesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIntegrationRepliesResponse.Unmarshal(m, b)
}
func (m *GetIntegrationRepliesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIntegrationRepliesResponse.Marshal(b, m, deterministic)
}
func (m *GetIntegrationRepliesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIntegrationRepliesResponse.Merge(m, src)
}
func (m *GetIntegrationRepliesResponse) XXX_Size() int {
	return xxx_messageInfo_GetIntegrationRepliesResponse.Size(m)
}
func (m *GetIntegrationRepliesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIntegrationRepliesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIntegrationRepliesResponse proto.InternalMessageInfo

func (m *GetIntegrationRepliesResponse) GetItemsTotal() uint32 {
	if m != nil {
		return m.ItemsTotal
	}
	return 0
}

func (m *GetIntegrationRepliesResponse) GetResult() []*IntegrationReply {
	if m != nil {
		return m.Result
	}
	return nil
}

type IntegrationReply struct {
	// url from integration parameters where event informations sending
	IntegrationUrl string `protobuf:"bytes,1,opt,name=integration_url,json=integrationUrl,proto3" json:"integration_url,omitempty"`
	// http status code of sent event (protobuf/as/integration/integration.proto)
	StatusCode int32 `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	// description of http status code
	StatusCodeDescription string `protobuf:"bytes,3,opt,name=status_code_description,json=statusCodeDescription,proto3" json:"status_code_description,omitempty"`
	// id of application where integration linked to
	ApplicationId int64 `protobuf:"varint,4,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	// Device EUI
	DevEui string `protobuf:"bytes,5,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	// time of receining reply
	Time                 *timestamp.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *IntegrationReply) Reset()         { *m = IntegrationReply{} }
func (m *IntegrationReply) String() string { return proto.CompactTextString(m) }
func (*IntegrationReply) ProtoMessage()    {}
func (*IntegrationReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{5}
}

func (m *IntegrationReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntegrationReply.Unmarshal(m, b)
}
func (m *IntegrationReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntegrationReply.Marshal(b, m, deterministic)
}
func (m *IntegrationReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntegrationReply.Merge(m, src)
}
func (m *IntegrationReply) XXX_Size() int {
	return xxx_messageInfo_IntegrationReply.Size(m)
}
func (m *IntegrationReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IntegrationReply.DiscardUnknown(m)
}

var xxx_messageInfo_IntegrationReply proto.InternalMessageInfo

func (m *IntegrationReply) GetIntegrationUrl() string {
	if m != nil {
		return m.IntegrationUrl
	}
	return ""
}

func (m *IntegrationReply) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *IntegrationReply) GetStatusCodeDescription() string {
	if m != nil {
		return m.StatusCodeDescription
	}
	return ""
}

func (m *IntegrationReply) GetApplicationId() int64 {
	if m != nil {
		return m.ApplicationId
	}
	return 0
}

func (m *IntegrationReply) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

func (m *IntegrationReply) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type StoreIntegrationReplyRequest struct {
	// Organization ID
	OrganisationId int64 `protobuf:"varint,1,opt,name=organisation_id,json=organisationId,proto3" json:"organisation_id,omitempty"`
	// AS Routing Profile ID
	RoutingProfileId int64 `protobuf:"varint,2,opt,name=routing_profile_id,json=routingProfileId,proto3" json:"routing_profile_id,omitempty"`
	// reply for saving
	Repliy               *IntegrationReply `protobuf:"bytes,3,opt,name=repliy,proto3" json:"repliy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StoreIntegrationReplyRequest) Reset()         { *m = StoreIntegrationReplyRequest{} }
func (m *StoreIntegrationReplyRequest) String() string { return proto.CompactTextString(m) }
func (*StoreIntegrationReplyRequest) ProtoMessage()    {}
func (*StoreIntegrationReplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{6}
}

func (m *StoreIntegrationReplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreIntegrationReplyRequest.Unmarshal(m, b)
}
func (m *StoreIntegrationReplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreIntegrationReplyRequest.Marshal(b, m, deterministic)
}
func (m *StoreIntegrationReplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreIntegrationReplyRequest.Merge(m, src)
}
func (m *StoreIntegrationReplyRequest) XXX_Size() int {
	return xxx_messageInfo_StoreIntegrationReplyRequest.Size(m)
}
func (m *StoreIntegrationReplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreIntegrationReplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StoreIntegrationReplyRequest proto.InternalMessageInfo

func (m *StoreIntegrationReplyRequest) GetOrganisationId() int64 {
	if m != nil {
		return m.OrganisationId
	}
	return 0
}

func (m *StoreIntegrationReplyRequest) GetRoutingProfileId() int64 {
	if m != nil {
		return m.RoutingProfileId
	}
	return 0
}

func (m *StoreIntegrationReplyRequest) GetRepliy() *IntegrationReply {
	if m != nil {
		return m.Repliy
	}
	return nil
}

type StoreIntegrationReplyResponse struct {
	StoredCount          int64    `protobuf:"varint,1,opt,name=stored_count,json=storedCount,proto3" json:"stored_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoreIntegrationReplyResponse) Reset()         { *m = StoreIntegrationReplyResponse{} }
func (m *StoreIntegrationReplyResponse) String() string { return proto.CompactTextString(m) }
func (*StoreIntegrationReplyResponse) ProtoMessage()    {}
func (*StoreIntegrationReplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{7}
}

func (m *StoreIntegrationReplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoreIntegrationReplyResponse.Unmarshal(m, b)
}
func (m *StoreIntegrationReplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoreIntegrationReplyResponse.Marshal(b, m, deterministic)
}
func (m *StoreIntegrationReplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoreIntegrationReplyResponse.Merge(m, src)
}
func (m *StoreIntegrationReplyResponse) XXX_Size() int {
	return xxx_messageInfo_StoreIntegrationReplyResponse.Size(m)
}
func (m *StoreIntegrationReplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoreIntegrationReplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoreIntegrationReplyResponse proto.InternalMessageInfo

func (m *StoreIntegrationReplyResponse) GetStoredCount() int64 {
	if m != nil {
		return m.StoredCount
	}
	return 0
}

type GetCurrentStateResponse struct {
	// DateTime of last packet saved in wireless-loger
	WlLastPacket string `protobuf:"bytes,1,opt,name=wl_last_packet,json=wlLastPacket,proto3" json:"wl_last_packet,omitempty"`
	// the same as previuos in unixTime format
	WlLastPacketUnix     int64    `protobuf:"varint,2,opt,name=wl_last_packet_unix,json=wlLastPacketUnix,proto3" json:"wl_last_packet_unix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCurrentStateResponse) Reset()         { *m = GetCurrentStateResponse{} }
func (m *GetCurrentStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetCurrentStateResponse) ProtoMessage()    {}
func (*GetCurrentStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{8}
}

func (m *GetCurrentStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrentStateResponse.Unmarshal(m, b)
}
func (m *GetCurrentStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrentStateResponse.Marshal(b, m, deterministic)
}
func (m *GetCurrentStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrentStateResponse.Merge(m, src)
}
func (m *GetCurrentStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetCurrentStateResponse.Size(m)
}
func (m *GetCurrentStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrentStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrentStateResponse proto.InternalMessageInfo

func (m *GetCurrentStateResponse) GetWlLastPacket() string {
	if m != nil {
		return m.WlLastPacket
	}
	return ""
}

func (m *GetCurrentStateResponse) GetWlLastPacketUnix() int64 {
	if m != nil {
		return m.WlLastPacketUnix
	}
	return 0
}

type StreamDeviceFramesLogCSVResponse struct {
	// Types that are valid to be assigned to Size:
	//	*StreamDeviceFramesLogCSVResponse_Current
	//	*StreamDeviceFramesLogCSVResponse_Total
	Size isStreamDeviceFramesLogCSVResponse_Size `protobuf_oneof:"size"`
	// Types that are valid to be assigned to Data:
	//	*StreamDeviceFramesLogCSVResponse_Rows
	//	*StreamDeviceFramesLogCSVResponse_Chunk
	Data                 isStreamDeviceFramesLogCSVResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *StreamDeviceFramesLogCSVResponse) Reset()         { *m = StreamDeviceFramesLogCSVResponse{} }
func (m *StreamDeviceFramesLogCSVResponse) String() string { return proto.CompactTextString(m) }
func (*StreamDeviceFramesLogCSVResponse) ProtoMessage()    {}
func (*StreamDeviceFramesLogCSVResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{9}
}

func (m *StreamDeviceFramesLogCSVResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamDeviceFramesLogCSVResponse.Unmarshal(m, b)
}
func (m *StreamDeviceFramesLogCSVResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamDeviceFramesLogCSVResponse.Marshal(b, m, deterministic)
}
func (m *StreamDeviceFramesLogCSVResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamDeviceFramesLogCSVResponse.Merge(m, src)
}
func (m *StreamDeviceFramesLogCSVResponse) XXX_Size() int {
	return xxx_messageInfo_StreamDeviceFramesLogCSVResponse.Size(m)
}
func (m *StreamDeviceFramesLogCSVResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamDeviceFramesLogCSVResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamDeviceFramesLogCSVResponse proto.InternalMessageInfo

type isStreamDeviceFramesLogCSVResponse_Size interface {
	isStreamDeviceFramesLogCSVResponse_Size()
}

type StreamDeviceFramesLogCSVResponse_Current struct {
	Current uint32 `protobuf:"varint,1,opt,name=current,proto3,oneof"`
}

type StreamDeviceFramesLogCSVResponse_Total struct {
	Total uint32 `protobuf:"varint,2,opt,name=total,proto3,oneof"`
}

func (*StreamDeviceFramesLogCSVResponse_Current) isStreamDeviceFramesLogCSVResponse_Size() {}

func (*StreamDeviceFramesLogCSVResponse_Total) isStreamDeviceFramesLogCSVResponse_Size() {}

func (m *StreamDeviceFramesLogCSVResponse) GetSize() isStreamDeviceFramesLogCSVResponse_Size {
	if m != nil {
		return m.Size
	}
	return nil
}

func (m *StreamDeviceFramesLogCSVResponse) GetCurrent() uint32 {
	if x, ok := m.GetSize().(*StreamDeviceFramesLogCSVResponse_Current); ok {
		return x.Current
	}
	return 0
}

func (m *StreamDeviceFramesLogCSVResponse) GetTotal() uint32 {
	if x, ok := m.GetSize().(*StreamDeviceFramesLogCSVResponse_Total); ok {
		return x.Total
	}
	return 0
}

type isStreamDeviceFramesLogCSVResponse_Data interface {
	isStreamDeviceFramesLogCSVResponse_Data()
}

type StreamDeviceFramesLogCSVResponse_Rows struct {
	Rows uint32 `protobuf:"varint,3,opt,name=rows,proto3,oneof"`
}

type StreamDeviceFramesLogCSVResponse_Chunk struct {
	Chunk []byte `protobuf:"bytes,4,opt,name=chunk,proto3,oneof"`
}

func (*StreamDeviceFramesLogCSVResponse_Rows) isStreamDeviceFramesLogCSVResponse_Data() {}

func (*StreamDeviceFramesLogCSVResponse_Chunk) isStreamDeviceFramesLogCSVResponse_Data() {}

func (m *StreamDeviceFramesLogCSVResponse) GetData() isStreamDeviceFramesLogCSVResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *StreamDeviceFramesLogCSVResponse) GetRows() uint32 {
	if x, ok := m.GetData().(*StreamDeviceFramesLogCSVResponse_Rows); ok {
		return x.Rows
	}
	return 0
}

func (m *StreamDeviceFramesLogCSVResponse) GetChunk() []byte {
	if x, ok := m.GetData().(*StreamDeviceFramesLogCSVResponse_Chunk); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamDeviceFramesLogCSVResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamDeviceFramesLogCSVResponse_Current)(nil),
		(*StreamDeviceFramesLogCSVResponse_Total)(nil),
		(*StreamDeviceFramesLogCSVResponse_Rows)(nil),
		(*StreamDeviceFramesLogCSVResponse_Chunk)(nil),
	}
}

type GetDeviceFramesLogRequest struct {
	// you can specify offset (for pagination)
	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	// you can specify rows limit
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// You can specify start DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z
	Start string `protobuf:"bytes,3,opt,name=start,proto3" json:"start,omitempty"`
	// You can specify end DateTime point. format RFC3339: 2006-01-02T15:04:05.000Z
	End string `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty"`
	// Additional sql filters (key,value): allowed: direction,devEUI,mType,gw,devAddr
	Filters map[string]string `protobuf:"bytes,5,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// You can set the id to 0 if admin
	OrganizationId int64 `protobuf:"varint,6,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// here user sends his local timezone.
	Timezone int64 `protobuf:"varint,7,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// for internal use. Will be ignored from external api.
	GwOnly               bool     `protobuf:"varint,8,opt,name=gw_only,json=gwOnly,proto3" json:"gw_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceFramesLogRequest) Reset()         { *m = GetDeviceFramesLogRequest{} }
func (m *GetDeviceFramesLogRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceFramesLogRequest) ProtoMessage()    {}
func (*GetDeviceFramesLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{10}
}

func (m *GetDeviceFramesLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceFramesLogRequest.Unmarshal(m, b)
}
func (m *GetDeviceFramesLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceFramesLogRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceFramesLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceFramesLogRequest.Merge(m, src)
}
func (m *GetDeviceFramesLogRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceFramesLogRequest.Size(m)
}
func (m *GetDeviceFramesLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceFramesLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceFramesLogRequest proto.InternalMessageInfo

func (m *GetDeviceFramesLogRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *GetDeviceFramesLogRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetDeviceFramesLogRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetDeviceFramesLogRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *GetDeviceFramesLogRequest) GetFilters() map[string]string {
	if m != nil {
		return m.Filters
	}
	return nil
}

func (m *GetDeviceFramesLogRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetDeviceFramesLogRequest) GetTimezone() int64 {
	if m != nil {
		return m.Timezone
	}
	return 0
}

func (m *GetDeviceFramesLogRequest) GetGwOnly() bool {
	if m != nil {
		return m.GwOnly
	}
	return false
}

type GetDeviceFramesLogResponse struct {
	// total numner of selected rows
	ItemsTotal uint32 `protobuf:"varint,1,opt,name=items_total,json=itemsTotal,proto3" json:"items_total,omitempty"`
	// the array of selected device-frames logs
	Data                 []*DeviceFrameLog `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDeviceFramesLogResponse) Reset()         { *m = GetDeviceFramesLogResponse{} }
func (m *GetDeviceFramesLogResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceFramesLogResponse) ProtoMessage()    {}
func (*GetDeviceFramesLogResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{11}
}

func (m *GetDeviceFramesLogResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceFramesLogResponse.Unmarshal(m, b)
}
func (m *GetDeviceFramesLogResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceFramesLogResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceFramesLogResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceFramesLogResponse.Merge(m, src)
}
func (m *GetDeviceFramesLogResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceFramesLogResponse.Size(m)
}
func (m *GetDeviceFramesLogResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceFramesLogResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceFramesLogResponse proto.InternalMessageInfo

func (m *GetDeviceFramesLogResponse) GetItemsTotal() uint32 {
	if m != nil {
		return m.ItemsTotal
	}
	return 0
}

func (m *GetDeviceFramesLogResponse) GetData() []*DeviceFrameLog {
	if m != nil {
		return m.Data
	}
	return nil
}

type ExecCommandRequest struct {
	// Gateway ID (HEX encoded).
	GatewayId string `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	// command that will be executed on gateway (according to the gw config)
	Command string `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	// You can set timeout for the command execution. Default 30 seconds. Range 1-1000
	Timeout uint32 `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	//  Background task execution. If set true, the result will be saved in app-db.
	//  Allows to get large amount of data from devices asynchronously.
	BackgroundTask       bool     `protobuf:"varint,4,opt,name=background_task,json=backgroundTask,proto3" json:"background_task,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecCommandRequest) Reset()         { *m = ExecCommandRequest{} }
func (m *ExecCommandRequest) String() string { return proto.CompactTextString(m) }
func (*ExecCommandRequest) ProtoMessage()    {}
func (*ExecCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{12}
}

func (m *ExecCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecCommandRequest.Unmarshal(m, b)
}
func (m *ExecCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecCommandRequest.Marshal(b, m, deterministic)
}
func (m *ExecCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecCommandRequest.Merge(m, src)
}
func (m *ExecCommandRequest) XXX_Size() int {
	return xxx_messageInfo_ExecCommandRequest.Size(m)
}
func (m *ExecCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecCommandRequest proto.InternalMessageInfo

func (m *ExecCommandRequest) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *ExecCommandRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *ExecCommandRequest) GetTimeout() uint32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *ExecCommandRequest) GetBackgroundTask() bool {
	if m != nil {
		return m.BackgroundTask
	}
	return false
}

type GetFrameCountersRequest struct {
	// format RFC3339: 2006-01-02T15:04:05.000Z
	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameCountersRequest) Reset()         { *m = GetFrameCountersRequest{} }
func (m *GetFrameCountersRequest) String() string { return proto.CompactTextString(m) }
func (*GetFrameCountersRequest) ProtoMessage()    {}
func (*GetFrameCountersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{13}
}

func (m *GetFrameCountersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFrameCountersRequest.Unmarshal(m, b)
}
func (m *GetFrameCountersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFrameCountersRequest.Marshal(b, m, deterministic)
}
func (m *GetFrameCountersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameCountersRequest.Merge(m, src)
}
func (m *GetFrameCountersRequest) XXX_Size() int {
	return xxx_messageInfo_GetFrameCountersRequest.Size(m)
}
func (m *GetFrameCountersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameCountersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameCountersRequest proto.InternalMessageInfo

func (m *GetFrameCountersRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetFrameCountersRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type GetFrameCountersResponse struct {
	// list counters with frame counters by type
	Counters             []*FrameCounters `protobuf:"bytes,1,rep,name=counters,proto3" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetFrameCountersResponse) Reset()         { *m = GetFrameCountersResponse{} }
func (m *GetFrameCountersResponse) String() string { return proto.CompactTextString(m) }
func (*GetFrameCountersResponse) ProtoMessage()    {}
func (*GetFrameCountersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{14}
}

func (m *GetFrameCountersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFrameCountersResponse.Unmarshal(m, b)
}
func (m *GetFrameCountersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFrameCountersResponse.Marshal(b, m, deterministic)
}
func (m *GetFrameCountersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameCountersResponse.Merge(m, src)
}
func (m *GetFrameCountersResponse) XXX_Size() int {
	return xxx_messageInfo_GetFrameCountersResponse.Size(m)
}
func (m *GetFrameCountersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameCountersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameCountersResponse proto.InternalMessageInfo

func (m *GetFrameCountersResponse) GetCounters() []*FrameCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

type GetFrameSpeedRequest struct {
	// format RFC3339: 2006-01-02T15:04:05.000Z
	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	End                  string   `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrameSpeedRequest) Reset()         { *m = GetFrameSpeedRequest{} }
func (m *GetFrameSpeedRequest) String() string { return proto.CompactTextString(m) }
func (*GetFrameSpeedRequest) ProtoMessage()    {}
func (*GetFrameSpeedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{15}
}

func (m *GetFrameSpeedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFrameSpeedRequest.Unmarshal(m, b)
}
func (m *GetFrameSpeedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFrameSpeedRequest.Marshal(b, m, deterministic)
}
func (m *GetFrameSpeedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameSpeedRequest.Merge(m, src)
}
func (m *GetFrameSpeedRequest) XXX_Size() int {
	return xxx_messageInfo_GetFrameSpeedRequest.Size(m)
}
func (m *GetFrameSpeedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameSpeedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameSpeedRequest proto.InternalMessageInfo

func (m *GetFrameSpeedRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetFrameSpeedRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

type GetFrameSpeedResponse struct {
	// list counters with frames speed
	Counters             []*FrameSpeed `protobuf:"bytes,1,rep,name=counters,proto3" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetFrameSpeedResponse) Reset()         { *m = GetFrameSpeedResponse{} }
func (m *GetFrameSpeedResponse) String() string { return proto.CompactTextString(m) }
func (*GetFrameSpeedResponse) ProtoMessage()    {}
func (*GetFrameSpeedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{16}
}

func (m *GetFrameSpeedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFrameSpeedResponse.Unmarshal(m, b)
}
func (m *GetFrameSpeedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFrameSpeedResponse.Marshal(b, m, deterministic)
}
func (m *GetFrameSpeedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrameSpeedResponse.Merge(m, src)
}
func (m *GetFrameSpeedResponse) XXX_Size() int {
	return xxx_messageInfo_GetFrameSpeedResponse.Size(m)
}
func (m *GetFrameSpeedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrameSpeedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrameSpeedResponse proto.InternalMessageInfo

func (m *GetFrameSpeedResponse) GetCounters() []*FrameSpeed {
	if m != nil {
		return m.Counters
	}
	return nil
}

type GetDeviceCountersRequest struct {
	// Id (number). If Zero - all organisations (allowed for admin)
	OrganizationId uint32 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// aggregation of the data: HOUR,DAY,WEEK,MONTH
	Aggregation          string   `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceCountersRequest) Reset()         { *m = GetDeviceCountersRequest{} }
func (m *GetDeviceCountersRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceCountersRequest) ProtoMessage()    {}
func (*GetDeviceCountersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{17}
}

func (m *GetDeviceCountersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceCountersRequest.Unmarshal(m, b)
}
func (m *GetDeviceCountersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceCountersRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceCountersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceCountersRequest.Merge(m, src)
}
func (m *GetDeviceCountersRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceCountersRequest.Size(m)
}
func (m *GetDeviceCountersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceCountersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceCountersRequest proto.InternalMessageInfo

func (m *GetDeviceCountersRequest) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetDeviceCountersRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetDeviceCountersRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *GetDeviceCountersRequest) GetAggregation() string {
	if m != nil {
		return m.Aggregation
	}
	return ""
}

type GetDeviceCountersResponse struct {
	// id of the organisation that handles the devices
	OrganizationId       uint32            `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Counters             []*DeviceCounters `protobuf:"bytes,2,rep,name=counters,proto3" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetDeviceCountersResponse) Reset()         { *m = GetDeviceCountersResponse{} }
func (m *GetDeviceCountersResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceCountersResponse) ProtoMessage()    {}
func (*GetDeviceCountersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{18}
}

func (m *GetDeviceCountersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceCountersResponse.Unmarshal(m, b)
}
func (m *GetDeviceCountersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceCountersResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceCountersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceCountersResponse.Merge(m, src)
}
func (m *GetDeviceCountersResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceCountersResponse.Size(m)
}
func (m *GetDeviceCountersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceCountersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceCountersResponse proto.InternalMessageInfo

func (m *GetDeviceCountersResponse) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetDeviceCountersResponse) GetCounters() []*DeviceCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

type GetGatewayCountersRequest struct {
	// Id (number). If Zero - all organisations (allowed for admin)
	OrganizationId uint32 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	Start string `protobuf:"bytes,2,opt,name=start,proto3" json:"start,omitempty"`
	// format RFC3339: 2006-01-02T15:04:05.000Z
	End string `protobuf:"bytes,3,opt,name=end,proto3" json:"end,omitempty"`
	// aggregation of the data: HOUR,DAY,WEEK,MONTH
	Aggregation          string   `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewayCountersRequest) Reset()         { *m = GetGatewayCountersRequest{} }
func (m *GetGatewayCountersRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewayCountersRequest) ProtoMessage()    {}
func (*GetGatewayCountersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{19}
}

func (m *GetGatewayCountersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayCountersRequest.Unmarshal(m, b)
}
func (m *GetGatewayCountersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayCountersRequest.Marshal(b, m, deterministic)
}
func (m *GetGatewayCountersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayCountersRequest.Merge(m, src)
}
func (m *GetGatewayCountersRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewayCountersRequest.Size(m)
}
func (m *GetGatewayCountersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayCountersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayCountersRequest proto.InternalMessageInfo

func (m *GetGatewayCountersRequest) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetGatewayCountersRequest) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetGatewayCountersRequest) GetEnd() string {
	if m != nil {
		return m.End
	}
	return ""
}

func (m *GetGatewayCountersRequest) GetAggregation() string {
	if m != nil {
		return m.Aggregation
	}
	return ""
}

type GetGatewayCountersResponse struct {
	// id of the organisation that handles the devices
	OrganizationId uint32 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// log of counters
	Counters             []*DeviceCounters `protobuf:"bytes,2,rep,name=counters,proto3" json:"counters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetGatewayCountersResponse) Reset()         { *m = GetGatewayCountersResponse{} }
func (m *GetGatewayCountersResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewayCountersResponse) ProtoMessage()    {}
func (*GetGatewayCountersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{20}
}

func (m *GetGatewayCountersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewayCountersResponse.Unmarshal(m, b)
}
func (m *GetGatewayCountersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewayCountersResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewayCountersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewayCountersResponse.Merge(m, src)
}
func (m *GetGatewayCountersResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewayCountersResponse.Size(m)
}
func (m *GetGatewayCountersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewayCountersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewayCountersResponse proto.InternalMessageInfo

func (m *GetGatewayCountersResponse) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *GetGatewayCountersResponse) GetCounters() []*DeviceCounters {
	if m != nil {
		return m.Counters
	}
	return nil
}

type GetVersionResponse struct {
	// ChirpStack Network Server version.
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVersionResponse) Reset()         { *m = GetVersionResponse{} }
func (m *GetVersionResponse) String() string { return proto.CompactTextString(m) }
func (*GetVersionResponse) ProtoMessage()    {}
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{21}
}

func (m *GetVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVersionResponse.Unmarshal(m, b)
}
func (m *GetVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVersionResponse.Marshal(b, m, deterministic)
}
func (m *GetVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVersionResponse.Merge(m, src)
}
func (m *GetVersionResponse) XXX_Size() int {
	return xxx_messageInfo_GetVersionResponse.Size(m)
}
func (m *GetVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVersionResponse proto.InternalMessageInfo

func (m *GetVersionResponse) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

// counters
type DeviceCounters struct {
	// id of the organisation that handles the devices
	OrganizationId uint32 `protobuf:"varint,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	// Created at unix timestamp.
	CreatedAt uint32 `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Active count.
	ActiveCount uint32 `protobuf:"varint,3,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	// Inactive count.
	InactiveCount uint32 `protobuf:"varint,4,opt,name=inactive_count,json=inactiveCount,proto3" json:"inactive_count,omitempty"`
	// Never seen count.
	NeverSeenCount       uint32   `protobuf:"varint,5,opt,name=never_seen_count,json=neverSeenCount,proto3" json:"never_seen_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceCounters) Reset()         { *m = DeviceCounters{} }
func (m *DeviceCounters) String() string { return proto.CompactTextString(m) }
func (*DeviceCounters) ProtoMessage()    {}
func (*DeviceCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{22}
}

func (m *DeviceCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceCounters.Unmarshal(m, b)
}
func (m *DeviceCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceCounters.Marshal(b, m, deterministic)
}
func (m *DeviceCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceCounters.Merge(m, src)
}
func (m *DeviceCounters) XXX_Size() int {
	return xxx_messageInfo_DeviceCounters.Size(m)
}
func (m *DeviceCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceCounters.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceCounters proto.InternalMessageInfo

func (m *DeviceCounters) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *DeviceCounters) GetCreatedAt() uint32 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *DeviceCounters) GetActiveCount() uint32 {
	if m != nil {
		return m.ActiveCount
	}
	return 0
}

func (m *DeviceCounters) GetInactiveCount() uint32 {
	if m != nil {
		return m.InactiveCount
	}
	return 0
}

func (m *DeviceCounters) GetNeverSeenCount() uint32 {
	if m != nil {
		return m.NeverSeenCount
	}
	return 0
}

type FrameCounters struct {
	// Date: the metrics counted for.
	Date int64 `protobuf:"varint,1,opt,name=date,proto3" json:"date,omitempty"`
	// RxCnt: total recieved frames counted
	RxCnt uint32 `protobuf:"varint,2,opt,name=rx_cnt,json=rxCnt,proto3" json:"rx_cnt,omitempty"`
	// TxCnt: total transmitted frames counted
	TxCnt uint32 `protobuf:"varint,3,opt,name=tx_cnt,json=txCnt,proto3" json:"tx_cnt,omitempty"`
	// TotalCnt: both TxCnt and RxCnt counted
	TotalCnt uint32 `protobuf:"varint,4,opt,name=total_cnt,json=totalCnt,proto3" json:"total_cnt,omitempty"`
	// UnknownType:
	UnknownType uint32 `protobuf:"varint,5,opt,name=unknown_type,json=unknownType,proto3" json:"unknown_type,omitempty"`
	// JoinRequest
	JoinRequest uint32 `protobuf:"varint,6,opt,name=join_request,json=joinRequest,proto3" json:"join_request,omitempty"`
	// RejoinRequest
	RejoinRequest uint32 `protobuf:"varint,7,opt,name=rejoin_request,json=rejoinRequest,proto3" json:"rejoin_request,omitempty"`
	// JoinAccept
	JoinAccept uint32 `protobuf:"varint,8,opt,name=join_accept,json=joinAccept,proto3" json:"join_accept,omitempty"`
	// UnconfirmedDataUp
	UnconfirmedDataUp uint32 `protobuf:"varint,9,opt,name=unconfirmed_data_up,json=unconfirmedDataUp,proto3" json:"unconfirmed_data_up,omitempty"`
	// UnconfirmedDataDown
	UnconfirmedDataDown uint32 `protobuf:"varint,10,opt,name=unconfirmed_data_down,json=unconfirmedDataDown,proto3" json:"unconfirmed_data_down,omitempty"`
	// ConfirmedDataUp
	ConfirmedDataUp uint32 `protobuf:"varint,11,opt,name=confirmed_data_up,json=confirmedDataUp,proto3" json:"confirmed_data_up,omitempty"`
	// ConfirmedDataDown
	ConfirmedDataDown uint32 `protobuf:"varint,12,opt,name=confirmed_data_down,json=confirmedDataDown,proto3" json:"confirmed_data_down,omitempty"`
	// Proprietary
	Proprietary          uint32   `protobuf:"varint,13,opt,name=proprietary,proto3" json:"proprietary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrameCounters) Reset()         { *m = FrameCounters{} }
func (m *FrameCounters) String() string { return proto.CompactTextString(m) }
func (*FrameCounters) ProtoMessage()    {}
func (*FrameCounters) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{23}
}

func (m *FrameCounters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrameCounters.Unmarshal(m, b)
}
func (m *FrameCounters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrameCounters.Marshal(b, m, deterministic)
}
func (m *FrameCounters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrameCounters.Merge(m, src)
}
func (m *FrameCounters) XXX_Size() int {
	return xxx_messageInfo_FrameCounters.Size(m)
}
func (m *FrameCounters) XXX_DiscardUnknown() {
	xxx_messageInfo_FrameCounters.DiscardUnknown(m)
}

var xxx_messageInfo_FrameCounters proto.InternalMessageInfo

func (m *FrameCounters) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *FrameCounters) GetRxCnt() uint32 {
	if m != nil {
		return m.RxCnt
	}
	return 0
}

func (m *FrameCounters) GetTxCnt() uint32 {
	if m != nil {
		return m.TxCnt
	}
	return 0
}

func (m *FrameCounters) GetTotalCnt() uint32 {
	if m != nil {
		return m.TotalCnt
	}
	return 0
}

func (m *FrameCounters) GetUnknownType() uint32 {
	if m != nil {
		return m.UnknownType
	}
	return 0
}

func (m *FrameCounters) GetJoinRequest() uint32 {
	if m != nil {
		return m.JoinRequest
	}
	return 0
}

func (m *FrameCounters) GetRejoinRequest() uint32 {
	if m != nil {
		return m.RejoinRequest
	}
	return 0
}

func (m *FrameCounters) GetJoinAccept() uint32 {
	if m != nil {
		return m.JoinAccept
	}
	return 0
}

func (m *FrameCounters) GetUnconfirmedDataUp() uint32 {
	if m != nil {
		return m.UnconfirmedDataUp
	}
	return 0
}

func (m *FrameCounters) GetUnconfirmedDataDown() uint32 {
	if m != nil {
		return m.UnconfirmedDataDown
	}
	return 0
}

func (m *FrameCounters) GetConfirmedDataUp() uint32 {
	if m != nil {
		return m.ConfirmedDataUp
	}
	return 0
}

func (m *FrameCounters) GetConfirmedDataDown() uint32 {
	if m != nil {
		return m.ConfirmedDataDown
	}
	return 0
}

func (m *FrameCounters) GetProprietary() uint32 {
	if m != nil {
		return m.Proprietary
	}
	return 0
}

type FrameSpeed struct {
	// T: Created at timestamp (unix)
	T int64 `protobuf:"varint,1,opt,name=t,proto3" json:"t,omitempty"`
	// Y: TotalCnt: both TxCnt and RxCnt frames counted for the amount of time
	Y                    uint32   `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrameSpeed) Reset()         { *m = FrameSpeed{} }
func (m *FrameSpeed) String() string { return proto.CompactTextString(m) }
func (*FrameSpeed) ProtoMessage()    {}
func (*FrameSpeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{24}
}

func (m *FrameSpeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrameSpeed.Unmarshal(m, b)
}
func (m *FrameSpeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrameSpeed.Marshal(b, m, deterministic)
}
func (m *FrameSpeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrameSpeed.Merge(m, src)
}
func (m *FrameSpeed) XXX_Size() int {
	return xxx_messageInfo_FrameSpeed.Size(m)
}
func (m *FrameSpeed) XXX_DiscardUnknown() {
	xxx_messageInfo_FrameSpeed.DiscardUnknown(m)
}

var xxx_messageInfo_FrameSpeed proto.InternalMessageInfo

func (m *FrameSpeed) GetT() int64 {
	if m != nil {
		return m.T
	}
	return 0
}

func (m *FrameSpeed) GetY() uint32 {
	if m != nil {
		return m.Y
	}
	return 0
}

// for storage
type DeviceFrameLog struct {
	// RX (uplink -recieved from devices) or TX (downlink - transmitted from NS)
	Direction string `protobuf:"bytes,1,opt,name=direction,proto3" json:"direction,omitempty"`
	DateTime  string `protobuf:"bytes,2,opt,name=date_time,json=dateTime,proto3" json:"date_time,omitempty"`
	Date      string `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	MType     string `protobuf:"bytes,4,opt,name=mType,proto3" json:"mType,omitempty"`
	DevAddr   string `protobuf:"bytes,5,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	DevEUI    string `protobuf:"bytes,6,opt,name=devEUI,proto3" json:"devEUI,omitempty"`
	// params from base station with best SNR
	RxRssi    int32   `protobuf:"varint,7,opt,name=rxRssi,proto3" json:"rxRssi,omitempty"`
	RxSnr     float64 `protobuf:"fixed64,8,opt,name=rx_snr,json=rxSnr,proto3" json:"rx_snr,omitempty"`
	RxChannel uint32  `protobuf:"varint,9,opt,name=rx_channel,json=rxChannel,proto3" json:"rx_channel,omitempty"`
	RxRfChain uint32  `protobuf:"varint,10,opt,name=rx_rf_chain,json=rxRfChain,proto3" json:"rx_rf_chain,omitempty"`
	// id of base station with best SNR
	Gw string `protobuf:"bytes,11,opt,name=gw,proto3" json:"gw,omitempty"`
	// json-string
	TxInfo string `protobuf:"bytes,12,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// RXInfo an array with info from BS recieved the frame
	RxInfo []*RXInfo `protobuf:"bytes,13,rep,name=rx_info,json=rxInfo,proto3" json:"rx_info,omitempty"`
	// json-string with LORA payload
	PhyPayloadJSON string  `protobuf:"bytes,14,opt,name=phy_payloadJSON,json=PhyPayloadJson,proto3" json:"phy_payloadJSON,omitempty"`
	Airtime        float64 `protobuf:"fixed64,15,opt,name=airtime,proto3" json:"airtime,omitempty"`
	Esp            float64 `protobuf:"fixed64,16,opt,name=esp,proto3" json:"esp,omitempty"`
	Late           uint32  `protobuf:"varint,17,opt,name=late,proto3" json:"late,omitempty"`
	FrmPayload     string  `protobuf:"bytes,18,opt,name=frm_payload,json=frmPayload,proto3" json:"frm_payload,omitempty"`
	// data from device-session
	FCntUp    uint32 `protobuf:"varint,19,opt,name=FCntUp,proto3" json:"FCntUp,omitempty"`
	NFCntDown uint32 `protobuf:"varint,20,opt,name=NFCntDown,proto3" json:"NFCntDown,omitempty"`
	AFCntDown uint32 `protobuf:"varint,21,opt,name=AFCntDown,proto3" json:"AFCntDown,omitempty"`
	ConfFCnt  uint32 `protobuf:"varint,22,opt,name=ConfFCnt,proto3" json:"ConfFCnt,omitempty"`
	// spreading factor (TxInfo)
	SpFact uint32 `protobuf:"varint,23,opt,name=sp_fact,json=spFact,proto3" json:"sp_fact,omitempty"`
	// billing limit: 1 - 'M' - marked as overlimit, 2 - 'D' - droped because of overlimit
	Limit                uint32   `protobuf:"varint,24,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceFrameLog) Reset()         { *m = DeviceFrameLog{} }
func (m *DeviceFrameLog) String() string { return proto.CompactTextString(m) }
func (*DeviceFrameLog) ProtoMessage()    {}
func (*DeviceFrameLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{25}
}

func (m *DeviceFrameLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceFrameLog.Unmarshal(m, b)
}
func (m *DeviceFrameLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceFrameLog.Marshal(b, m, deterministic)
}
func (m *DeviceFrameLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceFrameLog.Merge(m, src)
}
func (m *DeviceFrameLog) XXX_Size() int {
	return xxx_messageInfo_DeviceFrameLog.Size(m)
}
func (m *DeviceFrameLog) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceFrameLog.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceFrameLog proto.InternalMessageInfo

func (m *DeviceFrameLog) GetDirection() string {
	if m != nil {
		return m.Direction
	}
	return ""
}

func (m *DeviceFrameLog) GetDateTime() string {
	if m != nil {
		return m.DateTime
	}
	return ""
}

func (m *DeviceFrameLog) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *DeviceFrameLog) GetMType() string {
	if m != nil {
		return m.MType
	}
	return ""
}

func (m *DeviceFrameLog) GetDevAddr() string {
	if m != nil {
		return m.DevAddr
	}
	return ""
}

func (m *DeviceFrameLog) GetDevEUI() string {
	if m != nil {
		return m.DevEUI
	}
	return ""
}

func (m *DeviceFrameLog) GetRxRssi() int32 {
	if m != nil {
		return m.RxRssi
	}
	return 0
}

func (m *DeviceFrameLog) GetRxSnr() float64 {
	if m != nil {
		return m.RxSnr
	}
	return 0
}

func (m *DeviceFrameLog) GetRxChannel() uint32 {
	if m != nil {
		return m.RxChannel
	}
	return 0
}

func (m *DeviceFrameLog) GetRxRfChain() uint32 {
	if m != nil {
		return m.RxRfChain
	}
	return 0
}

func (m *DeviceFrameLog) GetGw() string {
	if m != nil {
		return m.Gw
	}
	return ""
}

func (m *DeviceFrameLog) GetTxInfo() string {
	if m != nil {
		return m.TxInfo
	}
	return ""
}

func (m *DeviceFrameLog) GetRxInfo() []*RXInfo {
	if m != nil {
		return m.RxInfo
	}
	return nil
}

func (m *DeviceFrameLog) GetPhyPayloadJSON() string {
	if m != nil {
		return m.PhyPayloadJSON
	}
	return ""
}

func (m *DeviceFrameLog) GetAirtime() float64 {
	if m != nil {
		return m.Airtime
	}
	return 0
}

func (m *DeviceFrameLog) GetEsp() float64 {
	if m != nil {
		return m.Esp
	}
	return 0
}

func (m *DeviceFrameLog) GetLate() uint32 {
	if m != nil {
		return m.Late
	}
	return 0
}

func (m *DeviceFrameLog) GetFrmPayload() string {
	if m != nil {
		return m.FrmPayload
	}
	return ""
}

func (m *DeviceFrameLog) GetFCntUp() uint32 {
	if m != nil {
		return m.FCntUp
	}
	return 0
}

func (m *DeviceFrameLog) GetNFCntDown() uint32 {
	if m != nil {
		return m.NFCntDown
	}
	return 0
}

func (m *DeviceFrameLog) GetAFCntDown() uint32 {
	if m != nil {
		return m.AFCntDown
	}
	return 0
}

func (m *DeviceFrameLog) GetConfFCnt() uint32 {
	if m != nil {
		return m.ConfFCnt
	}
	return 0
}

func (m *DeviceFrameLog) GetSpFact() uint32 {
	if m != nil {
		return m.SpFact
	}
	return 0
}

func (m *DeviceFrameLog) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// for RXInfo item in uplink frames
type RXInfo struct {
	// GatewayID
	GatewayID         string               `protobuf:"bytes,1,opt,name=GatewayID,json=gateway_id,proto3" json:"GatewayID,omitempty"`
	Rssi              int32                `protobuf:"varint,2,opt,name=Rssi,json=rssi,proto3" json:"Rssi,omitempty"`
	LoraSnr           float64              `protobuf:"fixed64,3,opt,name=LoraSnr,json=lora_snr,proto3" json:"LoraSnr,omitempty"`
	Channel           uint32               `protobuf:"varint,4,opt,name=Channel,json=channel,proto3" json:"Channel,omitempty"`
	RfChain           uint32               `protobuf:"varint,5,opt,name=RfChain,json=rf_chain,proto3" json:"RfChain,omitempty"`
	Board             uint32               `protobuf:"varint,6,opt,name=Board,json=board,proto3" json:"Board,omitempty"`
	Antenna           uint32               `protobuf:"varint,7,opt,name=Antenna,json=antenna,proto3" json:"Antenna,omitempty"`
	Location          *common.Location     `protobuf:"bytes,8,opt,name=Location,json=location,proto3" json:"Location,omitempty"`
	FineTimestampType gw.FineTimestampType `protobuf:"varint,9,opt,name=FineTimestampType,proto3,enum=gw.FineTimestampType" json:"FineTimestampType,omitempty"`
	GpsTimestamp      string               `protobuf:"bytes,10,opt,name=GpsTimestamp,json=gps_timestamp,proto3" json:"GpsTimestamp,omitempty"`
	FineTimestamp     string               `protobuf:"bytes,11,opt,name=FineTimestamp,json=fine_timestamp,proto3" json:"FineTimestamp,omitempty"`
	Context           string               `protobuf:"bytes,12,opt,name=Context,json=context,proto3" json:"Context,omitempty"`
	// Unique and random ID which can be used to correlate the uplink across multiple logs.
	UplinkID             string   `protobuf:"bytes,13,opt,name=UplinkID,json=uplink_id,proto3" json:"UplinkID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RXInfo) Reset()         { *m = RXInfo{} }
func (m *RXInfo) String() string { return proto.CompactTextString(m) }
func (*RXInfo) ProtoMessage()    {}
func (*RXInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{26}
}

func (m *RXInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RXInfo.Unmarshal(m, b)
}
func (m *RXInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RXInfo.Marshal(b, m, deterministic)
}
func (m *RXInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RXInfo.Merge(m, src)
}
func (m *RXInfo) XXX_Size() int {
	return xxx_messageInfo_RXInfo.Size(m)
}
func (m *RXInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RXInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RXInfo proto.InternalMessageInfo

func (m *RXInfo) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *RXInfo) GetRssi() int32 {
	if m != nil {
		return m.Rssi
	}
	return 0
}

func (m *RXInfo) GetLoraSnr() float64 {
	if m != nil {
		return m.LoraSnr
	}
	return 0
}

func (m *RXInfo) GetChannel() uint32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *RXInfo) GetRfChain() uint32 {
	if m != nil {
		return m.RfChain
	}
	return 0
}

func (m *RXInfo) GetBoard() uint32 {
	if m != nil {
		return m.Board
	}
	return 0
}

func (m *RXInfo) GetAntenna() uint32 {
	if m != nil {
		return m.Antenna
	}
	return 0
}

func (m *RXInfo) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *RXInfo) GetFineTimestampType() gw.FineTimestampType {
	if m != nil {
		return m.FineTimestampType
	}
	return gw.FineTimestampType_NONE
}

func (m *RXInfo) GetGpsTimestamp() string {
	if m != nil {
		return m.GpsTimestamp
	}
	return ""
}

func (m *RXInfo) GetFineTimestamp() string {
	if m != nil {
		return m.FineTimestamp
	}
	return ""
}

func (m *RXInfo) GetContext() string {
	if m != nil {
		return m.Context
	}
	return ""
}

func (m *RXInfo) GetUplinkID() string {
	if m != nil {
		return m.UplinkID
	}
	return ""
}

type GetGwStatsRequest struct {
	// Gateway ID (HEX encoded).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGwStatsRequest) Reset()         { *m = GetGwStatsRequest{} }
func (m *GetGwStatsRequest) String() string { return proto.CompactTextString(m) }
func (*GetGwStatsRequest) ProtoMessage()    {}
func (*GetGwStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{27}
}

func (m *GetGwStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGwStatsRequest.Unmarshal(m, b)
}
func (m *GetGwStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGwStatsRequest.Marshal(b, m, deterministic)
}
func (m *GetGwStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGwStatsRequest.Merge(m, src)
}
func (m *GetGwStatsRequest) XXX_Size() int {
	return xxx_messageInfo_GetGwStatsRequest.Size(m)
}
func (m *GetGwStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGwStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGwStatsRequest proto.InternalMessageInfo

func (m *GetGwStatsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetGwStatsResponse struct {
	// last hour radio availability %
	RadioHour float32 `protobuf:"fixed32,1,opt,name=radio_hour,json=radioHour,proto3" json:"radio_hour,omitempty"`
	// last day radio availability %
	RadioDay float32 `protobuf:"fixed32,2,opt,name=radio_day,json=radioDay,proto3" json:"radio_day,omitempty"`
	// last month radio availability %
	RadioMonth           float32  `protobuf:"fixed32,3,opt,name=radio_month,json=radioMonth,proto3" json:"radio_month,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGwStatsResponse) Reset()         { *m = GetGwStatsResponse{} }
func (m *GetGwStatsResponse) String() string { return proto.CompactTextString(m) }
func (*GetGwStatsResponse) ProtoMessage()    {}
func (*GetGwStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_97d7a55acfa39588, []int{28}
}

func (m *GetGwStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGwStatsResponse.Unmarshal(m, b)
}
func (m *GetGwStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGwStatsResponse.Marshal(b, m, deterministic)
}
func (m *GetGwStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGwStatsResponse.Merge(m, src)
}
func (m *GetGwStatsResponse) XXX_Size() int {
	return xxx_messageInfo_GetGwStatsResponse.Size(m)
}
func (m *GetGwStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGwStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGwStatsResponse proto.InternalMessageInfo

func (m *GetGwStatsResponse) GetRadioHour() float32 {
	if m != nil {
		return m.RadioHour
	}
	return 0
}

func (m *GetGwStatsResponse) GetRadioDay() float32 {
	if m != nil {
		return m.RadioDay
	}
	return 0
}

func (m *GetGwStatsResponse) GetRadioMonth() float32 {
	if m != nil {
		return m.RadioMonth
	}
	return 0
}

func init() {
	proto.RegisterType((*LogsGwItem)(nil), "hr.LogsGwItem")
	proto.RegisterType((*LogsGatewayRequest)(nil), "hr.LogsGatewayRequest")
	proto.RegisterType((*LogsGatewayResponse)(nil), "hr.LogsGatewayResponse")
	proto.RegisterType((*GetIntegrationRepliesRequest)(nil), "hr.GetIntegrationRepliesRequest")
	proto.RegisterType((*GetIntegrationRepliesResponse)(nil), "hr.GetIntegrationRepliesResponse")
	proto.RegisterType((*IntegrationReply)(nil), "hr.IntegrationReply")
	proto.RegisterType((*StoreIntegrationReplyRequest)(nil), "hr.StoreIntegrationReplyRequest")
	proto.RegisterType((*StoreIntegrationReplyResponse)(nil), "hr.StoreIntegrationReplyResponse")
	proto.RegisterType((*GetCurrentStateResponse)(nil), "hr.GetCurrentStateResponse")
	proto.RegisterType((*StreamDeviceFramesLogCSVResponse)(nil), "hr.StreamDeviceFramesLogCSVResponse")
	proto.RegisterType((*GetDeviceFramesLogRequest)(nil), "hr.GetDeviceFramesLogRequest")
	proto.RegisterMapType((map[string]string)(nil), "hr.GetDeviceFramesLogRequest.FiltersEntry")
	proto.RegisterType((*GetDeviceFramesLogResponse)(nil), "hr.GetDeviceFramesLogResponse")
	proto.RegisterType((*ExecCommandRequest)(nil), "hr.ExecCommandRequest")
	proto.RegisterType((*GetFrameCountersRequest)(nil), "hr.GetFrameCountersRequest")
	proto.RegisterType((*GetFrameCountersResponse)(nil), "hr.GetFrameCountersResponse")
	proto.RegisterType((*GetFrameSpeedRequest)(nil), "hr.GetFrameSpeedRequest")
	proto.RegisterType((*GetFrameSpeedResponse)(nil), "hr.GetFrameSpeedResponse")
	proto.RegisterType((*GetDeviceCountersRequest)(nil), "hr.GetDeviceCountersRequest")
	proto.RegisterType((*GetDeviceCountersResponse)(nil), "hr.GetDeviceCountersResponse")
	proto.RegisterType((*GetGatewayCountersRequest)(nil), "hr.GetGatewayCountersRequest")
	proto.RegisterType((*GetGatewayCountersResponse)(nil), "hr.GetGatewayCountersResponse")
	proto.RegisterType((*GetVersionResponse)(nil), "hr.GetVersionResponse")
	proto.RegisterType((*DeviceCounters)(nil), "hr.DeviceCounters")
	proto.RegisterType((*FrameCounters)(nil), "hr.FrameCounters")
	proto.RegisterType((*FrameSpeed)(nil), "hr.FrameSpeed")
	proto.RegisterType((*DeviceFrameLog)(nil), "hr.DeviceFrameLog")
	proto.RegisterType((*RXInfo)(nil), "hr.RXInfo")
	proto.RegisterType((*GetGwStatsRequest)(nil), "hr.GetGwStatsRequest")
	proto.RegisterType((*GetGwStatsResponse)(nil), "hr.GetGwStatsResponse")
}

func init() {
	proto.RegisterFile("handyrusty/hr.proto", fileDescriptor_97d7a55acfa39588)
}

var fileDescriptor_97d7a55acfa39588 = []byte{
	// 2374 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x4b, 0x6f, 0x23, 0xc7,
	0x11, 0xd6, 0x50, 0xa2, 0x48, 0x16, 0x45, 0x4a, 0x6a, 0xbd, 0x66, 0xb9, 0x2b, 0x5b, 0x1e, 0x7b,
	0x6d, 0xc1, 0x58, 0x53, 0x86, 0x1c, 0x04, 0x89, 0x81, 0x38, 0xd0, 0x52, 0xab, 0x47, 0xa0, 0xd8,
	0x8b, 0xd1, 0xca, 0x08, 0x72, 0xf0, 0xa4, 0x35, 0xd3, 0x1c, 0x4e, 0x44, 0x76, 0x8f, 0x7b, 0x7a,
	0x44, 0x71, 0xcf, 0xb9, 0x3a, 0xc8, 0x21, 0xe7, 0x5c, 0x72, 0xcd, 0x25, 0xa7, 0xfc, 0x89, 0x5c,
	0xf2, 0x07, 0xf2, 0x5b, 0x82, 0x7e, 0xcc, 0x70, 0xf8, 0xda, 0x5d, 0x07, 0x08, 0x90, 0x93, 0x58,
	0x5f, 0x57, 0x77, 0xd7, 0x54, 0x7d, 0x55, 0x5d, 0xdd, 0x82, 0xad, 0x1e, 0xa6, 0xc1, 0x88, 0xa7,
	0x89, 0x18, 0x1d, 0xf5, 0x78, 0x3b, 0xe6, 0x4c, 0x30, 0x54, 0xea, 0xf1, 0xd6, 0xe3, 0x90, 0xb1,
	0xb0, 0x4f, 0x8e, 0x14, 0x72, 0x9b, 0x76, 0x8f, 0xc8, 0x20, 0x16, 0x23, 0xad, 0xd0, 0x7a, 0x7f,
	0x7a, 0x50, 0x44, 0x03, 0x92, 0x08, 0x3c, 0x88, 0x8d, 0xc2, 0x96, 0xcf, 0x06, 0x03, 0x46, 0x8f,
	0xf4, 0x1f, 0x03, 0xd6, 0xc3, 0xe1, 0x51, 0x38, 0xd4, 0x82, 0xf3, 0x1a, 0xe0, 0x8a, 0x85, 0xc9,
	0xf9, 0xf0, 0x52, 0x90, 0x01, 0xfa, 0x39, 0x80, 0xcf, 0x09, 0x16, 0x24, 0xf0, 0xb0, 0xb0, 0xad,
	0x03, 0xeb, 0xb0, 0x7e, 0xdc, 0x6a, 0xeb, 0x5d, 0xda, 0xd9, 0x2e, 0xed, 0x57, 0xd9, 0x2e, 0x6e,
	0xcd, 0x68, 0x9f, 0x08, 0x84, 0x60, 0xc5, 0x67, 0x01, 0xb1, 0x4b, 0x07, 0xd6, 0xe1, 0xb2, 0xab,
	0x7e, 0xa3, 0x7d, 0x80, 0x10, 0x0b, 0x32, 0xc4, 0x23, 0x2f, 0x0a, 0xec, 0xe5, 0x03, 0xeb, 0xb0,
	0xe6, 0xd6, 0x0c, 0x72, 0x79, 0xea, 0xfc, 0xa5, 0x04, 0x48, 0x6d, 0xae, 0x11, 0x97, 0x7c, 0x9f,
	0x92, 0x44, 0xa0, 0x6d, 0x28, 0xf7, 0xa3, 0x41, 0xa4, 0xf7, 0x2f, 0xbb, 0x5a, 0x40, 0xbb, 0xb0,
	0xca, 0xba, 0xdd, 0x84, 0x08, 0xb5, 0x43, 0xd9, 0x35, 0x12, 0xfa, 0x04, 0xd6, 0x19, 0x0f, 0x31,
	0x8d, 0x5e, 0x63, 0x11, 0x31, 0x9a, 0x6d, 0xb4, 0xec, 0x36, 0x8b, 0xf0, 0xe5, 0x29, 0xda, 0x83,
	0x4a, 0x38, 0xf4, 0xfa, 0x51, 0x22, 0xec, 0x95, 0x83, 0xe5, 0xc3, 0x9a, 0xbb, 0x1a, 0x0e, 0xaf,
	0xa2, 0x64, 0x6c, 0x79, 0xb9, 0x60, 0x79, 0x07, 0xd6, 0x13, 0x81, 0xb9, 0xf0, 0x72, 0x8f, 0xda,
	0xab, 0x6f, 0xf5, 0x46, 0x53, 0x4d, 0xc9, 0x65, 0xf4, 0x4b, 0x68, 0x10, 0x1a, 0x14, 0x96, 0xa8,
	0xbc, 0x75, 0x89, 0x35, 0x42, 0x83, 0x5c, 0x72, 0xbe, 0x83, 0xad, 0x09, 0xff, 0x24, 0x31, 0xa3,
	0x09, 0x41, 0xef, 0x43, 0x5d, 0x30, 0x81, 0xfb, 0x9e, 0xcf, 0x52, 0xaa, 0xdd, 0xb4, 0xec, 0x82,
	0x82, 0x3a, 0x12, 0x41, 0x1f, 0xc3, 0x2a, 0x27, 0x49, 0xda, 0x97, 0xbe, 0x5a, 0x3e, 0xac, 0x1f,
	0x37, 0xdb, 0x3d, 0xde, 0x1e, 0x87, 0xd9, 0x35, 0xa3, 0xce, 0x3f, 0x4a, 0xf0, 0xe4, 0x9c, 0x88,
	0x4b, 0x2a, 0x48, 0xc8, 0x95, 0x9f, 0x5c, 0x12, 0xf7, 0x23, 0x92, 0x64, 0xa1, 0x18, 0x3b, 0x5d,
	0x6e, 0xd2, 0xc8, 0x9d, 0x9e, 0x87, 0xa8, 0xa4, 0x60, 0x13, 0xa2, 0x3c, 0x14, 0xc9, 0xfc, 0x50,
	0x68, 0xf8, 0x32, 0x40, 0xcf, 0x00, 0x71, 0x96, 0x8a, 0x88, 0x86, 0x5e, 0xcc, 0x59, 0x37, 0xea,
	0x13, 0xa9, 0xbb, 0xa2, 0x74, 0x37, 0xcc, 0xc8, 0x4b, 0x3d, 0x70, 0x19, 0xc8, 0xc0, 0x05, 0xe4,
	0xde, 0x23, 0x69, 0xa4, 0x42, 0x54, 0x73, 0x57, 0x03, 0x72, 0xff, 0x22, 0x8d, 0xd0, 0x23, 0xa8,
	0x46, 0x89, 0x47, 0x38, 0x67, 0x5c, 0x45, 0xa7, 0xea, 0x56, 0xa2, 0xe4, 0x85, 0x14, 0xd1, 0xe7,
	0x50, 0x56, 0xc1, 0x78, 0x07, 0x97, 0x6b, 0x45, 0xf4, 0x0c, 0x96, 0x09, 0x0d, 0xec, 0xea, 0x5b,
	0xf5, 0xa5, 0x9a, 0x43, 0x61, 0x7f, 0x81, 0xe3, 0xc6, 0x31, 0x8a, 0x04, 0x19, 0x24, 0x9e, 0x0a,
	0x8b, 0x71, 0x1f, 0x28, 0xe8, 0x95, 0x44, 0xd0, 0xb3, 0xa9, 0x18, 0x6d, 0xcb, 0x18, 0x4d, 0x2d,
	0x38, 0xca, 0x23, 0xf5, 0x87, 0x12, 0x6c, 0x4c, 0x0f, 0x4a, 0x7f, 0x47, 0x63, 0xcc, 0x4b, 0xb9,
	0xde, 0xa7, 0xe6, 0x36, 0x0b, 0xf0, 0x0d, 0xef, 0x4b, 0x63, 0x12, 0x81, 0x45, 0x9a, 0x78, 0x79,
	0x8a, 0x96, 0x5d, 0xd0, 0x50, 0x47, 0xd2, 0xfd, 0xa7, 0xb0, 0x57, 0x50, 0xf0, 0x02, 0x92, 0xf8,
	0x3c, 0x8a, 0xe5, 0x74, 0x93, 0xb5, 0x3b, 0x63, 0xe5, 0xd3, 0xf1, 0x20, 0x7a, 0x0a, 0x4d, 0x1c,
	0xc7, 0xfd, 0xc8, 0xcf, 0x03, 0xae, 0x83, 0xd8, 0x28, 0xa0, 0x0b, 0x23, 0x78, 0x73, 0x89, 0xda,
	0xb0, 0x22, 0xb3, 0xe3, 0x1d, 0x72, 0x4b, 0xe9, 0x39, 0x7f, 0xb5, 0xe0, 0xc9, 0xb5, 0x60, 0x9c,
	0xcc, 0x38, 0xca, 0x10, 0x76, 0x0e, 0x05, 0xad, 0x1f, 0x41, 0xc1, 0xd2, 0x02, 0x0a, 0xaa, 0x60,
	0xc5, 0xfd, 0x68, 0xa4, 0xdc, 0xf1, 0x86, 0x60, 0x49, 0x1d, 0xe7, 0x39, 0xec, 0x2f, 0x30, 0xd2,
	0x90, 0xe3, 0x03, 0x58, 0x4b, 0xa4, 0x42, 0x30, 0x91, 0xc1, 0x75, 0x8d, 0xa9, 0x14, 0x76, 0x28,
	0xec, 0x9d, 0x13, 0xd1, 0x49, 0x39, 0x27, 0x54, 0x5c, 0x0b, 0x2c, 0x48, 0x3e, 0xfb, 0x23, 0x68,
	0x0e, 0xfb, 0x5e, 0x1f, 0x27, 0xc2, 0x8b, 0xb1, 0x7f, 0x67, 0x92, 0xb3, 0xe6, 0xae, 0x0d, 0xfb,
	0x57, 0x38, 0x11, 0x2f, 0x15, 0x86, 0x3e, 0x83, 0xad, 0x49, 0x2d, 0x2f, 0xa5, 0xd1, 0x43, 0xf6,
	0x85, 0x45, 0xd5, 0x1b, 0x1a, 0x3d, 0x38, 0x7f, 0xb6, 0xe0, 0xe0, 0x5a, 0x70, 0x82, 0x07, 0xa7,
	0xe4, 0x3e, 0xf2, 0xc9, 0x19, 0xc7, 0x03, 0x92, 0x5c, 0xb1, 0xb0, 0x73, 0xfd, 0x6d, 0xbe, 0x73,
	0x0b, 0x2a, 0xbe, 0xb6, 0x48, 0x13, 0xfa, 0x62, 0xc9, 0xcd, 0x00, 0xb4, 0x0b, 0x65, 0x4d, 0xf5,
	0x92, 0x19, 0xd1, 0x22, 0xda, 0x86, 0x15, 0xce, 0x86, 0x89, 0x72, 0x5c, 0xe3, 0xc2, 0x72, 0x95,
	0x24, 0xb5, 0xfd, 0x5e, 0x4a, 0xef, 0x14, 0x5f, 0xd6, 0x2e, 0x2c, 0x57, 0x8b, 0xcf, 0x57, 0x61,
	0x25, 0x89, 0x5e, 0x13, 0xf9, 0x37, 0xc0, 0x02, 0x3b, 0xff, 0x2a, 0xc1, 0xa3, 0x73, 0x22, 0xa6,
	0x6c, 0xfa, 0xef, 0xca, 0xd3, 0x76, 0x56, 0x13, 0x34, 0xa5, 0x4d, 0xde, 0x6f, 0xe8, 0xbc, 0x5f,
	0x51, 0x98, 0xfc, 0x89, 0x4e, 0xa1, 0xd2, 0x8d, 0xfa, 0x82, 0xf0, 0xc4, 0x2e, 0xab, 0xd4, 0xfc,
	0x54, 0x46, 0x7b, 0xa1, 0x15, 0xed, 0x33, 0xad, 0xfc, 0x82, 0x0a, 0x3e, 0x72, 0xb3, 0xa9, 0xf3,
	0xce, 0xa5, 0xd5, 0x39, 0xe7, 0x52, 0x80, 0x5a, 0x50, 0x95, 0xdc, 0x7e, 0xcd, 0x28, 0x51, 0xd5,
	0x6a, 0xd9, 0xcd, 0x65, 0x73, 0x66, 0x31, 0xda, 0x1f, 0xa9, 0xc2, 0x54, 0x95, 0x67, 0xd6, 0x37,
	0xb4, 0x3f, 0x6a, 0x7d, 0x09, 0x6b, 0xc5, 0x6d, 0xe5, 0x57, 0xdc, 0x91, 0x91, 0x21, 0x82, 0xfc,
	0x29, 0xbf, 0xf6, 0x1e, 0xf7, 0x53, 0x9d, 0xed, 0x35, 0x57, 0x0b, 0x5f, 0x96, 0x7e, 0x66, 0x39,
	0x04, 0x5a, 0xf3, 0x3e, 0xe6, 0x5d, 0x0b, 0xd7, 0xc7, 0x3a, 0x34, 0xa6, 0x6c, 0x21, 0xe9, 0x9b,
	0xc2, 0x5a, 0x72, 0x29, 0x1d, 0xba, 0x3f, 0x59, 0x80, 0x5e, 0x3c, 0x10, 0xbf, 0xc3, 0x06, 0x03,
	0x4c, 0x83, 0x2c, 0x66, 0x93, 0x3d, 0x81, 0x35, 0xd9, 0x13, 0x04, 0xc8, 0x86, 0x8a, 0xaf, 0x27,
	0x18, 0xc3, 0x33, 0x51, 0x8e, 0x48, 0xbf, 0xb0, 0x54, 0x07, 0xb0, 0xe1, 0x66, 0xa2, 0x74, 0xf5,
	0x2d, 0xf6, 0xef, 0x42, 0xce, 0x52, 0x79, 0xdc, 0xe2, 0x44, 0xd3, 0xaa, 0xea, 0x36, 0xc7, 0xf0,
	0x2b, 0x9c, 0xdc, 0x39, 0x27, 0x2a, 0xa9, 0x94, 0x9d, 0x2a, 0xcb, 0x08, 0x4f, 0x0a, 0x4d, 0x87,
	0x26, 0x87, 0x35, 0x87, 0x1c, 0xa5, 0x9c, 0x1c, 0xce, 0x25, 0xd8, 0xb3, 0x4b, 0x18, 0xd7, 0x7d,
	0x06, 0x55, 0xdf, 0x60, 0xb6, 0xa5, 0xbc, 0xb3, 0x29, 0xbd, 0x33, 0xa9, 0x9c, 0xab, 0x38, 0x5f,
	0xc1, 0x76, 0xb6, 0xd4, 0x75, 0x4c, 0x48, 0xf0, 0x63, 0x4d, 0xe9, 0xc0, 0xce, 0xd4, 0x7c, 0x63,
	0xc7, 0xa7, 0x33, 0x76, 0x34, 0x73, 0x3b, 0xb4, 0xe6, 0xd8, 0x88, 0x1f, 0x2c, 0xf5, 0x41, 0x3a,
	0x82, 0xd3, 0x4e, 0x99, 0xc3, 0x61, 0xcd, 0x87, 0x69, 0x0e, 0xe7, 0x26, 0x97, 0xe6, 0x98, 0xbc,
	0x3c, 0x4e, 0xad, 0x03, 0xa8, 0xe3, 0x30, 0xe4, 0x24, 0x54, 0x13, 0x4d, 0xd2, 0x15, 0x21, 0x47,
	0x14, 0xf2, 0x7d, 0xc6, 0xc1, 0xef, 0x6c, 0x4f, 0xbb, 0xe0, 0x81, 0x19, 0x9e, 0xce, 0x09, 0xc5,
	0x1f, 0x2d, 0xb5, 0xad, 0x69, 0xb4, 0xfe, 0x0f, 0xdc, 0x90, 0xaa, 0x1c, 0x9d, 0xb1, 0xe7, 0x7f,
	0xed, 0x87, 0x36, 0xa0, 0x73, 0x22, 0xbe, 0x25, 0x3c, 0x51, 0x67, 0x96, 0xd9, 0xce, 0x86, 0xca,
	0xbd, 0x86, 0x0c, 0x25, 0x33, 0xd1, 0xf9, 0xa7, 0x05, 0xcd, 0xc9, 0xc5, 0xde, 0xdd, 0xb6, 0xfd,
	0x89, 0xbb, 0x86, 0xae, 0xd4, 0x85, 0xfb, 0xc4, 0x07, 0xb0, 0x86, 0x7d, 0x11, 0xdd, 0x13, 0x73,
	0x46, 0xea, 0x9c, 0xaf, 0x6b, 0x4c, 0xb7, 0xb9, 0x4f, 0xa1, 0x19, 0xd1, 0x09, 0xa5, 0x15, 0xa5,
	0xd4, 0xc8, 0x50, 0xad, 0x76, 0x08, 0x1b, 0x94, 0xdc, 0x13, 0xee, 0x25, 0x84, 0x50, 0xa3, 0x58,
	0xd6, 0x26, 0x29, 0xfc, 0x9a, 0x10, 0xaa, 0x0f, 0xdd, 0x7f, 0x2f, 0x43, 0x63, 0x22, 0x5b, 0xe5,
	0xdd, 0x20, 0xc0, 0x82, 0x98, 0x13, 0x5a, 0xfd, 0x46, 0x3b, 0xb0, 0xca, 0x1f, 0x3c, 0x9f, 0xe6,
	0xc7, 0x0b, 0x7f, 0xe8, 0x50, 0x21, 0x61, 0xa1, 0x61, 0x6d, 0x6a, 0x59, 0x28, 0xf8, 0x31, 0xd4,
	0x4c, 0xb3, 0x9e, 0xdb, 0x57, 0xd5, 0xad, 0x3a, 0x55, 0x1f, 0x99, 0xd2, 0x3b, 0xca, 0x86, 0xd4,
	0x13, 0xa3, 0x98, 0x18, 0xb3, 0xea, 0x06, 0x7b, 0x35, 0x8a, 0x55, 0xaf, 0xf0, 0x7b, 0x16, 0x51,
	0x8f, 0x6b, 0x32, 0xaa, 0x43, 0xa4, 0xe1, 0xd6, 0x25, 0x96, 0xf1, 0xf3, 0x29, 0x34, 0x39, 0x99,
	0x50, 0xaa, 0x68, 0x3f, 0x68, 0x34, 0x53, 0x7b, 0x1f, 0xd4, 0x2c, 0x0f, 0xfb, 0x3e, 0x89, 0x85,
	0x3a, 0x50, 0x1a, 0x2e, 0x48, 0xe8, 0x44, 0x21, 0xa8, 0x0d, 0x5b, 0x29, 0xf5, 0x19, 0xed, 0x46,
	0x7c, 0x40, 0x02, 0x4f, 0x56, 0x71, 0x2f, 0x8d, 0xed, 0x9a, 0x52, 0xdc, 0x2c, 0x0c, 0x9d, 0x62,
	0x81, 0x6f, 0x62, 0x74, 0x0c, 0x3b, 0x33, 0xfa, 0x01, 0x1b, 0x52, 0x1b, 0xd4, 0x8c, 0xad, 0xa9,
	0x19, 0xa7, 0x6c, 0x48, 0xd1, 0xa7, 0xb0, 0x39, 0xbb, 0x43, 0x5d, 0xe9, 0xaf, 0x4f, 0xaf, 0xdf,
	0x86, 0xad, 0x79, 0xab, 0xaf, 0x69, 0x7b, 0x66, 0xd7, 0x3e, 0x80, 0x7a, 0xcc, 0x59, 0xcc, 0x23,
	0x22, 0x30, 0x1f, 0xd9, 0x0d, 0xed, 0xa9, 0x02, 0xe4, 0x1c, 0x02, 0x8c, 0xab, 0x20, 0x5a, 0x03,
	0x2b, 0xeb, 0xbd, 0x2c, 0x21, 0xa5, 0x91, 0x89, 0xa8, 0x35, 0x72, 0x7e, 0x28, 0x67, 0xcc, 0xce,
	0x8e, 0x35, 0xf4, 0x04, 0x6a, 0x41, 0xc4, 0x89, 0x2f, 0xc6, 0x89, 0x30, 0x06, 0x64, 0x9c, 0x25,
	0x3b, 0xd4, 0x6d, 0xcf, 0xe4, 0x7f, 0x55, 0x02, 0xb2, 0x85, 0xcd, 0x69, 0xa4, 0x6b, 0x80, 0xa6,
	0xd1, 0x36, 0x94, 0x07, 0x32, 0xc2, 0x26, 0xfd, 0xb5, 0x20, 0xef, 0x34, 0xb2, 0x55, 0xc6, 0x41,
	0xc0, 0x4d, 0xaf, 0x2c, 0x5b, 0xe7, 0x93, 0x20, 0xe0, 0xb2, 0xdb, 0xd1, 0x6d, 0xb3, 0xe2, 0xc0,
	0xb8, 0x89, 0xde, 0x95, 0x7c, 0x74, 0x93, 0x24, 0x52, 0x61, 0x2f, 0xbb, 0x46, 0x32, 0x3c, 0x4d,
	0x28, 0x57, 0xa1, 0xb6, 0x24, 0x4f, 0xaf, 0x29, 0x97, 0x79, 0x27, 0xe9, 0xdb, 0xc3, 0x94, 0x92,
	0xbe, 0x09, 0x6e, 0x8d, 0x3f, 0x74, 0x34, 0x80, 0xde, 0x83, 0x3a, 0x7f, 0xf0, 0x78, 0x57, 0x6a,
	0x44, 0x59, 0x28, 0x6b, 0xfc, 0xc1, 0xed, 0x76, 0x24, 0x80, 0x9a, 0x50, 0x0a, 0x87, 0x2a, 0x62,
	0x35, 0xb7, 0x14, 0x0e, 0x65, 0x8b, 0x22, 0x1e, 0xbc, 0x88, 0x76, 0x99, 0x0a, 0x4c, 0xcd, 0x5d,
	0x15, 0x0f, 0x97, 0xb4, 0xcb, 0xd0, 0x87, 0x50, 0xe1, 0x66, 0xa0, 0xa1, 0x4a, 0x0f, 0xc8, 0xd2,
	0xe3, 0xfe, 0x46, 0x0e, 0x4a, 0x1b, 0x95, 0xd2, 0x27, 0xb0, 0x1e, 0xf7, 0x46, 0x5e, 0x8c, 0x47,
	0x7d, 0x86, 0x83, 0x5f, 0x5d, 0x7f, 0xf3, 0xb5, 0xdd, 0xd4, 0x57, 0x98, 0x97, 0xbd, 0xd1, 0x4b,
	0x83, 0x26, 0x8c, 0xca, 0x1a, 0x84, 0x23, 0xae, 0x9c, 0xbb, 0xae, 0xbe, 0x26, 0x13, 0x55, 0x79,
	0x4d, 0x62, 0x7b, 0x43, 0xa1, 0xf2, 0xa7, 0xf4, 0x76, 0x5f, 0x7a, 0x7b, 0x53, 0xd9, 0xae, 0x7e,
	0x4b, 0xf2, 0x77, 0xf9, 0x20, 0xdb, 0xc8, 0x46, 0x6a, 0x13, 0xe8, 0xf2, 0x81, 0xd9, 0x44, 0x7a,
	0xf1, 0xac, 0x43, 0xc5, 0x4d, 0x6c, 0x6f, 0xe9, 0x5e, 0x52, 0x4b, 0x32, 0xea, 0x5f, 0xcb, 0x9f,
	0x92, 0x61, 0xf6, 0xb6, 0xf6, 0x46, 0x0e, 0xc8, 0xd1, 0x93, 0x7c, 0x74, 0x47, 0x8f, 0xe6, 0x80,
	0x6c, 0xed, 0x3a, 0x8c, 0x76, 0xa5, 0x6c, 0xef, 0xea, 0xd4, 0xcf, 0x64, 0xe9, 0xb7, 0x24, 0xf6,
	0xba, 0xd8, 0x17, 0xf6, 0x9e, 0xde, 0x30, 0x89, 0xcf, 0xb0, 0x5f, 0x68, 0x5e, 0xed, 0x42, 0xf3,
	0xea, 0xfc, 0x7d, 0x19, 0x56, 0xb5, 0xef, 0xd0, 0x3e, 0xd4, 0xce, 0xb3, 0x37, 0x14, 0xc3, 0xc3,
	0x42, 0x4b, 0x25, 0xbf, 0x5e, 0x91, 0x41, 0xdf, 0xf2, 0x56, 0xb8, 0xa4, 0xc2, 0x23, 0xa8, 0x5c,
	0x31, 0x8e, 0xaf, 0x29, 0x57, 0x14, 0xb4, 0xdc, 0x6a, 0x9f, 0x71, 0x2c, 0xb9, 0x21, 0x1d, 0x6b,
	0x42, 0x6f, 0xaa, 0x53, 0xc5, 0x50, 0x43, 0x4e, 0x32, 0x41, 0x37, 0x75, 0xa9, 0x9a, 0xb1, 0x42,
	0xda, 0xf8, 0x9c, 0x61, 0x1e, 0x98, 0x6a, 0x54, 0xbe, 0x95, 0x82, 0x5c, 0xea, 0x84, 0x0a, 0x42,
	0x29, 0x36, 0x05, 0xa8, 0x82, 0xb5, 0x88, 0x9e, 0x41, 0xf5, 0x8a, 0xe9, 0xeb, 0xa0, 0xb9, 0x61,
	0x6f, 0xb4, 0xcd, 0x9b, 0x54, 0x86, 0x4b, 0x93, 0xf4, 0x2f, 0xd4, 0x81, 0xcd, 0xb3, 0x88, 0x92,
	0xfc, 0xf2, 0xa7, 0xb2, 0x44, 0x12, 0xb5, 0x79, 0xbc, 0xd3, 0x0e, 0x87, 0xed, 0x99, 0x41, 0x77,
	0x56, 0x1f, 0x7d, 0x08, 0x6b, 0xe7, 0x71, 0x92, 0x63, 0x8a, 0xc8, 0x35, 0xb7, 0x11, 0xc6, 0xc9,
	0xf8, 0x41, 0x06, 0x3d, 0x85, 0xc6, 0xc4, 0x4c, 0xc3, 0xeb, 0x66, 0x37, 0xa2, 0xa4, 0xa0, 0x26,
	0x7d, 0xc4, 0xa8, 0x20, 0x0f, 0xc2, 0x70, 0xbc, 0xe2, 0x6b, 0x11, 0x3d, 0x86, 0xea, 0x4d, 0xdc,
	0x8f, 0xe8, 0xdd, 0xe5, 0xa9, 0xaa, 0x37, 0x35, 0xb7, 0x96, 0x2a, 0xd9, 0x8b, 0x02, 0xe7, 0x43,
	0xd8, 0x94, 0x87, 0xf8, 0x50, 0x5e, 0xdf, 0xf2, 0x66, 0xa2, 0x09, 0xa5, 0xbc, 0xef, 0x2d, 0x45,
	0x81, 0xf3, 0xbd, 0x3a, 0x72, 0x73, 0x25, 0x73, 0xe4, 0xca, 0x24, 0xc5, 0x41, 0xc4, 0xbc, 0x1e,
	0x4b, 0xb9, 0xd2, 0x2e, 0xb9, 0x35, 0x85, 0x5c, 0xb0, 0x94, 0xcb, 0x62, 0xa3, 0x87, 0x03, 0xac,
	0x6b, 0x56, 0xc9, 0xad, 0x2a, 0xe0, 0x14, 0x8f, 0x24, 0xd5, 0xf5, 0xe0, 0x80, 0x51, 0xd1, 0x53,
	0x01, 0x2f, 0xb9, 0x7a, 0xb9, 0x5f, 0x4b, 0xe4, 0xf8, 0x6f, 0x55, 0xd8, 0xbc, 0xc0, 0x34, 0x18,
	0xb9, 0x69, 0x22, 0x46, 0xd7, 0x84, 0xcb, 0x32, 0x87, 0xbe, 0x02, 0x18, 0x9f, 0xfd, 0x68, 0x77,
	0xe6, 0x2e, 0xfe, 0x62, 0x10, 0x8b, 0x51, 0x6b, 0xd7, 0xdc, 0x85, 0xa6, 0x7a, 0x04, 0x67, 0x09,
	0xb9, 0xea, 0x6b, 0xa7, 0xba, 0x81, 0x27, 0x13, 0x57, 0xa7, 0xa9, 0xc6, 0xaa, 0xb5, 0xbf, 0x60,
	0x34, 0x5f, 0xf3, 0x46, 0x3b, 0x67, 0xb2, 0x0d, 0x42, 0xd9, 0xb4, 0xf9, 0xed, 0x5a, 0xeb, 0xbd,
	0x45, 0xc3, 0xf9, 0xb2, 0xdf, 0xc0, 0xc6, 0x74, 0x13, 0x8f, 0x1e, 0x9b, 0x59, 0xf3, 0x6e, 0x07,
	0xad, 0x27, 0xf3, 0x07, 0xf3, 0x05, 0xcf, 0xa0, 0x31, 0xd1, 0x8a, 0x23, 0xbb, 0x38, 0xa1, 0xd8,
	0xdd, 0xb7, 0x1e, 0xcd, 0x19, 0xc9, 0xd7, 0x39, 0x87, 0x7a, 0xe1, 0xca, 0x84, 0x94, 0xb3, 0x67,
	0xef, 0x50, 0xad, 0xf7, 0x64, 0x16, 0xe4, 0x9f, 0xa7, 0x86, 0xa4, 0xd6, 0x8c, 0xe3, 0xa6, 0xee,
	0x78, 0x68, 0xff, 0x8d, 0x17, 0xd9, 0xdc, 0x71, 0x0b, 0xae, 0x86, 0xce, 0x12, 0xf2, 0xc1, 0x5e,
	0xf4, 0x48, 0xf0, 0xb6, 0xc5, 0x3f, 0x92, 0xc3, 0x6f, 0x7b, 0x61, 0x70, 0x96, 0x3e, 0xb7, 0xd0,
	0x05, 0xac, 0x4f, 0x3d, 0x7d, 0x2c, 0x64, 0x63, 0x16, 0xb4, 0x79, 0xef, 0x24, 0xce, 0x12, 0xfa,
	0x1d, 0xec, 0xcd, 0x7b, 0x88, 0x89, 0x48, 0x82, 0x0e, 0xb4, 0x39, 0x8b, 0x9f, 0x92, 0x5a, 0x1f,
	0xbc, 0x41, 0x23, 0xdf, 0xe1, 0x3b, 0x75, 0x07, 0x5b, 0xb4, 0xfe, 0x9b, 0xde, 0x56, 0xf5, 0xfa,
	0x6f, 0x7c, 0x44, 0x74, 0x96, 0x50, 0x07, 0x9a, 0x63, 0x26, 0x5f, 0xb1, 0x30, 0xd1, 0x9c, 0x98,
	0x7d, 0x35, 0x6f, 0xed, 0xcd, 0xe0, 0xf9, 0x22, 0xbf, 0x50, 0x99, 0x6d, 0x4a, 0x0c, 0xda, 0xc9,
	0xd2, 0x63, 0xa2, 0x2e, 0xe5, 0x89, 0x3d, 0x55, 0x89, 0x9c, 0xa5, 0xe7, 0x3f, 0xf9, 0xed, 0x71,
	0x18, 0x89, 0x5e, 0x7a, 0x2b, 0x4b, 0xf6, 0xd1, 0x2d, 0x67, 0x3e, 0xc6, 0xfc, 0xc8, 0xef, 0x45,
	0x3c, 0x4e, 0x04, 0xf6, 0xef, 0x3e, 0xc3, 0x71, 0x74, 0x14, 0xb2, 0xa3, 0xfb, 0x2f, 0x8e, 0xc6,
	0xff, 0xc5, 0xb8, 0x5d, 0x55, 0xa1, 0xfa, 0xe2, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x17,
	0x76, 0x1b, 0xda, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HandyRustyServiceClient is the client API for HandyRustyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandyRustyServiceClient interface {
	// GetVersion returns the ChirpStack Network Server version.
	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetDeviceCounters(ctx context.Context, in *GetDeviceCountersRequest, opts ...grpc.CallOption) (*GetDeviceCountersResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetGatewayCounters(ctx context.Context, in *GetGatewayCountersRequest, opts ...grpc.CallOption) (*GetGatewayCountersResponse, error)
	// GetFrameCounters returns the summary-counters of frames by type
	GetFrameCounters(ctx context.Context, in *GetFrameCountersRequest, opts ...grpc.CallOption) (*GetFrameCountersResponse, error)
	// GetFramesSpeed returns the frames per minute array for given timedate gap
	GetFrameSpeed(ctx context.Context, in *GetFrameSpeedRequest, opts ...grpc.CallOption) (*GetFrameSpeedResponse, error)
	// ExecCommand sends command to the gateway and returns the answer
	ExecCommand(ctx context.Context, in *ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with device-frame logs
	GetDeviceFramesLog(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	StreamDeviceFramesLogCSV(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error)
	// GetCurrentState returns items for monitoring purposes.
	GetCurrentState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCurrentStateResponse, error)
	// Store to clickhouse replies of integration event notifications
	StoreIntegrationReplies(ctx context.Context, in *StoreIntegrationReplyRequest, opts ...grpc.CallOption) (*StoreIntegrationReplyResponse, error)
	// Get replies of integration event notifications
	GetIntegrationReplies(ctx context.Context, in *GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*GetIntegrationRepliesResponse, error)
	// Get dictionaries from clickhouse
	GetGatewayLogs(ctx context.Context, in *LogsGatewayRequest, opts ...grpc.CallOption) (*LogsGatewayResponse, error)
	// Get stats data for gateway from clickhouse
	GetGwStats(ctx context.Context, in *GetGwStatsRequest, opts ...grpc.CallOption) (*GetGwStatsResponse, error)
}

type handyRustyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHandyRustyServiceClient(cc grpc.ClientConnInterface) HandyRustyServiceClient {
	return &handyRustyServiceClient{cc}
}

func (c *handyRustyServiceClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetVersionResponse, error) {
	out := new(GetVersionResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceCounters(ctx context.Context, in *GetDeviceCountersRequest, opts ...grpc.CallOption) (*GetDeviceCountersResponse, error) {
	out := new(GetDeviceCountersResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetDeviceCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGatewayCounters(ctx context.Context, in *GetGatewayCountersRequest, opts ...grpc.CallOption) (*GetGatewayCountersResponse, error) {
	out := new(GetGatewayCountersResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetGatewayCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameCounters(ctx context.Context, in *GetFrameCountersRequest, opts ...grpc.CallOption) (*GetFrameCountersResponse, error) {
	out := new(GetFrameCountersResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetFrameCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameSpeed(ctx context.Context, in *GetFrameSpeedRequest, opts ...grpc.CallOption) (*GetFrameSpeedResponse, error) {
	out := new(GetFrameSpeedResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetFrameSpeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) ExecCommand(ctx context.Context, in *ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error) {
	out := new(gw.GatewayCommandExecResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/ExecCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceFramesLog(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*GetDeviceFramesLogResponse, error) {
	out := new(GetDeviceFramesLogResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetDeviceFramesLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StreamDeviceFramesLogCSV(ctx context.Context, in *GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HandyRustyService_serviceDesc.Streams[0], "/hr.HandyRustyService/StreamDeviceFramesLogCSV", opts...)
	if err != nil {
		return nil, err
	}
	x := &handyRustyServiceStreamDeviceFramesLogCSVClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HandyRustyService_StreamDeviceFramesLogCSVClient interface {
	Recv() (*StreamDeviceFramesLogCSVResponse, error)
	grpc.ClientStream
}

type handyRustyServiceStreamDeviceFramesLogCSVClient struct {
	grpc.ClientStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVClient) Recv() (*StreamDeviceFramesLogCSVResponse, error) {
	m := new(StreamDeviceFramesLogCSVResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *handyRustyServiceClient) GetCurrentState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetCurrentStateResponse, error) {
	out := new(GetCurrentStateResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetCurrentState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StoreIntegrationReplies(ctx context.Context, in *StoreIntegrationReplyRequest, opts ...grpc.CallOption) (*StoreIntegrationReplyResponse, error) {
	out := new(StoreIntegrationReplyResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/StoreIntegrationReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetIntegrationReplies(ctx context.Context, in *GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*GetIntegrationRepliesResponse, error) {
	out := new(GetIntegrationRepliesResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetIntegrationReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGatewayLogs(ctx context.Context, in *LogsGatewayRequest, opts ...grpc.CallOption) (*LogsGatewayResponse, error) {
	out := new(LogsGatewayResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetGatewayLogs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGwStats(ctx context.Context, in *GetGwStatsRequest, opts ...grpc.CallOption) (*GetGwStatsResponse, error) {
	out := new(GetGwStatsResponse)
	err := c.cc.Invoke(ctx, "/hr.HandyRustyService/GetGwStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandyRustyServiceServer is the server API for HandyRustyService service.
type HandyRustyServiceServer interface {
	// GetVersion returns the ChirpStack Network Server version.
	GetVersion(context.Context, *empty.Empty) (*GetVersionResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetDeviceCounters(context.Context, *GetDeviceCountersRequest) (*GetDeviceCountersResponse, error)
	// GetDeviceCounters returns the summary-counters log-items for given organisation_id
	GetGatewayCounters(context.Context, *GetGatewayCountersRequest) (*GetGatewayCountersResponse, error)
	// GetFrameCounters returns the summary-counters of frames by type
	GetFrameCounters(context.Context, *GetFrameCountersRequest) (*GetFrameCountersResponse, error)
	// GetFramesSpeed returns the frames per minute array for given timedate gap
	GetFrameSpeed(context.Context, *GetFrameSpeedRequest) (*GetFrameSpeedResponse, error)
	// ExecCommand sends command to the gateway and returns the answer
	ExecCommand(context.Context, *ExecCommandRequest) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with device-frame logs
	GetDeviceFramesLog(context.Context, *GetDeviceFramesLogRequest) (*GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	StreamDeviceFramesLogCSV(*GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error
	// GetCurrentState returns items for monitoring purposes.
	GetCurrentState(context.Context, *empty.Empty) (*GetCurrentStateResponse, error)
	// Store to clickhouse replies of integration event notifications
	StoreIntegrationReplies(context.Context, *StoreIntegrationReplyRequest) (*StoreIntegrationReplyResponse, error)
	// Get replies of integration event notifications
	GetIntegrationReplies(context.Context, *GetIntegrationRepliesRequest) (*GetIntegrationRepliesResponse, error)
	// Get dictionaries from clickhouse
	GetGatewayLogs(context.Context, *LogsGatewayRequest) (*LogsGatewayResponse, error)
	// Get stats data for gateway from clickhouse
	GetGwStats(context.Context, *GetGwStatsRequest) (*GetGwStatsResponse, error)
}

// UnimplementedHandyRustyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHandyRustyServiceServer struct {
}

func (*UnimplementedHandyRustyServiceServer) GetVersion(ctx context.Context, req *empty.Empty) (*GetVersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVersion not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceCounters(ctx context.Context, req *GetDeviceCountersRequest) (*GetDeviceCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceCounters not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetGatewayCounters(ctx context.Context, req *GetGatewayCountersRequest) (*GetGatewayCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayCounters not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetFrameCounters(ctx context.Context, req *GetFrameCountersRequest) (*GetFrameCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameCounters not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetFrameSpeed(ctx context.Context, req *GetFrameSpeedRequest) (*GetFrameSpeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameSpeed not implemented")
}
func (*UnimplementedHandyRustyServiceServer) ExecCommand(ctx context.Context, req *ExecCommandRequest) (*gw.GatewayCommandExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecCommand not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceFramesLog(ctx context.Context, req *GetDeviceFramesLogRequest) (*GetDeviceFramesLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceFramesLog not implemented")
}
func (*UnimplementedHandyRustyServiceServer) StreamDeviceFramesLogCSV(req *GetDeviceFramesLogRequest, srv HandyRustyService_StreamDeviceFramesLogCSVServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeviceFramesLogCSV not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetCurrentState(ctx context.Context, req *empty.Empty) (*GetCurrentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentState not implemented")
}
func (*UnimplementedHandyRustyServiceServer) StoreIntegrationReplies(ctx context.Context, req *StoreIntegrationReplyRequest) (*StoreIntegrationReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreIntegrationReplies not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetIntegrationReplies(ctx context.Context, req *GetIntegrationRepliesRequest) (*GetIntegrationRepliesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIntegrationReplies not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetGatewayLogs(ctx context.Context, req *LogsGatewayRequest) (*LogsGatewayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewayLogs not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetGwStats(ctx context.Context, req *GetGwStatsRequest) (*GetGwStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGwStats not implemented")
}

func RegisterHandyRustyServiceServer(s *grpc.Server, srv HandyRustyServiceServer) {
	s.RegisterService(&_HandyRustyService_serviceDesc, srv)
}

func _HandyRustyService_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetVersion(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetDeviceCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceCounters(ctx, req.(*GetDeviceCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGatewayCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewayCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGatewayCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetGatewayCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGatewayCounters(ctx, req.(*GetGatewayCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetFrameCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, req.(*GetFrameCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrameSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetFrameSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, req.(*GetFrameSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_ExecCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/ExecCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, req.(*ExecCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceFramesLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceFramesLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetDeviceFramesLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, req.(*GetDeviceFramesLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StreamDeviceFramesLogCSV_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetDeviceFramesLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HandyRustyServiceServer).StreamDeviceFramesLogCSV(m, &handyRustyServiceStreamDeviceFramesLogCSVServer{stream})
}

type HandyRustyService_StreamDeviceFramesLogCSVServer interface {
	Send(*StreamDeviceFramesLogCSVResponse) error
	grpc.ServerStream
}

type handyRustyServiceStreamDeviceFramesLogCSVServer struct {
	grpc.ServerStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVServer) Send(m *StreamDeviceFramesLogCSVResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HandyRustyService_GetCurrentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetCurrentState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StoreIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StoreIntegrationReplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).StoreIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/StoreIntegrationReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).StoreIntegrationReplies(ctx, req.(*StoreIntegrationReplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIntegrationRepliesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetIntegrationReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, req.(*GetIntegrationRepliesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGatewayLogs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogsGatewayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGatewayLogs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetGatewayLogs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGatewayLogs(ctx, req.(*LogsGatewayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGwStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGwStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hr.HandyRustyService/GetGwStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, req.(*GetGwStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HandyRustyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hr.HandyRustyService",
	HandlerType: (*HandyRustyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVersion",
			Handler:    _HandyRustyService_GetVersion_Handler,
		},
		{
			MethodName: "GetDeviceCounters",
			Handler:    _HandyRustyService_GetDeviceCounters_Handler,
		},
		{
			MethodName: "GetGatewayCounters",
			Handler:    _HandyRustyService_GetGatewayCounters_Handler,
		},
		{
			MethodName: "GetFrameCounters",
			Handler:    _HandyRustyService_GetFrameCounters_Handler,
		},
		{
			MethodName: "GetFrameSpeed",
			Handler:    _HandyRustyService_GetFrameSpeed_Handler,
		},
		{
			MethodName: "ExecCommand",
			Handler:    _HandyRustyService_ExecCommand_Handler,
		},
		{
			MethodName: "GetDeviceFramesLog",
			Handler:    _HandyRustyService_GetDeviceFramesLog_Handler,
		},
		{
			MethodName: "GetCurrentState",
			Handler:    _HandyRustyService_GetCurrentState_Handler,
		},
		{
			MethodName: "StoreIntegrationReplies",
			Handler:    _HandyRustyService_StoreIntegrationReplies_Handler,
		},
		{
			MethodName: "GetIntegrationReplies",
			Handler:    _HandyRustyService_GetIntegrationReplies_Handler,
		},
		{
			MethodName: "GetGatewayLogs",
			Handler:    _HandyRustyService_GetGatewayLogs_Handler,
		},
		{
			MethodName: "GetGwStats",
			Handler:    _HandyRustyService_GetGwStats_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamDeviceFramesLogCSV",
			Handler:       _HandyRustyService_StreamDeviceFramesLogCSV_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "handyrusty/hr.proto",
}
