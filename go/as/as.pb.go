// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/as.proto

package as

import (
	context "context"
	fmt "fmt"
	common "github.com/brocaar/chirpstack-api/go/v3/common"
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	ns "github.com/brocaar/chirpstack-api/go/v3/ns"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RXWindow int32

const (
	RXWindow_RX1 RXWindow = 0
	RXWindow_RX2 RXWindow = 1
)

var RXWindow_name = map[int32]string{
	0: "RX1",
	1: "RX2",
}

var RXWindow_value = map[string]int32{
	"RX1": 0,
	"RX2": 1,
}

func (x RXWindow) String() string {
	return proto.EnumName(RXWindow_name, int32(x))
}

func (RXWindow) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{0}
}

type ErrorType int32

const (
	// Generic error type.
	ErrorType_GENERIC ErrorType = 0
	// OTAA error.
	ErrorType_OTAA ErrorType = 1
	// Uplink frame-counter was reset.
	ErrorType_DATA_UP_FCNT_RESET ErrorType = 2
	// Uplink MIC error.
	ErrorType_DATA_UP_MIC ErrorType = 3
	// Downlink payload size error.
	ErrorType_DEVICE_QUEUE_ITEM_SIZE ErrorType = 4
	// Downlink frame-counter error.
	ErrorType_DEVICE_QUEUE_ITEM_FCNT ErrorType = 5
	// Uplink frame-counter retransmission.
	ErrorType_DATA_UP_FCNT_RETRANSMISSION ErrorType = 6
	// Downlink gateway error.
	ErrorType_DATA_DOWN_GATEWAY ErrorType = 7
)

var ErrorType_name = map[int32]string{
	0: "GENERIC",
	1: "OTAA",
	2: "DATA_UP_FCNT_RESET",
	3: "DATA_UP_MIC",
	4: "DEVICE_QUEUE_ITEM_SIZE",
	5: "DEVICE_QUEUE_ITEM_FCNT",
	6: "DATA_UP_FCNT_RETRANSMISSION",
	7: "DATA_DOWN_GATEWAY",
}

var ErrorType_value = map[string]int32{
	"GENERIC":                     0,
	"OTAA":                        1,
	"DATA_UP_FCNT_RESET":          2,
	"DATA_UP_MIC":                 3,
	"DEVICE_QUEUE_ITEM_SIZE":      4,
	"DEVICE_QUEUE_ITEM_FCNT":      5,
	"DATA_UP_FCNT_RETRANSMISSION": 6,
	"DATA_DOWN_GATEWAY":           7,
}

func (x ErrorType) String() string {
	return proto.EnumName(ErrorType_name, int32(x))
}

func (ErrorType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{1}
}

type GetServiceProfileRequest struct {
	// ID of the service-profile.
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceProfileRequest) Reset()         { *m = GetServiceProfileRequest{} }
func (m *GetServiceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceProfileRequest) ProtoMessage()    {}
func (*GetServiceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{0}
}

func (m *GetServiceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceProfileRequest.Unmarshal(m, b)
}
func (m *GetServiceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceProfileRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceProfileRequest.Merge(m, src)
}
func (m *GetServiceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceProfileRequest.Size(m)
}
func (m *GetServiceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceProfileRequest proto.InternalMessageInfo

func (m *GetServiceProfileRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type GetServiceProfileResponse struct {
	// Service-profile object to create in as-db
	AsData               *ServiceProfileItem `protobuf:"bytes,1,opt,name=as_data,json=asData,proto3" json:"as_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetServiceProfileResponse) Reset()         { *m = GetServiceProfileResponse{} }
func (m *GetServiceProfileResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceProfileResponse) ProtoMessage()    {}
func (*GetServiceProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{1}
}

func (m *GetServiceProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceProfileResponse.Unmarshal(m, b)
}
func (m *GetServiceProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceProfileResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceProfileResponse.Merge(m, src)
}
func (m *GetServiceProfileResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceProfileResponse.Size(m)
}
func (m *GetServiceProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceProfileResponse proto.InternalMessageInfo

func (m *GetServiceProfileResponse) GetAsData() *ServiceProfileItem {
	if m != nil {
		return m.AsData
	}
	return nil
}

type CreateServiceProfileRequest struct {
	// Service-profile data - object to create in as-db
	AsData *ServiceProfileItem `protobuf:"bytes,1,opt,name=as_data,json=asData,proto3" json:"as_data,omitempty"`
	// Service-profile data -  object to create in ns-db
	NsData               *ns.ServiceProfile `protobuf:"bytes,2,opt,name=ns_data,json=nsData,proto3" json:"ns_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateServiceProfileRequest) Reset()         { *m = CreateServiceProfileRequest{} }
func (m *CreateServiceProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceProfileRequest) ProtoMessage()    {}
func (*CreateServiceProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{2}
}

func (m *CreateServiceProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceProfileRequest.Unmarshal(m, b)
}
func (m *CreateServiceProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceProfileRequest.Marshal(b, m, deterministic)
}
func (m *CreateServiceProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceProfileRequest.Merge(m, src)
}
func (m *CreateServiceProfileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceProfileRequest.Size(m)
}
func (m *CreateServiceProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceProfileRequest proto.InternalMessageInfo

func (m *CreateServiceProfileRequest) GetAsData() *ServiceProfileItem {
	if m != nil {
		return m.AsData
	}
	return nil
}

func (m *CreateServiceProfileRequest) GetNsData() *ns.ServiceProfile {
	if m != nil {
		return m.NsData
	}
	return nil
}

type CreateServiceProfileResponse struct {
	// Service-profile ID (UUID).
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServiceProfileResponse) Reset()         { *m = CreateServiceProfileResponse{} }
func (m *CreateServiceProfileResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServiceProfileResponse) ProtoMessage()    {}
func (*CreateServiceProfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{3}
}

func (m *CreateServiceProfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceProfileResponse.Unmarshal(m, b)
}
func (m *CreateServiceProfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceProfileResponse.Marshal(b, m, deterministic)
}
func (m *CreateServiceProfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceProfileResponse.Merge(m, src)
}
func (m *CreateServiceProfileResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServiceProfileResponse.Size(m)
}
func (m *CreateServiceProfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceProfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceProfileResponse proto.InternalMessageInfo

func (m *CreateServiceProfileResponse) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type ServiceProfileItem struct {
	NetworkServerId      int64                `protobuf:"varint,1,opt,name=network_server_id,json=networkServerId,proto3" json:"network_server_id,omitempty"`
	OrganizationId       int64                `protobuf:"varint,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Name                 string               `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	DeviceCountLimit     uint32               `protobuf:"varint,5,opt,name=device_count_limit,json=deviceCountLimit,proto3" json:"device_count_limit,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ServiceProfileItem) Reset()         { *m = ServiceProfileItem{} }
func (m *ServiceProfileItem) String() string { return proto.CompactTextString(m) }
func (*ServiceProfileItem) ProtoMessage()    {}
func (*ServiceProfileItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{4}
}

func (m *ServiceProfileItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceProfileItem.Unmarshal(m, b)
}
func (m *ServiceProfileItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceProfileItem.Marshal(b, m, deterministic)
}
func (m *ServiceProfileItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceProfileItem.Merge(m, src)
}
func (m *ServiceProfileItem) XXX_Size() int {
	return xxx_messageInfo_ServiceProfileItem.Size(m)
}
func (m *ServiceProfileItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceProfileItem.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceProfileItem proto.InternalMessageInfo

func (m *ServiceProfileItem) GetNetworkServerId() int64 {
	if m != nil {
		return m.NetworkServerId
	}
	return 0
}

func (m *ServiceProfileItem) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

func (m *ServiceProfileItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServiceProfileItem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ServiceProfileItem) GetDeviceCountLimit() uint32 {
	if m != nil {
		return m.DeviceCountLimit
	}
	return 0
}

func (m *ServiceProfileItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ServiceProfileItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GatewayMetaData struct {
	// gateway id
	GwId string `protobuf:"bytes,1,opt,name=gw_id,json=gwId,proto3" json:"gw_id,omitempty"`
	// metadata last recieved
	Metadata             map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GatewayMetaData) Reset()         { *m = GatewayMetaData{} }
func (m *GatewayMetaData) String() string { return proto.CompactTextString(m) }
func (*GatewayMetaData) ProtoMessage()    {}
func (*GatewayMetaData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{5}
}

func (m *GatewayMetaData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayMetaData.Unmarshal(m, b)
}
func (m *GatewayMetaData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayMetaData.Marshal(b, m, deterministic)
}
func (m *GatewayMetaData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayMetaData.Merge(m, src)
}
func (m *GatewayMetaData) XXX_Size() int {
	return xxx_messageInfo_GatewayMetaData.Size(m)
}
func (m *GatewayMetaData) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayMetaData.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayMetaData proto.InternalMessageInfo

func (m *GatewayMetaData) GetGwId() string {
	if m != nil {
		return m.GwId
	}
	return ""
}

func (m *GatewayMetaData) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type GetGWMetaDataResponse struct {
	// Gateway metadata by gateway
	MetadataList         []*GatewayMetaData `protobuf:"bytes,1,rep,name=metadata_list,json=metadataList,proto3" json:"metadata_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetGWMetaDataResponse) Reset()         { *m = GetGWMetaDataResponse{} }
func (m *GetGWMetaDataResponse) String() string { return proto.CompactTextString(m) }
func (*GetGWMetaDataResponse) ProtoMessage()    {}
func (*GetGWMetaDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{6}
}

func (m *GetGWMetaDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGWMetaDataResponse.Unmarshal(m, b)
}
func (m *GetGWMetaDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGWMetaDataResponse.Marshal(b, m, deterministic)
}
func (m *GetGWMetaDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGWMetaDataResponse.Merge(m, src)
}
func (m *GetGWMetaDataResponse) XXX_Size() int {
	return xxx_messageInfo_GetGWMetaDataResponse.Size(m)
}
func (m *GetGWMetaDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGWMetaDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGWMetaDataResponse proto.InternalMessageInfo

func (m *GetGWMetaDataResponse) GetMetadataList() []*GatewayMetaData {
	if m != nil {
		return m.MetadataList
	}
	return nil
}

type GetDictionaryRequest struct {
	// choose dictionary type.
	DicType              string   `protobuf:"bytes,1,opt,name=dic_type,json=dicType,proto3" json:"dic_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDictionaryRequest) Reset()         { *m = GetDictionaryRequest{} }
func (m *GetDictionaryRequest) String() string { return proto.CompactTextString(m) }
func (*GetDictionaryRequest) ProtoMessage()    {}
func (*GetDictionaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{7}
}

func (m *GetDictionaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDictionaryRequest.Unmarshal(m, b)
}
func (m *GetDictionaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDictionaryRequest.Marshal(b, m, deterministic)
}
func (m *GetDictionaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDictionaryRequest.Merge(m, src)
}
func (m *GetDictionaryRequest) XXX_Size() int {
	return xxx_messageInfo_GetDictionaryRequest.Size(m)
}
func (m *GetDictionaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDictionaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDictionaryRequest proto.InternalMessageInfo

func (m *GetDictionaryRequest) GetDicType() string {
	if m != nil {
		return m.DicType
	}
	return ""
}

type GetDictionaryResponse struct {
	// choose dictionary type.
	DicType              string        `protobuf:"bytes,1,opt,name=dic_type,json=dicType,proto3" json:"dic_type,omitempty"`
	List                 []*Dictionary `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDictionaryResponse) Reset()         { *m = GetDictionaryResponse{} }
func (m *GetDictionaryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDictionaryResponse) ProtoMessage()    {}
func (*GetDictionaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{8}
}

func (m *GetDictionaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDictionaryResponse.Unmarshal(m, b)
}
func (m *GetDictionaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDictionaryResponse.Marshal(b, m, deterministic)
}
func (m *GetDictionaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDictionaryResponse.Merge(m, src)
}
func (m *GetDictionaryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDictionaryResponse.Size(m)
}
func (m *GetDictionaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDictionaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDictionaryResponse proto.InternalMessageInfo

func (m *GetDictionaryResponse) GetDicType() string {
	if m != nil {
		return m.DicType
	}
	return ""
}

func (m *GetDictionaryResponse) GetList() []*Dictionary {
	if m != nil {
		return m.List
	}
	return nil
}

type Dictionary struct {
	// id of the label
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// type of the dictionary
	DicType string `protobuf:"bytes,2,opt,name=dic_type,json=dicType,proto3" json:"dic_type,omitempty"`
	// label name
	Label string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	// boolean flag if it is relevant
	IsActual             bool     `protobuf:"varint,4,opt,name=is_actual,json=isActual,proto3" json:"is_actual,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dictionary) Reset()         { *m = Dictionary{} }
func (m *Dictionary) String() string { return proto.CompactTextString(m) }
func (*Dictionary) ProtoMessage()    {}
func (*Dictionary) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{9}
}

func (m *Dictionary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dictionary.Unmarshal(m, b)
}
func (m *Dictionary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dictionary.Marshal(b, m, deterministic)
}
func (m *Dictionary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dictionary.Merge(m, src)
}
func (m *Dictionary) XXX_Size() int {
	return xxx_messageInfo_Dictionary.Size(m)
}
func (m *Dictionary) XXX_DiscardUnknown() {
	xxx_messageInfo_Dictionary.DiscardUnknown(m)
}

var xxx_messageInfo_Dictionary proto.InternalMessageInfo

func (m *Dictionary) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Dictionary) GetDicType() string {
	if m != nil {
		return m.DicType
	}
	return ""
}

func (m *Dictionary) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Dictionary) GetIsActual() bool {
	if m != nil {
		return m.IsActual
	}
	return false
}

type GetOrgByDevEUIRequest struct {
	// Device EUI (HEX encoded).
	DevEui               string   `protobuf:"bytes,1,opt,name=dev_eui,json=devEUI,proto3" json:"dev_eui,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrgByDevEUIRequest) Reset()         { *m = GetOrgByDevEUIRequest{} }
func (m *GetOrgByDevEUIRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrgByDevEUIRequest) ProtoMessage()    {}
func (*GetOrgByDevEUIRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{10}
}

func (m *GetOrgByDevEUIRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrgByDevEUIRequest.Unmarshal(m, b)
}
func (m *GetOrgByDevEUIRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrgByDevEUIRequest.Marshal(b, m, deterministic)
}
func (m *GetOrgByDevEUIRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrgByDevEUIRequest.Merge(m, src)
}
func (m *GetOrgByDevEUIRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrgByDevEUIRequest.Size(m)
}
func (m *GetOrgByDevEUIRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrgByDevEUIRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrgByDevEUIRequest proto.InternalMessageInfo

func (m *GetOrgByDevEUIRequest) GetDevEui() string {
	if m != nil {
		return m.DevEui
	}
	return ""
}

type GetOrgIDByGwIDRequest struct {
	// Gateway ID (HEX encoded).
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrgIDByGwIDRequest) Reset()         { *m = GetOrgIDByGwIDRequest{} }
func (m *GetOrgIDByGwIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrgIDByGwIDRequest) ProtoMessage()    {}
func (*GetOrgIDByGwIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{11}
}

func (m *GetOrgIDByGwIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrgIDByGwIDRequest.Unmarshal(m, b)
}
func (m *GetOrgIDByGwIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrgIDByGwIDRequest.Marshal(b, m, deterministic)
}
func (m *GetOrgIDByGwIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrgIDByGwIDRequest.Merge(m, src)
}
func (m *GetOrgIDByGwIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrgIDByGwIDRequest.Size(m)
}
func (m *GetOrgIDByGwIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrgIDByGwIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrgIDByGwIDRequest proto.InternalMessageInfo

func (m *GetOrgIDByGwIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetDeviceAppSKeyResponse struct {
	// AppSKey is a AES128Key for the device
	Value                []byte   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceAppSKeyResponse) Reset()         { *m = GetDeviceAppSKeyResponse{} }
func (m *GetDeviceAppSKeyResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceAppSKeyResponse) ProtoMessage()    {}
func (*GetDeviceAppSKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{12}
}

func (m *GetDeviceAppSKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceAppSKeyResponse.Unmarshal(m, b)
}
func (m *GetDeviceAppSKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceAppSKeyResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceAppSKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceAppSKeyResponse.Merge(m, src)
}
func (m *GetDeviceAppSKeyResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceAppSKeyResponse.Size(m)
}
func (m *GetDeviceAppSKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceAppSKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceAppSKeyResponse proto.InternalMessageInfo

func (m *GetDeviceAppSKeyResponse) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type GetOrgByDevEUIResponse struct {
	// Organization ID.
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrgByDevEUIResponse) Reset()         { *m = GetOrgByDevEUIResponse{} }
func (m *GetOrgByDevEUIResponse) String() string { return proto.CompactTextString(m) }
func (*GetOrgByDevEUIResponse) ProtoMessage()    {}
func (*GetOrgByDevEUIResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{13}
}

func (m *GetOrgByDevEUIResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrgByDevEUIResponse.Unmarshal(m, b)
}
func (m *GetOrgByDevEUIResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrgByDevEUIResponse.Marshal(b, m, deterministic)
}
func (m *GetOrgByDevEUIResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrgByDevEUIResponse.Merge(m, src)
}
func (m *GetOrgByDevEUIResponse) XXX_Size() int {
	return xxx_messageInfo_GetOrgByDevEUIResponse.Size(m)
}
func (m *GetOrgByDevEUIResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrgByDevEUIResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrgByDevEUIResponse proto.InternalMessageInfo

func (m *GetOrgByDevEUIResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ListOrganizationRequest struct {
	// Max number of organizations to return in the result-set.
	Limit int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	// Offset in the result-set (for pagination).
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// When provided, the given string will be used to search on
	// displayName.
	Search               string   `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrganizationRequest) Reset()         { *m = ListOrganizationRequest{} }
func (m *ListOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationRequest) ProtoMessage()    {}
func (*ListOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{14}
}

func (m *ListOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationRequest.Unmarshal(m, b)
}
func (m *ListOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *ListOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationRequest.Merge(m, src)
}
func (m *ListOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationRequest.Size(m)
}
func (m *ListOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationRequest proto.InternalMessageInfo

func (m *ListOrganizationRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListOrganizationRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ListOrganizationRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

type ListOrganizationResponse struct {
	// Total number of organizations.
	TotalCount           int64                   `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Result               []*OrganizationListItem `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ListOrganizationResponse) Reset()         { *m = ListOrganizationResponse{} }
func (m *ListOrganizationResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrganizationResponse) ProtoMessage()    {}
func (*ListOrganizationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{15}
}

func (m *ListOrganizationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrganizationResponse.Unmarshal(m, b)
}
func (m *ListOrganizationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrganizationResponse.Marshal(b, m, deterministic)
}
func (m *ListOrganizationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrganizationResponse.Merge(m, src)
}
func (m *ListOrganizationResponse) XXX_Size() int {
	return xxx_messageInfo_ListOrganizationResponse.Size(m)
}
func (m *ListOrganizationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrganizationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrganizationResponse proto.InternalMessageInfo

func (m *ListOrganizationResponse) GetTotalCount() int64 {
	if m != nil {
		return m.TotalCount
	}
	return 0
}

func (m *ListOrganizationResponse) GetResult() []*OrganizationListItem {
	if m != nil {
		return m.Result
	}
	return nil
}

type OrganizationListItem struct {
	// Organization ID.
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Organization name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Organization display name.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Can the organization create and "own" Gateways?
	CanHaveGateways bool `protobuf:"varint,4,opt,name=can_have_gateways,json=canHaveGateways,proto3" json:"can_have_gateways,omitempty"`
	// Created at timestamp.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *OrganizationListItem) Reset()         { *m = OrganizationListItem{} }
func (m *OrganizationListItem) String() string { return proto.CompactTextString(m) }
func (*OrganizationListItem) ProtoMessage()    {}
func (*OrganizationListItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{16}
}

func (m *OrganizationListItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationListItem.Unmarshal(m, b)
}
func (m *OrganizationListItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationListItem.Marshal(b, m, deterministic)
}
func (m *OrganizationListItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationListItem.Merge(m, src)
}
func (m *OrganizationListItem) XXX_Size() int {
	return xxx_messageInfo_OrganizationListItem.Size(m)
}
func (m *OrganizationListItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationListItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationListItem proto.InternalMessageInfo

func (m *OrganizationListItem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *OrganizationListItem) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OrganizationListItem) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *OrganizationListItem) GetCanHaveGateways() bool {
	if m != nil {
		return m.CanHaveGateways
	}
	return false
}

func (m *OrganizationListItem) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *OrganizationListItem) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type GetDevicesSummaryRequest struct {
	// Organization ID.
	OrganizationId       int64    `protobuf:"varint,1,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicesSummaryRequest) Reset()         { *m = GetDevicesSummaryRequest{} }
func (m *GetDevicesSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*GetDevicesSummaryRequest) ProtoMessage()    {}
func (*GetDevicesSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{17}
}

func (m *GetDevicesSummaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesSummaryRequest.Unmarshal(m, b)
}
func (m *GetDevicesSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesSummaryRequest.Marshal(b, m, deterministic)
}
func (m *GetDevicesSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesSummaryRequest.Merge(m, src)
}
func (m *GetDevicesSummaryRequest) XXX_Size() int {
	return xxx_messageInfo_GetDevicesSummaryRequest.Size(m)
}
func (m *GetDevicesSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesSummaryRequest proto.InternalMessageInfo

func (m *GetDevicesSummaryRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type GetDevicesSummaryResponse struct {
	// Active count.
	ActiveCount uint32 `protobuf:"varint,1,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	// Inactive count.
	InactiveCount uint32 `protobuf:"varint,2,opt,name=inactive_count,json=inactiveCount,proto3" json:"inactive_count,omitempty"`
	// per data-rate count.
	// Devices that have never been seen are excluded.
	DrCount map[uint32]uint32 `protobuf:"bytes,3,rep,name=dr_count,json=drCount,proto3" json:"dr_count,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Never seen count.
	NeverSeenCount       uint32   `protobuf:"varint,4,opt,name=never_seen_count,json=neverSeenCount,proto3" json:"never_seen_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDevicesSummaryResponse) Reset()         { *m = GetDevicesSummaryResponse{} }
func (m *GetDevicesSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDevicesSummaryResponse) ProtoMessage()    {}
func (*GetDevicesSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{18}
}

func (m *GetDevicesSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDevicesSummaryResponse.Unmarshal(m, b)
}
func (m *GetDevicesSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDevicesSummaryResponse.Marshal(b, m, deterministic)
}
func (m *GetDevicesSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDevicesSummaryResponse.Merge(m, src)
}
func (m *GetDevicesSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDevicesSummaryResponse.Size(m)
}
func (m *GetDevicesSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDevicesSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDevicesSummaryResponse proto.InternalMessageInfo

func (m *GetDevicesSummaryResponse) GetActiveCount() uint32 {
	if m != nil {
		return m.ActiveCount
	}
	return 0
}

func (m *GetDevicesSummaryResponse) GetInactiveCount() uint32 {
	if m != nil {
		return m.InactiveCount
	}
	return 0
}

func (m *GetDevicesSummaryResponse) GetDrCount() map[uint32]uint32 {
	if m != nil {
		return m.DrCount
	}
	return nil
}

func (m *GetDevicesSummaryResponse) GetNeverSeenCount() uint32 {
	if m != nil {
		return m.NeverSeenCount
	}
	return 0
}

type GetGatewaysSummaryRequest struct {
	// Organization ID.
	OrganizationId       int64    `protobuf:"varint,1,opt,name=organization_id,json=organizationID,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewaysSummaryRequest) Reset()         { *m = GetGatewaysSummaryRequest{} }
func (m *GetGatewaysSummaryRequest) String() string { return proto.CompactTextString(m) }
func (*GetGatewaysSummaryRequest) ProtoMessage()    {}
func (*GetGatewaysSummaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{19}
}

func (m *GetGatewaysSummaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewaysSummaryRequest.Unmarshal(m, b)
}
func (m *GetGatewaysSummaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewaysSummaryRequest.Marshal(b, m, deterministic)
}
func (m *GetGatewaysSummaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewaysSummaryRequest.Merge(m, src)
}
func (m *GetGatewaysSummaryRequest) XXX_Size() int {
	return xxx_messageInfo_GetGatewaysSummaryRequest.Size(m)
}
func (m *GetGatewaysSummaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewaysSummaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewaysSummaryRequest proto.InternalMessageInfo

func (m *GetGatewaysSummaryRequest) GetOrganizationId() int64 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type GetGatewaysSummaryResponse struct {
	// Active count.
	ActiveCount uint32 `protobuf:"varint,1,opt,name=active_count,json=activeCount,proto3" json:"active_count,omitempty"`
	// Inactive count.
	InactiveCount uint32 `protobuf:"varint,2,opt,name=inactive_count,json=inactiveCount,proto3" json:"inactive_count,omitempty"`
	// Never seen count.
	NeverSeenCount       uint32   `protobuf:"varint,3,opt,name=never_seen_count,json=neverSeenCount,proto3" json:"never_seen_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGatewaysSummaryResponse) Reset()         { *m = GetGatewaysSummaryResponse{} }
func (m *GetGatewaysSummaryResponse) String() string { return proto.CompactTextString(m) }
func (*GetGatewaysSummaryResponse) ProtoMessage()    {}
func (*GetGatewaysSummaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{20}
}

func (m *GetGatewaysSummaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGatewaysSummaryResponse.Unmarshal(m, b)
}
func (m *GetGatewaysSummaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGatewaysSummaryResponse.Marshal(b, m, deterministic)
}
func (m *GetGatewaysSummaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGatewaysSummaryResponse.Merge(m, src)
}
func (m *GetGatewaysSummaryResponse) XXX_Size() int {
	return xxx_messageInfo_GetGatewaysSummaryResponse.Size(m)
}
func (m *GetGatewaysSummaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGatewaysSummaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGatewaysSummaryResponse proto.InternalMessageInfo

func (m *GetGatewaysSummaryResponse) GetActiveCount() uint32 {
	if m != nil {
		return m.ActiveCount
	}
	return 0
}

func (m *GetGatewaysSummaryResponse) GetInactiveCount() uint32 {
	if m != nil {
		return m.InactiveCount
	}
	return 0
}

func (m *GetGatewaysSummaryResponse) GetNeverSeenCount() uint32 {
	if m != nil {
		return m.NeverSeenCount
	}
	return 0
}

type DeviceActivationContext struct {
	// Assigned Device Address.
	DevAddr []byte `protobuf:"bytes,1,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Application session key (envelope).
	AppSKey              *common.KeyEnvelope `protobuf:"bytes,2,opt,name=app_s_key,json=appSKey,proto3" json:"app_s_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DeviceActivationContext) Reset()         { *m = DeviceActivationContext{} }
func (m *DeviceActivationContext) String() string { return proto.CompactTextString(m) }
func (*DeviceActivationContext) ProtoMessage()    {}
func (*DeviceActivationContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{21}
}

func (m *DeviceActivationContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceActivationContext.Unmarshal(m, b)
}
func (m *DeviceActivationContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceActivationContext.Marshal(b, m, deterministic)
}
func (m *DeviceActivationContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceActivationContext.Merge(m, src)
}
func (m *DeviceActivationContext) XXX_Size() int {
	return xxx_messageInfo_DeviceActivationContext.Size(m)
}
func (m *DeviceActivationContext) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceActivationContext.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceActivationContext proto.InternalMessageInfo

func (m *DeviceActivationContext) GetDevAddr() []byte {
	if m != nil {
		return m.DevAddr
	}
	return nil
}

func (m *DeviceActivationContext) GetAppSKey() *common.KeyEnvelope {
	if m != nil {
		return m.AppSKey
	}
	return nil
}

type HandleUplinkDataRequest struct {
	// DevEUI EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Join EUI used for OTAA activation (8 bytes).
	JoinEui []byte `protobuf:"bytes,2,opt,name=join_eui,json=joinEui,proto3" json:"join_eui,omitempty"`
	// Frame-counter.
	FCnt uint32 `protobuf:"varint,3,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// Frame port.
	FPort uint32 `protobuf:"varint,4,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// ADR enabled.
	Adr bool `protobuf:"varint,5,opt,name=adr,proto3" json:"adr,omitempty"`
	// Data-rate.
	Dr uint32 `protobuf:"varint,6,opt,name=dr,proto3" json:"dr,omitempty"`
	// TX meta-data.
	TxInfo *gw.UplinkTXInfo `protobuf:"bytes,7,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// RX meta-data.
	RxInfo []*gw.UplinkRXInfo `protobuf:"bytes,8,rep,name=rx_info,json=rxInfo,proto3" json:"rx_info,omitempty"`
	// Received data (encrypted).
	Data []byte `protobuf:"bytes,9,opt,name=data,proto3" json:"data,omitempty"`
	// Device activation context.
	//
	// This field is only set on the first uplink frame when the security
	// context has changed (e.g. a new OTAA (re)activation).
	DeviceActivationContext *DeviceActivationContext `protobuf:"bytes,10,opt,name=device_activation_context,json=deviceActivationContext,proto3" json:"device_activation_context,omitempty"`
	// Uplink was of type confirmed.
	ConfirmedUplink bool `protobuf:"varint,11,opt,name=confirmed_uplink,json=confirmedUplink,proto3" json:"confirmed_uplink,omitempty"`
	// true if recieved more than 2 minutes after. Modification
	Late bool `protobuf:"varint,12,opt,name=late,proto3" json:"late,omitempty"`
	// Mic. Modification
	Mic []byte `protobuf:"bytes,13,opt,name=mic,proto3" json:"mic,omitempty"`
	// time frame(s) recieved. Can be gps\fts\by server for packet with best SNR. Modification
	Time *timestamp.Timestamp `protobuf:"bytes,14,opt,name=time,proto3" json:"time,omitempty"`
	// limit for current uplink packet
	Limit ns.RateLimit `protobuf:"varint,15,opt,name=limit,proto3,enum=ns.RateLimit" json:"limit,omitempty"`
	// average Packet Error Rate for last 20 packets in device_session
	Per float64 `protobuf:"fixed64,16,opt,name=per,proto3" json:"per,omitempty"`
	// average Signal to Noise Ratio for last 20 packets in device_session
	Snr float64 `protobuf:"fixed64,17,opt,name=snr,proto3" json:"snr,omitempty"`
	// average Received signal strength indication for last 20 packets in device_session
	Rssi                 float64  `protobuf:"fixed64,18,opt,name=rssi,proto3" json:"rssi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleUplinkDataRequest) Reset()         { *m = HandleUplinkDataRequest{} }
func (m *HandleUplinkDataRequest) String() string { return proto.CompactTextString(m) }
func (*HandleUplinkDataRequest) ProtoMessage()    {}
func (*HandleUplinkDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{22}
}

func (m *HandleUplinkDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleUplinkDataRequest.Unmarshal(m, b)
}
func (m *HandleUplinkDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleUplinkDataRequest.Marshal(b, m, deterministic)
}
func (m *HandleUplinkDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleUplinkDataRequest.Merge(m, src)
}
func (m *HandleUplinkDataRequest) XXX_Size() int {
	return xxx_messageInfo_HandleUplinkDataRequest.Size(m)
}
func (m *HandleUplinkDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleUplinkDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleUplinkDataRequest proto.InternalMessageInfo

func (m *HandleUplinkDataRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetJoinEui() []byte {
	if m != nil {
		return m.JoinEui
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *HandleUplinkDataRequest) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *HandleUplinkDataRequest) GetAdr() bool {
	if m != nil {
		return m.Adr
	}
	return false
}

func (m *HandleUplinkDataRequest) GetDr() uint32 {
	if m != nil {
		return m.Dr
	}
	return 0
}

func (m *HandleUplinkDataRequest) GetTxInfo() *gw.UplinkTXInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetRxInfo() []*gw.UplinkRXInfo {
	if m != nil {
		return m.RxInfo
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetDeviceActivationContext() *DeviceActivationContext {
	if m != nil {
		return m.DeviceActivationContext
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetConfirmedUplink() bool {
	if m != nil {
		return m.ConfirmedUplink
	}
	return false
}

func (m *HandleUplinkDataRequest) GetLate() bool {
	if m != nil {
		return m.Late
	}
	return false
}

func (m *HandleUplinkDataRequest) GetMic() []byte {
	if m != nil {
		return m.Mic
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *HandleUplinkDataRequest) GetLimit() ns.RateLimit {
	if m != nil {
		return m.Limit
	}
	return ns.RateLimit_Unlimited
}

func (m *HandleUplinkDataRequest) GetPer() float64 {
	if m != nil {
		return m.Per
	}
	return 0
}

func (m *HandleUplinkDataRequest) GetSnr() float64 {
	if m != nil {
		return m.Snr
	}
	return 0
}

func (m *HandleUplinkDataRequest) GetRssi() float64 {
	if m != nil {
		return m.Rssi
	}
	return 0
}

type HandleProprietaryUplinkRequest struct {
	// MACPayload of the proprietary LoRaWAN frame.
	MacPayload []byte `protobuf:"bytes,1,opt,name=mac_payload,json=macPayload,proto3" json:"mac_payload,omitempty"`
	// MIC of the proprietary LoRaWAN frame.
	Mic []byte `protobuf:"bytes,2,opt,name=mic,proto3" json:"mic,omitempty"`
	// TXInfo contains the TX related meta-data.
	TxInfo *gw.UplinkTXInfo `protobuf:"bytes,3,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	// RXInfo contains the RX related meta-data.
	RxInfo               []*gw.UplinkRXInfo `protobuf:"bytes,4,rep,name=rx_info,json=rxInfo,proto3" json:"rx_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HandleProprietaryUplinkRequest) Reset()         { *m = HandleProprietaryUplinkRequest{} }
func (m *HandleProprietaryUplinkRequest) String() string { return proto.CompactTextString(m) }
func (*HandleProprietaryUplinkRequest) ProtoMessage()    {}
func (*HandleProprietaryUplinkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{23}
}

func (m *HandleProprietaryUplinkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleProprietaryUplinkRequest.Unmarshal(m, b)
}
func (m *HandleProprietaryUplinkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleProprietaryUplinkRequest.Marshal(b, m, deterministic)
}
func (m *HandleProprietaryUplinkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleProprietaryUplinkRequest.Merge(m, src)
}
func (m *HandleProprietaryUplinkRequest) XXX_Size() int {
	return xxx_messageInfo_HandleProprietaryUplinkRequest.Size(m)
}
func (m *HandleProprietaryUplinkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleProprietaryUplinkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleProprietaryUplinkRequest proto.InternalMessageInfo

func (m *HandleProprietaryUplinkRequest) GetMacPayload() []byte {
	if m != nil {
		return m.MacPayload
	}
	return nil
}

func (m *HandleProprietaryUplinkRequest) GetMic() []byte {
	if m != nil {
		return m.Mic
	}
	return nil
}

func (m *HandleProprietaryUplinkRequest) GetTxInfo() *gw.UplinkTXInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

func (m *HandleProprietaryUplinkRequest) GetRxInfo() []*gw.UplinkRXInfo {
	if m != nil {
		return m.RxInfo
	}
	return nil
}

type HandleErrorRequest struct {
	// Device EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Type of the error.
	Type ErrorType `protobuf:"varint,3,opt,name=type,proto3,enum=as.ErrorType" json:"type,omitempty"`
	// Error string describing the error.
	Error string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	// Frame-counter (if applicable) related to the error.
	FCnt                 uint32   `protobuf:"varint,5,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleErrorRequest) Reset()         { *m = HandleErrorRequest{} }
func (m *HandleErrorRequest) String() string { return proto.CompactTextString(m) }
func (*HandleErrorRequest) ProtoMessage()    {}
func (*HandleErrorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{24}
}

func (m *HandleErrorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleErrorRequest.Unmarshal(m, b)
}
func (m *HandleErrorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleErrorRequest.Marshal(b, m, deterministic)
}
func (m *HandleErrorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleErrorRequest.Merge(m, src)
}
func (m *HandleErrorRequest) XXX_Size() int {
	return xxx_messageInfo_HandleErrorRequest.Size(m)
}
func (m *HandleErrorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleErrorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleErrorRequest proto.InternalMessageInfo

func (m *HandleErrorRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *HandleErrorRequest) GetType() ErrorType {
	if m != nil {
		return m.Type
	}
	return ErrorType_GENERIC
}

func (m *HandleErrorRequest) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *HandleErrorRequest) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

type HandleDownlinkACKRequest struct {
	// Device EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Downlink frame-counter.
	FCnt uint32 `protobuf:"varint,2,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// Frame was acknowledged?
	Acknowledged         bool     `protobuf:"varint,3,opt,name=acknowledged,proto3" json:"acknowledged,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleDownlinkACKRequest) Reset()         { *m = HandleDownlinkACKRequest{} }
func (m *HandleDownlinkACKRequest) String() string { return proto.CompactTextString(m) }
func (*HandleDownlinkACKRequest) ProtoMessage()    {}
func (*HandleDownlinkACKRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{25}
}

func (m *HandleDownlinkACKRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleDownlinkACKRequest.Unmarshal(m, b)
}
func (m *HandleDownlinkACKRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleDownlinkACKRequest.Marshal(b, m, deterministic)
}
func (m *HandleDownlinkACKRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleDownlinkACKRequest.Merge(m, src)
}
func (m *HandleDownlinkACKRequest) XXX_Size() int {
	return xxx_messageInfo_HandleDownlinkACKRequest.Size(m)
}
func (m *HandleDownlinkACKRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleDownlinkACKRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleDownlinkACKRequest proto.InternalMessageInfo

func (m *HandleDownlinkACKRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *HandleDownlinkACKRequest) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *HandleDownlinkACKRequest) GetAcknowledged() bool {
	if m != nil {
		return m.Acknowledged
	}
	return false
}

type SetDeviceStatusRequest struct {
	// Device EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Battery level (deprecated, use battery_level).
	// 0:      The end-device is connected to an external power source
	// 1..254: The battery level, 1 being at minimum and 254 being at maximum
	// 255:    The end-device was not able to measure the battery level
	Battery uint32 `protobuf:"varint,2,opt,name=battery,proto3" json:"battery,omitempty"`
	// The device margin status
	// -32..32: The demodulation SNR ration in dB
	Margin int32 `protobuf:"varint,3,opt,name=margin,proto3" json:"margin,omitempty"`
	// Device is connected to an external power source.
	ExternalPowerSource bool `protobuf:"varint,4,opt,name=external_power_source,json=externalPowerSource,proto3" json:"external_power_source,omitempty"`
	// Device battery status is not available.
	BatteryLevelUnavailable bool `protobuf:"varint,5,opt,name=battery_level_unavailable,json=batteryLevelUnavailable,proto3" json:"battery_level_unavailable,omitempty"`
	// Battery level as a percentage.
	BatteryLevel         float32  `protobuf:"fixed32,6,opt,name=battery_level,json=batteryLevel,proto3" json:"battery_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceStatusRequest) Reset()         { *m = SetDeviceStatusRequest{} }
func (m *SetDeviceStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceStatusRequest) ProtoMessage()    {}
func (*SetDeviceStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{26}
}

func (m *SetDeviceStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceStatusRequest.Unmarshal(m, b)
}
func (m *SetDeviceStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceStatusRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceStatusRequest.Merge(m, src)
}
func (m *SetDeviceStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceStatusRequest.Size(m)
}
func (m *SetDeviceStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceStatusRequest proto.InternalMessageInfo

func (m *SetDeviceStatusRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *SetDeviceStatusRequest) GetBattery() uint32 {
	if m != nil {
		return m.Battery
	}
	return 0
}

func (m *SetDeviceStatusRequest) GetMargin() int32 {
	if m != nil {
		return m.Margin
	}
	return 0
}

func (m *SetDeviceStatusRequest) GetExternalPowerSource() bool {
	if m != nil {
		return m.ExternalPowerSource
	}
	return false
}

func (m *SetDeviceStatusRequest) GetBatteryLevelUnavailable() bool {
	if m != nil {
		return m.BatteryLevelUnavailable
	}
	return false
}

func (m *SetDeviceStatusRequest) GetBatteryLevel() float32 {
	if m != nil {
		return m.BatteryLevel
	}
	return 0
}

type SetDeviceLocationRequest struct {
	// Device EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// The location of the device.
	Location *common.Location `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	// Uplink IDs used for geolocation.
	UplinkIds            [][]byte `protobuf:"bytes,3,rep,name=uplink_ids,json=uplinkIds,proto3" json:"uplink_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceLocationRequest) Reset()         { *m = SetDeviceLocationRequest{} }
func (m *SetDeviceLocationRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceLocationRequest) ProtoMessage()    {}
func (*SetDeviceLocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{27}
}

func (m *SetDeviceLocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceLocationRequest.Unmarshal(m, b)
}
func (m *SetDeviceLocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceLocationRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceLocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceLocationRequest.Merge(m, src)
}
func (m *SetDeviceLocationRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceLocationRequest.Size(m)
}
func (m *SetDeviceLocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceLocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceLocationRequest proto.InternalMessageInfo

func (m *SetDeviceLocationRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *SetDeviceLocationRequest) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *SetDeviceLocationRequest) GetUplinkIds() [][]byte {
	if m != nil {
		return m.UplinkIds
	}
	return nil
}

type HandleGatewayStatsRequest struct {
	// Gateway ID (8 bytes).
	GatewayId []byte `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	// Stats ID (UUID).
	StatsId []byte `protobuf:"bytes,2,opt,name=stats_id,json=statsId,proto3" json:"stats_id,omitempty"`
	// Timestamp.
	Time *timestamp.Timestamp `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	// Gateway location.
	Location *common.Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// Uplink frames received.
	RxPacketsReceived uint32 `protobuf:"varint,5,opt,name=rx_packets_received,json=rxPacketsReceived,proto3" json:"rx_packets_received,omitempty"`
	// Uplink frames received OK.
	RxPacketsReceivedOk uint32 `protobuf:"varint,6,opt,name=rx_packets_received_ok,json=rxPacketsReceivedOk,proto3" json:"rx_packets_received_ok,omitempty"`
	// Downlink transmissions requested.
	TxPacketsReceived uint32 `protobuf:"varint,7,opt,name=tx_packets_received,json=txPacketsReceived,proto3" json:"tx_packets_received,omitempty"`
	// Downlink emitted.
	TxPacketsEmitted uint32 `protobuf:"varint,8,opt,name=tx_packets_emitted,json=txPacketsEmitted,proto3" json:"tx_packets_emitted,omitempty"`
	// Gateway metadata.
	Metadata             map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HandleGatewayStatsRequest) Reset()         { *m = HandleGatewayStatsRequest{} }
func (m *HandleGatewayStatsRequest) String() string { return proto.CompactTextString(m) }
func (*HandleGatewayStatsRequest) ProtoMessage()    {}
func (*HandleGatewayStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{28}
}

func (m *HandleGatewayStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleGatewayStatsRequest.Unmarshal(m, b)
}
func (m *HandleGatewayStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleGatewayStatsRequest.Marshal(b, m, deterministic)
}
func (m *HandleGatewayStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleGatewayStatsRequest.Merge(m, src)
}
func (m *HandleGatewayStatsRequest) XXX_Size() int {
	return xxx_messageInfo_HandleGatewayStatsRequest.Size(m)
}
func (m *HandleGatewayStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleGatewayStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleGatewayStatsRequest proto.InternalMessageInfo

func (m *HandleGatewayStatsRequest) GetGatewayId() []byte {
	if m != nil {
		return m.GatewayId
	}
	return nil
}

func (m *HandleGatewayStatsRequest) GetStatsId() []byte {
	if m != nil {
		return m.StatsId
	}
	return nil
}

func (m *HandleGatewayStatsRequest) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *HandleGatewayStatsRequest) GetLocation() *common.Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *HandleGatewayStatsRequest) GetRxPacketsReceived() uint32 {
	if m != nil {
		return m.RxPacketsReceived
	}
	return 0
}

func (m *HandleGatewayStatsRequest) GetRxPacketsReceivedOk() uint32 {
	if m != nil {
		return m.RxPacketsReceivedOk
	}
	return 0
}

func (m *HandleGatewayStatsRequest) GetTxPacketsReceived() uint32 {
	if m != nil {
		return m.TxPacketsReceived
	}
	return 0
}

func (m *HandleGatewayStatsRequest) GetTxPacketsEmitted() uint32 {
	if m != nil {
		return m.TxPacketsEmitted
	}
	return 0
}

func (m *HandleGatewayStatsRequest) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type HandleTxAckRequest struct {
	// Device EUI (8 bytes).
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Downlink frame-counter.
	FCnt uint32 `protobuf:"varint,2,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// Gateway ID.
	GatewayId []byte `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	// TXInfo contains the TX related meta-data.
	TxInfo               *gw.DownlinkTXInfo `protobuf:"bytes,4,opt,name=tx_info,json=txInfo,proto3" json:"tx_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HandleTxAckRequest) Reset()         { *m = HandleTxAckRequest{} }
func (m *HandleTxAckRequest) String() string { return proto.CompactTextString(m) }
func (*HandleTxAckRequest) ProtoMessage()    {}
func (*HandleTxAckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{29}
}

func (m *HandleTxAckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleTxAckRequest.Unmarshal(m, b)
}
func (m *HandleTxAckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleTxAckRequest.Marshal(b, m, deterministic)
}
func (m *HandleTxAckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleTxAckRequest.Merge(m, src)
}
func (m *HandleTxAckRequest) XXX_Size() int {
	return xxx_messageInfo_HandleTxAckRequest.Size(m)
}
func (m *HandleTxAckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleTxAckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandleTxAckRequest proto.InternalMessageInfo

func (m *HandleTxAckRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *HandleTxAckRequest) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *HandleTxAckRequest) GetGatewayId() []byte {
	if m != nil {
		return m.GatewayId
	}
	return nil
}

func (m *HandleTxAckRequest) GetTxInfo() *gw.DownlinkTXInfo {
	if m != nil {
		return m.TxInfo
	}
	return nil
}

type ReEncryptDeviceQueueItemsRequest struct {
	// DevEUI of the device.
	DevEui []byte `protobuf:"bytes,1,opt,name=dev_eui,json=devEui,proto3" json:"dev_eui,omitempty"`
	// Device addres.
	// This is the device address which was used to encrypt the given
	// payloads.
	DevAddr []byte `protobuf:"bytes,2,opt,name=dev_addr,json=devAddr,proto3" json:"dev_addr,omitempty"`
	// Downlink frame-counter to start with.
	// The application-server must use this value when encrypting the first
	// item, and increment it for each successive item.
	FCntStart uint32 `protobuf:"varint,3,opt,name=f_cnt_start,json=fCntStart,proto3" json:"f_cnt_start,omitempty"`
	// Items to re-encrypt.
	Items                []*ReEncryptDeviceQueueItem `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ReEncryptDeviceQueueItemsRequest) Reset()         { *m = ReEncryptDeviceQueueItemsRequest{} }
func (m *ReEncryptDeviceQueueItemsRequest) String() string { return proto.CompactTextString(m) }
func (*ReEncryptDeviceQueueItemsRequest) ProtoMessage()    {}
func (*ReEncryptDeviceQueueItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{30}
}

func (m *ReEncryptDeviceQueueItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsRequest.Unmarshal(m, b)
}
func (m *ReEncryptDeviceQueueItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsRequest.Marshal(b, m, deterministic)
}
func (m *ReEncryptDeviceQueueItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReEncryptDeviceQueueItemsRequest.Merge(m, src)
}
func (m *ReEncryptDeviceQueueItemsRequest) XXX_Size() int {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsRequest.Size(m)
}
func (m *ReEncryptDeviceQueueItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReEncryptDeviceQueueItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReEncryptDeviceQueueItemsRequest proto.InternalMessageInfo

func (m *ReEncryptDeviceQueueItemsRequest) GetDevEui() []byte {
	if m != nil {
		return m.DevEui
	}
	return nil
}

func (m *ReEncryptDeviceQueueItemsRequest) GetDevAddr() []byte {
	if m != nil {
		return m.DevAddr
	}
	return nil
}

func (m *ReEncryptDeviceQueueItemsRequest) GetFCntStart() uint32 {
	if m != nil {
		return m.FCntStart
	}
	return 0
}

func (m *ReEncryptDeviceQueueItemsRequest) GetItems() []*ReEncryptDeviceQueueItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ReEncryptDeviceQueueItemsResponse struct {
	Items                []*ReEncryptedDeviceQueueItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ReEncryptDeviceQueueItemsResponse) Reset()         { *m = ReEncryptDeviceQueueItemsResponse{} }
func (m *ReEncryptDeviceQueueItemsResponse) String() string { return proto.CompactTextString(m) }
func (*ReEncryptDeviceQueueItemsResponse) ProtoMessage()    {}
func (*ReEncryptDeviceQueueItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{31}
}

func (m *ReEncryptDeviceQueueItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsResponse.Unmarshal(m, b)
}
func (m *ReEncryptDeviceQueueItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsResponse.Marshal(b, m, deterministic)
}
func (m *ReEncryptDeviceQueueItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReEncryptDeviceQueueItemsResponse.Merge(m, src)
}
func (m *ReEncryptDeviceQueueItemsResponse) XXX_Size() int {
	return xxx_messageInfo_ReEncryptDeviceQueueItemsResponse.Size(m)
}
func (m *ReEncryptDeviceQueueItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReEncryptDeviceQueueItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReEncryptDeviceQueueItemsResponse proto.InternalMessageInfo

func (m *ReEncryptDeviceQueueItemsResponse) GetItems() []*ReEncryptedDeviceQueueItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type ReEncryptDeviceQueueItem struct {
	// The encrypted FRMPayload bytes.
	FrmPayload []byte `protobuf:"bytes,1,opt,name=frm_payload,json=frmPayload,proto3" json:"frm_payload,omitempty"`
	// The original FCnt of the payload.
	FCnt uint32 `protobuf:"varint,2,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// The FPort of the payload.
	FPort uint32 `protobuf:"varint,3,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// Payload is of type confirmed.
	Confirmed            bool     `protobuf:"varint,4,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReEncryptDeviceQueueItem) Reset()         { *m = ReEncryptDeviceQueueItem{} }
func (m *ReEncryptDeviceQueueItem) String() string { return proto.CompactTextString(m) }
func (*ReEncryptDeviceQueueItem) ProtoMessage()    {}
func (*ReEncryptDeviceQueueItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{32}
}

func (m *ReEncryptDeviceQueueItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReEncryptDeviceQueueItem.Unmarshal(m, b)
}
func (m *ReEncryptDeviceQueueItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReEncryptDeviceQueueItem.Marshal(b, m, deterministic)
}
func (m *ReEncryptDeviceQueueItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReEncryptDeviceQueueItem.Merge(m, src)
}
func (m *ReEncryptDeviceQueueItem) XXX_Size() int {
	return xxx_messageInfo_ReEncryptDeviceQueueItem.Size(m)
}
func (m *ReEncryptDeviceQueueItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ReEncryptDeviceQueueItem.DiscardUnknown(m)
}

var xxx_messageInfo_ReEncryptDeviceQueueItem proto.InternalMessageInfo

func (m *ReEncryptDeviceQueueItem) GetFrmPayload() []byte {
	if m != nil {
		return m.FrmPayload
	}
	return nil
}

func (m *ReEncryptDeviceQueueItem) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *ReEncryptDeviceQueueItem) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *ReEncryptDeviceQueueItem) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

type ReEncryptedDeviceQueueItem struct {
	// The re-encrypted FRMPayload bytes.
	FrmPayload []byte `protobuf:"bytes,1,opt,name=frm_payload,json=frmPayload,proto3" json:"frm_payload,omitempty"`
	// The new FCnt of the payload.
	FCnt uint32 `protobuf:"varint,2,opt,name=f_cnt,json=fCnt,proto3" json:"f_cnt,omitempty"`
	// The FPort of the payload.
	FPort uint32 `protobuf:"varint,3,opt,name=f_port,json=fPort,proto3" json:"f_port,omitempty"`
	// Payload is of type confirmed.
	Confirmed            bool     `protobuf:"varint,4,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReEncryptedDeviceQueueItem) Reset()         { *m = ReEncryptedDeviceQueueItem{} }
func (m *ReEncryptedDeviceQueueItem) String() string { return proto.CompactTextString(m) }
func (*ReEncryptedDeviceQueueItem) ProtoMessage()    {}
func (*ReEncryptedDeviceQueueItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{33}
}

func (m *ReEncryptedDeviceQueueItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReEncryptedDeviceQueueItem.Unmarshal(m, b)
}
func (m *ReEncryptedDeviceQueueItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReEncryptedDeviceQueueItem.Marshal(b, m, deterministic)
}
func (m *ReEncryptedDeviceQueueItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReEncryptedDeviceQueueItem.Merge(m, src)
}
func (m *ReEncryptedDeviceQueueItem) XXX_Size() int {
	return xxx_messageInfo_ReEncryptedDeviceQueueItem.Size(m)
}
func (m *ReEncryptedDeviceQueueItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ReEncryptedDeviceQueueItem.DiscardUnknown(m)
}

var xxx_messageInfo_ReEncryptedDeviceQueueItem proto.InternalMessageInfo

func (m *ReEncryptedDeviceQueueItem) GetFrmPayload() []byte {
	if m != nil {
		return m.FrmPayload
	}
	return nil
}

func (m *ReEncryptedDeviceQueueItem) GetFCnt() uint32 {
	if m != nil {
		return m.FCnt
	}
	return 0
}

func (m *ReEncryptedDeviceQueueItem) GetFPort() uint32 {
	if m != nil {
		return m.FPort
	}
	return 0
}

func (m *ReEncryptedDeviceQueueItem) GetConfirmed() bool {
	if m != nil {
		return m.Confirmed
	}
	return false
}

type GatewayTaskResponseData struct {
	// Gateway ID.
	GatewayId []byte `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayID,proto3" json:"gateway_id,omitempty"`
	// Execution request ID (UUID).
	ExecId []byte `protobuf:"bytes,2,opt,name=exec_id,json=execID,proto3" json:"exec_id,omitempty"`
	// command had been executed on gateway.
	Cmd string `protobuf:"bytes,3,opt,name=cmd,proto3" json:"cmd,omitempty"`
	// Standard error.
	Stderr []byte `protobuf:"bytes,4,opt,name=stderr,proto3" json:"stderr,omitempty"`
	// Error message from gateway-bridge.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	// Description
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// file (or other item) name. Optional
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayTaskResponseData) Reset()         { *m = GatewayTaskResponseData{} }
func (m *GatewayTaskResponseData) String() string { return proto.CompactTextString(m) }
func (*GatewayTaskResponseData) ProtoMessage()    {}
func (*GatewayTaskResponseData) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{34}
}

func (m *GatewayTaskResponseData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayTaskResponseData.Unmarshal(m, b)
}
func (m *GatewayTaskResponseData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayTaskResponseData.Marshal(b, m, deterministic)
}
func (m *GatewayTaskResponseData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayTaskResponseData.Merge(m, src)
}
func (m *GatewayTaskResponseData) XXX_Size() int {
	return xxx_messageInfo_GatewayTaskResponseData.Size(m)
}
func (m *GatewayTaskResponseData) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayTaskResponseData.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayTaskResponseData proto.InternalMessageInfo

func (m *GatewayTaskResponseData) GetGatewayId() []byte {
	if m != nil {
		return m.GatewayId
	}
	return nil
}

func (m *GatewayTaskResponseData) GetExecId() []byte {
	if m != nil {
		return m.ExecId
	}
	return nil
}

func (m *GatewayTaskResponseData) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *GatewayTaskResponseData) GetStderr() []byte {
	if m != nil {
		return m.Stderr
	}
	return nil
}

func (m *GatewayTaskResponseData) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *GatewayTaskResponseData) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *GatewayTaskResponseData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GatewayTaskResult struct {
	// Types that are valid to be assigned to Result:
	//	*GatewayTaskResult_Metadata
	//	*GatewayTaskResult_Chunk
	Result               isGatewayTaskResult_Result `protobuf_oneof:"result"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GatewayTaskResult) Reset()         { *m = GatewayTaskResult{} }
func (m *GatewayTaskResult) String() string { return proto.CompactTextString(m) }
func (*GatewayTaskResult) ProtoMessage()    {}
func (*GatewayTaskResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d6d0f577a60e27d, []int{35}
}

func (m *GatewayTaskResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayTaskResult.Unmarshal(m, b)
}
func (m *GatewayTaskResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayTaskResult.Marshal(b, m, deterministic)
}
func (m *GatewayTaskResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayTaskResult.Merge(m, src)
}
func (m *GatewayTaskResult) XXX_Size() int {
	return xxx_messageInfo_GatewayTaskResult.Size(m)
}
func (m *GatewayTaskResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayTaskResult.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayTaskResult proto.InternalMessageInfo

type isGatewayTaskResult_Result interface {
	isGatewayTaskResult_Result()
}

type GatewayTaskResult_Metadata struct {
	Metadata *GatewayTaskResponseData `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type GatewayTaskResult_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*GatewayTaskResult_Metadata) isGatewayTaskResult_Result() {}

func (*GatewayTaskResult_Chunk) isGatewayTaskResult_Result() {}

func (m *GatewayTaskResult) GetResult() isGatewayTaskResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *GatewayTaskResult) GetMetadata() *GatewayTaskResponseData {
	if x, ok := m.GetResult().(*GatewayTaskResult_Metadata); ok {
		return x.Metadata
	}
	return nil
}

func (m *GatewayTaskResult) GetChunk() []byte {
	if x, ok := m.GetResult().(*GatewayTaskResult_Chunk); ok {
		return x.Chunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GatewayTaskResult) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GatewayTaskResult_Metadata)(nil),
		(*GatewayTaskResult_Chunk)(nil),
	}
}

func init() {
	proto.RegisterEnum("as.RXWindow", RXWindow_name, RXWindow_value)
	proto.RegisterEnum("as.ErrorType", ErrorType_name, ErrorType_value)
	proto.RegisterType((*GetServiceProfileRequest)(nil), "as.GetServiceProfileRequest")
	proto.RegisterType((*GetServiceProfileResponse)(nil), "as.GetServiceProfileResponse")
	proto.RegisterType((*CreateServiceProfileRequest)(nil), "as.CreateServiceProfileRequest")
	proto.RegisterType((*CreateServiceProfileResponse)(nil), "as.CreateServiceProfileResponse")
	proto.RegisterType((*ServiceProfileItem)(nil), "as.ServiceProfileItem")
	proto.RegisterType((*GatewayMetaData)(nil), "as.GatewayMetaData")
	proto.RegisterMapType((map[string]string)(nil), "as.GatewayMetaData.MetadataEntry")
	proto.RegisterType((*GetGWMetaDataResponse)(nil), "as.GetGWMetaDataResponse")
	proto.RegisterType((*GetDictionaryRequest)(nil), "as.GetDictionaryRequest")
	proto.RegisterType((*GetDictionaryResponse)(nil), "as.GetDictionaryResponse")
	proto.RegisterType((*Dictionary)(nil), "as.Dictionary")
	proto.RegisterType((*GetOrgByDevEUIRequest)(nil), "as.GetOrgByDevEUIRequest")
	proto.RegisterType((*GetOrgIDByGwIDRequest)(nil), "as.GetOrgIDByGwIDRequest")
	proto.RegisterType((*GetDeviceAppSKeyResponse)(nil), "as.GetDeviceAppSKeyResponse")
	proto.RegisterType((*GetOrgByDevEUIResponse)(nil), "as.GetOrgByDevEUIResponse")
	proto.RegisterType((*ListOrganizationRequest)(nil), "as.ListOrganizationRequest")
	proto.RegisterType((*ListOrganizationResponse)(nil), "as.ListOrganizationResponse")
	proto.RegisterType((*OrganizationListItem)(nil), "as.OrganizationListItem")
	proto.RegisterType((*GetDevicesSummaryRequest)(nil), "as.GetDevicesSummaryRequest")
	proto.RegisterType((*GetDevicesSummaryResponse)(nil), "as.GetDevicesSummaryResponse")
	proto.RegisterMapType((map[uint32]uint32)(nil), "as.GetDevicesSummaryResponse.DrCountEntry")
	proto.RegisterType((*GetGatewaysSummaryRequest)(nil), "as.GetGatewaysSummaryRequest")
	proto.RegisterType((*GetGatewaysSummaryResponse)(nil), "as.GetGatewaysSummaryResponse")
	proto.RegisterType((*DeviceActivationContext)(nil), "as.DeviceActivationContext")
	proto.RegisterType((*HandleUplinkDataRequest)(nil), "as.HandleUplinkDataRequest")
	proto.RegisterType((*HandleProprietaryUplinkRequest)(nil), "as.HandleProprietaryUplinkRequest")
	proto.RegisterType((*HandleErrorRequest)(nil), "as.HandleErrorRequest")
	proto.RegisterType((*HandleDownlinkACKRequest)(nil), "as.HandleDownlinkACKRequest")
	proto.RegisterType((*SetDeviceStatusRequest)(nil), "as.SetDeviceStatusRequest")
	proto.RegisterType((*SetDeviceLocationRequest)(nil), "as.SetDeviceLocationRequest")
	proto.RegisterType((*HandleGatewayStatsRequest)(nil), "as.HandleGatewayStatsRequest")
	proto.RegisterMapType((map[string]string)(nil), "as.HandleGatewayStatsRequest.MetadataEntry")
	proto.RegisterType((*HandleTxAckRequest)(nil), "as.HandleTxAckRequest")
	proto.RegisterType((*ReEncryptDeviceQueueItemsRequest)(nil), "as.ReEncryptDeviceQueueItemsRequest")
	proto.RegisterType((*ReEncryptDeviceQueueItemsResponse)(nil), "as.ReEncryptDeviceQueueItemsResponse")
	proto.RegisterType((*ReEncryptDeviceQueueItem)(nil), "as.ReEncryptDeviceQueueItem")
	proto.RegisterType((*ReEncryptedDeviceQueueItem)(nil), "as.ReEncryptedDeviceQueueItem")
	proto.RegisterType((*GatewayTaskResponseData)(nil), "as.GatewayTaskResponseData")
	proto.RegisterType((*GatewayTaskResult)(nil), "as.GatewayTaskResult")
}

func init() {
	proto.RegisterFile("as/as.proto", fileDescriptor_1d6d0f577a60e27d)
}

var fileDescriptor_1d6d0f577a60e27d = []byte{
	// 2569 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0xcb, 0x73, 0xe3, 0xc6,
	0xd1, 0x17, 0xf8, 0x66, 0x53, 0x0f, 0x6a, 0xb4, 0x2b, 0x51, 0xdc, 0x97, 0x16, 0xfe, 0x5c, 0x96,
	0x65, 0x7f, 0xa4, 0x2d, 0x7f, 0x07, 0x7f, 0x4e, 0xa5, 0x52, 0x5c, 0x91, 0xd6, 0xb2, 0x76, 0xb5,
	0x92, 0x41, 0xc9, 0x6b, 0x3b, 0xa9, 0x42, 0x8d, 0x80, 0x21, 0x17, 0x16, 0x08, 0x20, 0x83, 0x21,
	0x29, 0xc6, 0x97, 0x5c, 0x52, 0xb9, 0xa5, 0x52, 0xf9, 0x13, 0x72, 0x4b, 0xfe, 0x85, 0xe4, 0x96,
	0x43, 0x2e, 0xf9, 0x83, 0x72, 0x48, 0x55, 0x52, 0xf3, 0x00, 0x08, 0x3e, 0xb5, 0x76, 0x25, 0x39,
	0x11, 0xd3, 0xdd, 0xd3, 0xdd, 0x33, 0x3d, 0xfd, 0xeb, 0x9e, 0x21, 0x94, 0x70, 0x58, 0xc7, 0x61,
	0x2d, 0xa0, 0x3e, 0xf3, 0x51, 0x0a, 0x87, 0xd5, 0x07, 0x3d, 0xdf, 0xef, 0xb9, 0xa4, 0x2e, 0x28,
	0xd7, 0x83, 0x6e, 0x9d, 0xf4, 0x03, 0x36, 0x96, 0x02, 0xd5, 0x27, 0xb3, 0x4c, 0xe6, 0xf4, 0x49,
	0xc8, 0x70, 0x3f, 0x50, 0x02, 0x3b, 0x96, 0xdf, 0xef, 0xfb, 0x5e, 0x5d, 0xfe, 0x28, 0xe2, 0xb6,
	0x17, 0xf2, 0x19, 0x5d, 0xc7, 0x25, 0xca, 0x52, 0xb5, 0xd4, 0x1b, 0xd5, 0x7b, 0xa3, 0x68, 0xe0,
	0x85, 0x75, 0x4f, 0x71, 0xf4, 0x23, 0xa8, 0x9c, 0x12, 0xd6, 0x21, 0x74, 0xe8, 0x58, 0xe4, 0x42,
	0xce, 0x32, 0xc8, 0xcf, 0x07, 0x24, 0x64, 0x68, 0x13, 0x52, 0x8e, 0x5d, 0xd1, 0x0e, 0xb4, 0xc3,
	0x75, 0x23, 0xe5, 0xd8, 0xfa, 0x4b, 0xd8, 0x5f, 0x20, 0x1b, 0x06, 0xbe, 0x17, 0x12, 0x54, 0x87,
	0x3c, 0x0e, 0x4d, 0x1b, 0x33, 0x2c, 0x66, 0x94, 0x8e, 0x77, 0x6b, 0x38, 0xac, 0x4d, 0x0b, 0xb7,
	0x19, 0xe9, 0x1b, 0x39, 0x1c, 0x36, 0x31, 0xc3, 0xfa, 0x77, 0xf0, 0xe0, 0x84, 0x12, 0xcc, 0xc8,
	0x62, 0xe3, 0xdf, 0x57, 0x1f, 0xfa, 0x00, 0xf2, 0x9e, 0x9a, 0x90, 0x12, 0x13, 0x50, 0xcd, 0x9b,
	0x9d, 0x60, 0xe4, 0x3c, 0x69, 0xbc, 0x06, 0x0f, 0x17, 0x1b, 0x57, 0xab, 0x99, 0x5d, 0xfa, 0x5f,
	0x52, 0x80, 0xe6, 0x6d, 0xa3, 0x23, 0xd8, 0xf6, 0x08, 0x1b, 0xf9, 0xf4, 0xc6, 0x0c, 0x09, 0x1d,
	0x12, 0x6a, 0xaa, 0x59, 0x69, 0x63, 0x4b, 0x31, 0x3a, 0x82, 0xde, 0xb6, 0xd1, 0x7b, 0xb0, 0xe5,
	0xd3, 0x1e, 0xf6, 0x9c, 0x5f, 0x60, 0xe6, 0xf8, 0x1e, 0x97, 0x4c, 0x09, 0xc9, 0xcd, 0x24, 0xb9,
	0x6d, 0x23, 0x04, 0x19, 0x0f, 0xf7, 0x49, 0x25, 0x7d, 0xa0, 0x1d, 0x16, 0x0d, 0xf1, 0x8d, 0x0e,
	0xa0, 0x64, 0x93, 0xd0, 0xa2, 0x4e, 0xc0, 0x85, 0x2a, 0x19, 0xc1, 0x4a, 0x92, 0xd0, 0x87, 0x80,
	0x6c, 0xc2, 0xfd, 0x33, 0x2d, 0x7f, 0xe0, 0x31, 0xd3, 0x75, 0xfa, 0x0e, 0xab, 0x64, 0x0f, 0xb4,
	0xc3, 0x0d, 0xa3, 0x2c, 0x39, 0x27, 0x9c, 0xf1, 0x92, 0xd3, 0xd1, 0xff, 0x03, 0x58, 0x62, 0xfd,
	0xb6, 0x89, 0x59, 0x25, 0x27, 0xf6, 0xab, 0x5a, 0x93, 0xc7, 0xad, 0x16, 0x1d, 0xb7, 0xda, 0x65,
	0x74, 0xdc, 0x8c, 0xa2, 0x92, 0x6e, 0x88, 0xa9, 0x83, 0xc0, 0x8e, 0xa6, 0xe6, 0xef, 0x9e, 0xaa,
	0xa4, 0x1b, 0x4c, 0xff, 0xbd, 0x06, 0x5b, 0xa7, 0x98, 0x91, 0x11, 0x1e, 0x9f, 0x11, 0x86, 0x45,
	0xd8, 0x76, 0x20, 0xdb, 0x1b, 0x45, 0xdb, 0x56, 0x34, 0x32, 0xbd, 0x51, 0xdb, 0x46, 0x3f, 0x86,
	0x42, 0x9f, 0x30, 0xac, 0x82, 0x99, 0x3e, 0x2c, 0x1d, 0x3f, 0xe5, 0xd1, 0x9f, 0x99, 0x5b, 0x3b,
	0x53, 0x32, 0x2d, 0x8f, 0xd1, 0xb1, 0x11, 0x4f, 0xa9, 0xfe, 0x08, 0x36, 0xa6, 0x58, 0xa8, 0x0c,
	0xe9, 0x1b, 0x32, 0x56, 0x26, 0xf8, 0x27, 0xba, 0x07, 0xd9, 0x21, 0x76, 0x07, 0x44, 0xc4, 0xa0,
	0x68, 0xc8, 0xc1, 0x67, 0xa9, 0x4f, 0x35, 0xfd, 0x0b, 0xb8, 0x7f, 0x4a, 0xd8, 0xe9, 0xeb, 0xc8,
	0x4a, 0x7c, 0x26, 0x3e, 0x85, 0x8d, 0xc8, 0x82, 0xe9, 0x3a, 0x21, 0xab, 0x68, 0xc2, 0xb3, 0x9d,
	0x05, 0x9e, 0x19, 0xeb, 0x91, 0xe4, 0x4b, 0x27, 0x64, 0xfa, 0xc7, 0x70, 0xef, 0x94, 0xb0, 0xa6,
	0x63, 0xf1, 0x48, 0x61, 0x3a, 0x8e, 0xce, 0xf8, 0x3e, 0x14, 0x6c, 0xc7, 0x32, 0xd9, 0x38, 0x20,
	0xca, 0xb7, 0xbc, 0xed, 0x58, 0x97, 0xe3, 0x80, 0xe8, 0x5f, 0x0a, 0x2f, 0x92, 0x53, 0x94, 0x17,
	0xcb, 0xe7, 0x20, 0x1d, 0x32, 0xc2, 0x2f, 0xb9, 0x63, 0x9b, 0xdc, 0xaf, 0x84, 0x02, 0xc1, 0xd3,
	0x3d, 0x80, 0x09, 0x8d, 0x1f, 0x35, 0xcb, 0xb7, 0x89, 0x3a, 0xb2, 0xe2, 0x7b, 0xca, 0x40, 0x6a,
	0xda, 0xc0, 0x3d, 0xc8, 0xba, 0xf8, 0x9a, 0xb8, 0xea, 0x68, 0xca, 0x01, 0x7a, 0x00, 0x45, 0x27,
	0x34, 0xb1, 0xc5, 0x06, 0xd8, 0x15, 0x27, 0xb3, 0x60, 0x14, 0x9c, 0xb0, 0x21, 0xc6, 0xfa, 0x47,
	0x62, 0x1d, 0xe7, 0xb4, 0xf7, 0x6c, 0xdc, 0x24, 0xc3, 0xd6, 0x55, 0x3b, 0x5a, 0xfb, 0x1e, 0xe4,
	0x6d, 0x32, 0x34, 0xc9, 0xc0, 0x51, 0xcb, 0xc8, 0xd9, 0x82, 0xaf, 0xbf, 0x17, 0xcd, 0x68, 0x37,
	0x9f, 0x8d, 0x4f, 0x47, 0xed, 0xe6, 0x3c, 0x1c, 0x15, 0x45, 0x4e, 0x7e, 0x24, 0xa0, 0xab, 0x29,
	0x8e, 0x76, 0x23, 0x08, 0x3a, 0x2f, 0xc8, 0x64, 0x97, 0xe2, 0xf0, 0xca, 0x14, 0x96, 0x03, 0xfd,
	0x10, 0x76, 0x67, 0x9d, 0x99, 0xcb, 0xf7, 0xb4, 0xd0, 0x6d, 0xc2, 0x1e, 0x8f, 0xdc, 0x79, 0x22,
	0x33, 0x23, 0x37, 0xf8, 0x26, 0x88, 0xdc, 0x92, 0xd2, 0x72, 0x80, 0x76, 0x21, 0xe7, 0x77, 0xbb,
	0x21, 0x61, 0x2a, 0xa9, 0xd5, 0x88, 0xd3, 0x43, 0x82, 0xa9, 0xf5, 0x46, 0xed, 0x99, 0x1a, 0xe9,
	0x7d, 0xa8, 0xcc, 0x1b, 0x50, 0xce, 0x3c, 0x81, 0x12, 0xf3, 0x19, 0x76, 0x65, 0x26, 0x2b, 0x3b,
	0x20, 0x48, 0x22, 0x85, 0xd1, 0x47, 0x90, 0xa3, 0x24, 0x1c, 0xb8, 0x51, 0xa8, 0x2b, 0x3c, 0xd4,
	0x49, 0x55, 0x5c, 0xb5, 0x04, 0x47, 0x29, 0xa7, 0xff, 0x53, 0x83, 0x7b, 0x8b, 0x04, 0x66, 0x17,
	0x1e, 0x83, 0x4f, 0x2a, 0x01, 0x3e, 0x4f, 0x61, 0xdd, 0x76, 0xc2, 0xc0, 0xc5, 0x63, 0x33, 0x01,
	0x4c, 0x25, 0x45, 0x7b, 0xc5, 0x45, 0x8e, 0x60, 0xdb, 0xc2, 0x9e, 0xf9, 0x06, 0x0f, 0x89, 0xd9,
	0x93, 0xb9, 0x10, 0xaa, 0xb3, 0xb0, 0x65, 0x61, 0xef, 0x39, 0x1e, 0x12, 0x95, 0x22, 0xe1, 0x0c,
	0xf6, 0x64, 0x7f, 0x38, 0xf6, 0xe4, 0xbe, 0x0f, 0xf6, 0x9c, 0x24, 0x4e, 0x4b, 0xd8, 0x19, 0xf4,
	0xfb, 0x89, 0x3c, 0x5c, 0x00, 0xcd, 0xda, 0x02, 0x68, 0x6e, 0xea, 0xbf, 0x4b, 0x89, 0x12, 0x38,
	0xab, 0x45, 0xc5, 0xed, 0x29, 0xac, 0x63, 0x8b, 0x39, 0x43, 0x92, 0x08, 0xdc, 0x86, 0x51, 0x92,
	0x34, 0x19, 0xb9, 0x77, 0x61, 0xd3, 0xf1, 0xa6, 0x84, 0x52, 0x42, 0x68, 0x23, 0xa2, 0x4a, 0xb1,
	0x16, 0x14, 0x6c, 0xaa, 0x04, 0xd2, 0x22, 0xc4, 0x47, 0x02, 0x65, 0x96, 0x99, 0xae, 0x35, 0xa9,
	0x98, 0x28, 0x81, 0x30, 0x6f, 0xcb, 0x11, 0x3a, 0x84, 0xb2, 0x47, 0x78, 0x55, 0x0a, 0x09, 0xf1,
	0x94, 0xba, 0x8c, 0xb0, 0xb7, 0x29, 0xe8, 0x1d, 0x42, 0x3c, 0x21, 0x59, 0xfd, 0x0c, 0xd6, 0x93,
	0x2a, 0x92, 0x80, 0xb9, 0xb1, 0x00, 0x30, 0x37, 0x92, 0x80, 0xd9, 0x14, 0x7b, 0x12, 0x85, 0xf7,
	0x87, 0x6e, 0xed, 0x6f, 0x35, 0xa8, 0x2e, 0x52, 0xf3, 0x6f, 0xdf, 0xdb, 0x45, 0x9b, 0x92, 0x5e,
	0xb4, 0x29, 0x3a, 0x81, 0x3d, 0x85, 0x2e, 0x7c, 0xba, 0x70, 0xf4, 0xc4, 0xf7, 0x18, 0xb9, 0x95,
	0xc8, 0x4d, 0x86, 0x26, 0xb6, 0x6d, 0xaa, 0x20, 0x86, 0xa3, 0x59, 0xc3, 0xb6, 0x29, 0xaa, 0x43,
	0x11, 0x07, 0x81, 0x19, 0x9a, 0x7c, 0x03, 0x65, 0x27, 0xb2, 0x53, 0x53, 0x0d, 0xda, 0x0b, 0x32,
	0x6e, 0x79, 0x43, 0xe2, 0xfa, 0x01, 0x31, 0xf2, 0x58, 0x62, 0x96, 0xfe, 0xe7, 0x0c, 0xec, 0x3d,
	0xc7, 0x9e, 0xed, 0x92, 0xab, 0xc0, 0x75, 0xbc, 0x1b, 0x59, 0x74, 0x16, 0xa2, 0xe4, 0xba, 0x44,
	0xc9, 0x81, 0xc3, 0x1d, 0xf8, 0xd6, 0x77, 0x3c, 0xc1, 0x49, 0x49, 0x07, 0xf8, 0x98, 0xb3, 0x76,
	0x20, 0xdb, 0x35, 0xad, 0x78, 0x55, 0x99, 0xee, 0x89, 0xc7, 0xd0, 0x7d, 0xc8, 0x75, 0xcd, 0xc0,
	0xa7, 0xd1, 0x01, 0xc8, 0x76, 0x2f, 0x7c, 0xca, 0x78, 0x9c, 0xb1, 0x4d, 0x45, 0x12, 0x16, 0x0c,
	0xfe, 0xc9, 0x01, 0xc1, 0xa6, 0x22, 0xb5, 0x36, 0x8c, 0x94, 0x4d, 0xd1, 0xfb, 0x90, 0x67, 0xb7,
	0xa6, 0xe3, 0x75, 0x7d, 0x55, 0xeb, 0xcb, 0xb5, 0xde, 0xa8, 0x26, 0x3d, 0xbd, 0xfc, 0xaa, 0xed,
	0x75, 0x7d, 0x23, 0xc7, 0x6e, 0xf9, 0x2f, 0x17, 0xa5, 0x4a, 0xb4, 0x20, 0x0e, 0x6d, 0x42, 0xd4,
	0x50, 0xa2, 0x54, 0x8a, 0x22, 0xc8, 0x88, 0xe2, 0x5e, 0x14, 0xae, 0x8b, 0x6f, 0xf4, 0x1a, 0xf6,
	0x55, 0x07, 0x83, 0xe3, 0xfd, 0x36, 0x2d, 0xb9, 0xe1, 0x15, 0x10, 0xb6, 0x1f, 0x88, 0x9a, 0xb6,
	0x38, 0x26, 0xc6, 0x9e, 0xbd, 0x24, 0x58, 0xef, 0x43, 0xd9, 0xf2, 0xbd, 0xae, 0x43, 0xfb, 0xc4,
	0x36, 0x07, 0xc2, 0x9d, 0x4a, 0x49, 0x61, 0x53, 0x44, 0x97, 0x5e, 0x72, 0xbf, 0x5c, 0xcc, 0x48,
	0x65, 0x5d, 0xb0, 0xc5, 0x37, 0xdf, 0xa3, 0xbe, 0x63, 0x55, 0x36, 0x84, 0xab, 0xfc, 0x13, 0xd5,
	0x20, 0xc3, 0x3b, 0xf1, 0xca, 0xe6, 0x9d, 0x00, 0x24, 0xe4, 0xd0, 0x3b, 0x51, 0xc9, 0xd8, 0x3a,
	0xd0, 0x0e, 0x37, 0x8f, 0x37, 0x78, 0x63, 0x6a, 0x60, 0x46, 0x44, 0x2f, 0x16, 0x55, 0x90, 0x32,
	0xa4, 0x03, 0x42, 0x2b, 0xe5, 0x03, 0xed, 0x50, 0x33, 0xf8, 0x27, 0xa7, 0x84, 0x1e, 0xad, 0x6c,
	0x4b, 0x4a, 0xe8, 0x51, 0xee, 0x1e, 0x0d, 0x43, 0xa7, 0x82, 0x04, 0x49, 0x7c, 0xeb, 0x7f, 0xd0,
	0xe0, 0xb1, 0x3c, 0x3e, 0x17, 0xd4, 0x0f, 0xa8, 0x43, 0x18, 0xa6, 0x63, 0xb5, 0xe9, 0xea, 0x14,
	0x3d, 0x81, 0x52, 0x1f, 0x5b, 0x66, 0x80, 0xc7, 0xae, 0x8f, 0xa3, 0xb6, 0x16, 0xfa, 0xd8, 0xba,
	0x90, 0x94, 0x68, 0x89, 0xa9, 0xc9, 0x12, 0x13, 0x61, 0x4f, 0xbf, 0x7d, 0xd8, 0x33, 0xab, 0xc3,
	0xae, 0x7f, 0x07, 0x48, 0xba, 0xda, 0xa2, 0xd4, 0xa7, 0x77, 0x1e, 0xf2, 0xa7, 0x90, 0x11, 0x6d,
	0x48, 0x5a, 0x6d, 0x1b, 0x0e, 0x6b, 0x62, 0x22, 0x6f, 0x46, 0x0c, 0xc1, 0xe2, 0xb0, 0x44, 0x38,
	0x49, 0xb5, 0xc4, 0x72, 0x30, 0x49, 0x81, 0xec, 0x24, 0x05, 0x74, 0x17, 0x2a, 0xd2, 0x78, 0xd3,
	0x1f, 0x79, 0xdc, 0xb9, 0xc6, 0xc9, 0x8b, 0x3b, 0x5d, 0x88, 0x35, 0xa5, 0x12, 0xc9, 0xa4, 0x73,
	0x30, 0xba, 0xf1, 0xfc, 0x91, 0x4b, 0xec, 0x1e, 0xb1, 0x85, 0x7f, 0x05, 0x63, 0x8a, 0xa6, 0xff,
	0x5d, 0x83, 0xdd, 0x4e, 0x84, 0xd7, 0x1d, 0x86, 0xd9, 0x20, 0xbc, 0xd3, 0x58, 0x05, 0xf2, 0xd7,
	0x98, 0x31, 0x42, 0xc7, 0xca, 0x5c, 0x34, 0xe4, 0x6d, 0x44, 0x1f, 0xd3, 0x9e, 0xe3, 0x09, 0x5b,
	0x59, 0x43, 0x8d, 0xd0, 0x31, 0xdc, 0x27, 0xb7, 0x8c, 0x50, 0x0f, 0xbb, 0x66, 0xe0, 0x8f, 0x38,
	0xaa, 0xf9, 0x03, 0x6a, 0x11, 0x55, 0x7b, 0x77, 0x22, 0xe6, 0x05, 0xe7, 0x75, 0x04, 0x0b, 0x7d,
	0x06, 0xfb, 0x4a, 0xad, 0xe9, 0x92, 0x21, 0x71, 0xcd, 0x81, 0x87, 0x87, 0xd8, 0x71, 0xf1, 0xb5,
	0x4b, 0x14, 0x12, 0xec, 0x29, 0x81, 0x97, 0x9c, 0x7f, 0x35, 0x61, 0xa3, 0x77, 0x60, 0x63, 0x6a,
	0xae, 0x00, 0x8a, 0x94, 0xb1, 0x9e, 0x94, 0xd7, 0x7f, 0xa9, 0x41, 0x25, 0x5e, 0xfa, 0x4b, 0xdf,
	0x9a, 0x6a, 0x9f, 0x96, 0x2e, 0xfe, 0x43, 0x28, 0xb8, 0x4a, 0x56, 0xc1, 0x66, 0x39, 0x82, 0xcd,
	0x58, 0x47, 0x2c, 0x81, 0x1e, 0xf1, 0x4e, 0x80, 0x07, 0xd1, 0x74, 0xec, 0x50, 0xd4, 0xc8, 0x75,
	0x5e, 0xed, 0x39, 0xa5, 0x6d, 0x87, 0xfa, 0x3f, 0xd2, 0xb0, 0x2f, 0x83, 0xad, 0x0a, 0x0a, 0x8f,
	0x40, 0x1c, 0x80, 0x47, 0x00, 0xaa, 0x49, 0x31, 0xe3, 0x5b, 0x5e, 0x51, 0x51, 0xda, 0x36, 0xc7,
	0xd6, 0x90, 0x8b, 0x47, 0x57, 0xb4, 0x75, 0x23, 0x2f, 0xc6, 0x6d, 0x3b, 0xce, 0xfc, 0xf4, 0x5b,
	0x66, 0x7e, 0x72, 0x51, 0x99, 0x3b, 0x17, 0x55, 0x83, 0x1d, 0x7a, 0x6b, 0x06, 0xd8, 0xba, 0x21,
	0x2c, 0x34, 0x29, 0xb1, 0x88, 0x33, 0x24, 0xb6, 0x3a, 0xc4, 0xdb, 0xf4, 0xf6, 0x42, 0x72, 0x0c,
	0xc5, 0x40, 0x9f, 0xc0, 0xee, 0x02, 0x79, 0xd3, 0xbf, 0x51, 0xf8, 0xbd, 0x33, 0x37, 0xe5, 0xfc,
	0x86, 0x1b, 0x61, 0x0b, 0x8c, 0xe4, 0xa5, 0x11, 0x36, 0x67, 0xe4, 0x43, 0x40, 0x09, 0x79, 0xd2,
	0x77, 0x18, 0x23, 0x76, 0xa5, 0x20, 0x2f, 0x96, 0xb1, 0x78, 0x4b, 0xd2, 0xd1, 0x69, 0xe2, 0xe6,
	0x56, 0x14, 0x68, 0xf0, 0x01, 0x4f, 0xdb, 0xa5, 0xb1, 0xf8, 0xcf, 0xdc, 0xe1, 0x7e, 0xa3, 0x45,
	0x40, 0x73, 0x79, 0xdb, 0xb0, 0x6e, 0x7e, 0x58, 0x96, 0x4f, 0x9f, 0x92, 0xf4, 0xec, 0x29, 0xf9,
	0x60, 0x82, 0x90, 0x19, 0xf5, 0xde, 0xd0, 0x1b, 0xd5, 0x22, 0x6c, 0x99, 0xc6, 0x48, 0xfd, 0x8f,
	0x1a, 0x1c, 0x18, 0xa4, 0xe5, 0x59, 0x74, 0x1c, 0xa8, 0xc4, 0xf8, 0x62, 0x40, 0x06, 0xe2, 0x15,
	0x21, 0x7c, 0x9b, 0x62, 0x1f, 0x77, 0x1b, 0xa9, 0xe9, 0x6e, 0xe3, 0x31, 0x94, 0x84, 0xe7, 0x66,
	0xc8, 0x30, 0x8d, 0x4a, 0x7e, 0x91, 0xfb, 0xdf, 0xe1, 0x04, 0x74, 0x0c, 0x59, 0x87, 0xdb, 0x50,
	0xd0, 0xfc, 0x90, 0x07, 0x63, 0x99, 0x23, 0x86, 0x14, 0xd5, 0xbf, 0x86, 0xa7, 0x2b, 0x7c, 0x55,
	0x0d, 0xd9, 0xff, 0x45, 0x8a, 0xe5, 0x2d, 0xf8, 0xf1, 0x94, 0x62, 0x62, 0x2f, 0x51, 0xfd, 0x2b,
	0x0d, 0x2a, 0xcb, 0x74, 0xf3, 0x32, 0xd5, 0xa5, 0xfd, 0xd9, 0x32, 0xd5, 0xa5, 0xfd, 0xa8, 0x4c,
	0x2d, 0x0c, 0xd3, 0xa4, 0xb3, 0x49, 0x27, 0x3b, 0x9b, 0x87, 0x50, 0x8c, 0x8b, 0xbb, 0x42, 0xc3,
	0x09, 0x41, 0xff, 0xb5, 0x06, 0xd5, 0xe5, 0xde, 0xfe, 0x37, 0x3d, 0xf9, 0xab, 0x06, 0x7b, 0x2a,
	0x2f, 0x2e, 0x71, 0x78, 0x13, 0xed, 0xaf, 0x78, 0x1b, 0x59, 0x89, 0x53, 0x4d, 0x7e, 0x5e, 0xc8,
	0x2d, 0xb1, 0x26, 0x30, 0x95, 0xe3, 0xc3, 0x76, 0x93, 0xa7, 0x8a, 0xd5, 0xb7, 0xd5, 0x3d, 0x8d,
	0x7f, 0x8a, 0x6b, 0x28, 0xb3, 0x09, 0x95, 0x75, 0x72, 0xdd, 0x50, 0xa3, 0x49, 0xf9, 0xcc, 0x26,
	0xcb, 0xe7, 0xcc, 0x6b, 0x53, 0x6e, 0xfe, 0xb5, 0x29, 0xba, 0x26, 0xe6, 0x27, 0xd7, 0x44, 0x3d,
	0x80, 0xed, 0xe9, 0x85, 0x0c, 0x5c, 0x7e, 0x63, 0x9b, 0xe0, 0x81, 0x36, 0xe9, 0xe1, 0x96, 0xac,
	0xf8, 0xf9, 0xda, 0x04, 0x01, 0xd0, 0x2e, 0x64, 0xad, 0x37, 0x03, 0xef, 0x46, 0x2e, 0xee, 0xf9,
	0x9a, 0x21, 0x87, 0xcf, 0x0a, 0xd1, 0xed, 0xf7, 0xe8, 0x21, 0x14, 0x8c, 0xaf, 0x5e, 0x3b, 0x9e,
	0xed, 0x8f, 0x50, 0x1e, 0xd2, 0xc6, 0x57, 0x1f, 0x97, 0xd7, 0xe4, 0xc7, 0x71, 0x59, 0x3b, 0xfa,
	0x93, 0x06, 0xc5, 0xb8, 0x5d, 0x40, 0x25, 0xc8, 0x9f, 0xb6, 0x5e, 0xb5, 0x8c, 0xf6, 0x49, 0x79,
	0x0d, 0x15, 0x20, 0x73, 0x7e, 0xd9, 0x68, 0x94, 0x35, 0xb4, 0x0b, 0xa8, 0xd9, 0xb8, 0x6c, 0x98,
	0x57, 0x17, 0xe6, 0xe7, 0x27, 0xaf, 0x2e, 0x4d, 0xa3, 0xd5, 0x69, 0x5d, 0x96, 0x53, 0x68, 0x0b,
	0x4a, 0x11, 0xfd, 0xac, 0x7d, 0x52, 0x4e, 0xa3, 0x2a, 0xec, 0x36, 0x5b, 0x5f, 0xb6, 0x4f, 0x5a,
	0xe6, 0x17, 0x57, 0xad, 0xab, 0x96, 0xd9, 0xbe, 0x6c, 0x9d, 0x99, 0x9d, 0xf6, 0x37, 0xad, 0x72,
	0x66, 0x31, 0x8f, 0xab, 0x2b, 0x67, 0xd1, 0x13, 0x78, 0x30, 0x63, 0xe0, 0xd2, 0x68, 0xbc, 0xea,
	0x9c, 0xb5, 0x3b, 0x9d, 0xf6, 0xf9, 0xab, 0x72, 0x0e, 0xdd, 0x87, 0x6d, 0x21, 0xd0, 0x3c, 0x7f,
	0xfd, 0xca, 0x3c, 0x6d, 0x5c, 0xb6, 0x5e, 0x37, 0xbe, 0x2e, 0xe7, 0x8f, 0xff, 0xb6, 0x0e, 0x95,
	0x46, 0x10, 0xb8, 0x8e, 0xac, 0x0d, 0xf2, 0x19, 0x51, 0x3d, 0x41, 0xa2, 0x36, 0x94, 0x67, 0x6f,
	0x0c, 0xe8, 0xc1, 0x04, 0x67, 0xe7, 0xee, 0x11, 0xd5, 0xdd, 0xb9, 0x4a, 0xd5, 0xea, 0x07, 0x6c,
	0xac, 0xaf, 0xa1, 0xd7, 0xd1, 0xe5, 0x63, 0xae, 0x7b, 0x44, 0xfa, 0x44, 0xe3, 0xb2, 0xd6, 0x72,
	0x85, 0xe2, 0x9f, 0x40, 0x29, 0xd1, 0xeb, 0xa1, 0xdd, 0x89, 0xb2, 0x64, 0xf3, 0xb7, 0x42, 0xc1,
	0x0b, 0xd8, 0x9e, 0xeb, 0xd7, 0xd0, 0xc3, 0x89, 0x9a, 0xf9, 0x36, 0x6e, 0x85, 0xb2, 0xb3, 0xa8,
	0x20, 0x24, 0x6b, 0x10, 0x7a, 0xb4, 0xb2, 0x36, 0xbd, 0xcd, 0xe2, 0x44, 0x7d, 0x49, 0x2e, 0x2e,
	0x59, 0x70, 0x56, 0x28, 0x38, 0x85, 0xad, 0x99, 0xee, 0x10, 0x55, 0xe5, 0x03, 0xf7, 0xa2, 0x96,
	0x71, 0xf5, 0x2e, 0xcd, 0xf5, 0x5a, 0x72, 0x97, 0x96, 0xb5, 0x60, 0x2b, 0x94, 0x19, 0xb0, 0x3d,
	0xf7, 0xc6, 0x20, 0x95, 0x2d, 0x7b, 0x3b, 0xa9, 0x3e, 0x5a, 0xf9, 0x30, 0xa1, 0xaf, 0xa1, 0x2b,
	0x40, 0xf3, 0xf7, 0x7a, 0x14, 0x4d, 0x5b, 0xfc, 0x6c, 0x50, 0x7d, 0xbc, 0x8c, 0x1d, 0xab, 0x3d,
	0x87, 0xf2, 0xe4, 0x01, 0x2d, 0x94, 0xcb, 0x16, 0x29, 0xb0, 0xe4, 0xdd, 0xae, 0xfa, 0x70, 0x31,
	0x33, 0x56, 0xd8, 0x86, 0xcd, 0xe9, 0xc7, 0x41, 0xb4, 0xaf, 0x9c, 0x98, 0x7f, 0xbd, 0xac, 0x56,
	0x17, 0xb1, 0xe6, 0x55, 0x45, 0x4f, 0x98, 0x49, 0x55, 0x33, 0xcf, 0x9a, 0x77, 0xa8, 0x3a, 0x83,
	0xf2, 0xec, 0x23, 0xe7, 0x2a, 0xbf, 0xa6, 0x63, 0x35, 0xf3, 0x2a, 0xaa, 0xaf, 0xa1, 0x6f, 0x61,
	0x7f, 0x69, 0x69, 0x47, 0xff, 0xb3, 0xaa, 0x39, 0x88, 0x8f, 0xe2, 0xbb, 0x77, 0x48, 0xc5, 0xb6,
	0x5e, 0xc2, 0x5e, 0x87, 0x51, 0x82, 0xfb, 0xf3, 0x55, 0xe1, 0xfe, 0x7c, 0x0d, 0x18, 0xb8, 0x2b,
	0x0e, 0xe6, 0xa1, 0x86, 0x3e, 0x87, 0x8d, 0xa9, 0x07, 0x71, 0x54, 0x89, 0x96, 0x3a, 0xfb, 0xac,
	0x5e, 0xdd, 0x5f, 0xc0, 0x89, 0xbd, 0x6a, 0x0a, 0x3d, 0x93, 0xe7, 0x7d, 0xb4, 0xc4, 0x68, 0xac,
	0x65, 0xfe, 0x9f, 0x80, 0x38, 0x51, 0xa6, 0xff, 0x11, 0x8a, 0x13, 0x65, 0xe1, 0x1f, 0x5a, 0x71,
	0xa2, 0x2c, 0xfe, 0xc7, 0x49, 0x5f, 0x43, 0x3f, 0x85, 0x7b, 0x8b, 0xfe, 0x93, 0x42, 0x4f, 0xf8,
	0xc4, 0x15, 0x7f, 0x95, 0x55, 0x0f, 0x96, 0x0b, 0x44, 0xca, 0x9f, 0xfd, 0x0c, 0xee, 0x39, 0x7e,
	0xcd, 0x7a, 0xe3, 0xd0, 0x20, 0x64, 0xd8, 0xba, 0xa9, 0xe1, 0xc0, 0xa9, 0xe1, 0xf0, 0xd9, 0xee,
	0x5c, 0x8d, 0xb9, 0xe0, 0xdb, 0x70, 0xa1, 0x7d, 0x73, 0xd4, 0x73, 0xd8, 0x9b, 0xc1, 0x35, 0xbf,
	0xae, 0xd4, 0xaf, 0xa9, 0x6f, 0x61, 0x4c, 0xeb, 0x93, 0xf9, 0xff, 0x8b, 0x03, 0xa7, 0xde, 0xf3,
	0xeb, 0xc3, 0x4f, 0xea, 0x38, 0xbc, 0xce, 0x89, 0xbd, 0xfb, 0xe4, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xf6, 0xf0, 0xae, 0xb3, 0xdf, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ApplicationServerServiceClient is the client API for ApplicationServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationServerServiceClient interface {
	// HandleUplinkData handles uplink data received from an end-device.
	HandleUplinkData(ctx context.Context, in *HandleUplinkDataRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// HandleProprietaryUplink handles proprietary uplink payloads.
	HandleProprietaryUplink(ctx context.Context, in *HandleProprietaryUplinkRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// HandleError handles an error message.
	HandleError(ctx context.Context, in *HandleErrorRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// HandleDownlinkACK handles a downlink ACK or nACK response.
	HandleDownlinkACK(ctx context.Context, in *HandleDownlinkACKRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// HandleGatewayStats handles the given gateway stats.
	HandleGatewayStats(ctx context.Context, in *HandleGatewayStatsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// HandleTXACK handles the TX acknowledgement.
	HandleTxAck(ctx context.Context, in *HandleTxAckRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceStatus updates the device-status for a device.
	SetDeviceStatus(ctx context.Context, in *SetDeviceStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceLocation updates the device-location for a device.
	SetDeviceLocation(ctx context.Context, in *SetDeviceLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// SetDeviceLocation updates the device-location for a device.
	GetDevicesSummary(ctx context.Context, in *GetDevicesSummaryRequest, opts ...grpc.CallOption) (*GetDevicesSummaryResponse, error)
	// SetDeviceLocation updates the device-location for a device.
	GetGatewaysSummary(ctx context.Context, in *GetGatewaysSummaryRequest, opts ...grpc.CallOption) (*GetGatewaysSummaryResponse, error)
	// SetDeviceLocation updates the device-location for a device.
	ListOrganisation(ctx context.Context, in *ListOrganizationRequest, opts ...grpc.CallOption) (*ListOrganizationResponse, error)
	// GetOrgByDevEUI returns organization id by devEUI. Modification.
	GetOrgByDevEUI(ctx context.Context, in *GetOrgByDevEUIRequest, opts ...grpc.CallOption) (*GetOrgByDevEUIResponse, error)
	// GetOrgIDByGwID returns organization id by gwID. Modification.
	GetOrgIDByGwID(ctx context.Context, in *GetOrgIDByGwIDRequest, opts ...grpc.CallOption) (*GetOrgByDevEUIResponse, error)
	// GetDeviceAppSKey returns AES128Key by devEUI. Modification.
	GetDeviceAppSKey(ctx context.Context, in *GetOrgByDevEUIRequest, opts ...grpc.CallOption) (*GetDeviceAppSKeyResponse, error)
	// ReEncryptDeviceQueueItems requests the application-server to re-encrypt
	// the given payload items using the new parameters. This request is
	// for example triggered when the associated frame-counter of a downlink
	// payload will be used by a mac-layer only payload, e.g. when the NS has
	// mac-commands (or ACKs) to send to the device and combining this with
	// an application-layer payload would exceed the max. payload size.
	// Note there is no requirement that the number of returned items must be
	// equal to the number of requested items.
	ReEncryptDeviceQueueItems(ctx context.Context, in *ReEncryptDeviceQueueItemsRequest, opts ...grpc.CallOption) (*ReEncryptDeviceQueueItemsResponse, error)
	// StreamGatewayTaskResult stream ExecCmd results from gateway to save into as-db
	StreamGatewayTaskResult(ctx context.Context, opts ...grpc.CallOption) (ApplicationServerService_StreamGatewayTaskResultClient, error)
	// GetDictionary returns list of dictionary by the type. Modification.
	GetDictionary(ctx context.Context, in *GetDictionaryRequest, opts ...grpc.CallOption) (*GetDictionaryResponse, error)
	// GetGWMetaData returns a map with last metadata for the gw
	GetGWMetaData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetGWMetaDataResponse, error)
	// GetServiceProfile (TEMP for ADR MIGRATE) returns sp from as-database (local only)
	GetServiceProfile(ctx context.Context, in *GetServiceProfileRequest, opts ...grpc.CallOption) (*GetServiceProfileResponse, error)
	// CreateServiceProfile (TEMP for ADR MIGRATE) creates service profile in as local db.
	CreateServiceProfile(ctx context.Context, in *CreateServiceProfileRequest, opts ...grpc.CallOption) (*CreateServiceProfileResponse, error)
}

type applicationServerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApplicationServerServiceClient(cc grpc.ClientConnInterface) ApplicationServerServiceClient {
	return &applicationServerServiceClient{cc}
}

func (c *applicationServerServiceClient) HandleUplinkData(ctx context.Context, in *HandleUplinkDataRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleUplinkData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) HandleProprietaryUplink(ctx context.Context, in *HandleProprietaryUplinkRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleProprietaryUplink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) HandleError(ctx context.Context, in *HandleErrorRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleError", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) HandleDownlinkACK(ctx context.Context, in *HandleDownlinkACKRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleDownlinkACK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) HandleGatewayStats(ctx context.Context, in *HandleGatewayStatsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleGatewayStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) HandleTxAck(ctx context.Context, in *HandleTxAckRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/HandleTxAck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) SetDeviceStatus(ctx context.Context, in *SetDeviceStatusRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/SetDeviceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) SetDeviceLocation(ctx context.Context, in *SetDeviceLocationRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/SetDeviceLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetDevicesSummary(ctx context.Context, in *GetDevicesSummaryRequest, opts ...grpc.CallOption) (*GetDevicesSummaryResponse, error) {
	out := new(GetDevicesSummaryResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetDevicesSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetGatewaysSummary(ctx context.Context, in *GetGatewaysSummaryRequest, opts ...grpc.CallOption) (*GetGatewaysSummaryResponse, error) {
	out := new(GetGatewaysSummaryResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetGatewaysSummary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) ListOrganisation(ctx context.Context, in *ListOrganizationRequest, opts ...grpc.CallOption) (*ListOrganizationResponse, error) {
	out := new(ListOrganizationResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/ListOrganisation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetOrgByDevEUI(ctx context.Context, in *GetOrgByDevEUIRequest, opts ...grpc.CallOption) (*GetOrgByDevEUIResponse, error) {
	out := new(GetOrgByDevEUIResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetOrgByDevEUI", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetOrgIDByGwID(ctx context.Context, in *GetOrgIDByGwIDRequest, opts ...grpc.CallOption) (*GetOrgByDevEUIResponse, error) {
	out := new(GetOrgByDevEUIResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetOrgIDByGwID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetDeviceAppSKey(ctx context.Context, in *GetOrgByDevEUIRequest, opts ...grpc.CallOption) (*GetDeviceAppSKeyResponse, error) {
	out := new(GetDeviceAppSKeyResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetDeviceAppSKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) ReEncryptDeviceQueueItems(ctx context.Context, in *ReEncryptDeviceQueueItemsRequest, opts ...grpc.CallOption) (*ReEncryptDeviceQueueItemsResponse, error) {
	out := new(ReEncryptDeviceQueueItemsResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/ReEncryptDeviceQueueItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) StreamGatewayTaskResult(ctx context.Context, opts ...grpc.CallOption) (ApplicationServerService_StreamGatewayTaskResultClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ApplicationServerService_serviceDesc.Streams[0], "/as.ApplicationServerService/StreamGatewayTaskResult", opts...)
	if err != nil {
		return nil, err
	}
	x := &applicationServerServiceStreamGatewayTaskResultClient{stream}
	return x, nil
}

type ApplicationServerService_StreamGatewayTaskResultClient interface {
	Send(*GatewayTaskResult) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type applicationServerServiceStreamGatewayTaskResultClient struct {
	grpc.ClientStream
}

func (x *applicationServerServiceStreamGatewayTaskResultClient) Send(m *GatewayTaskResult) error {
	return x.ClientStream.SendMsg(m)
}

func (x *applicationServerServiceStreamGatewayTaskResultClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *applicationServerServiceClient) GetDictionary(ctx context.Context, in *GetDictionaryRequest, opts ...grpc.CallOption) (*GetDictionaryResponse, error) {
	out := new(GetDictionaryResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetDictionary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetGWMetaData(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetGWMetaDataResponse, error) {
	out := new(GetGWMetaDataResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetGWMetaData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) GetServiceProfile(ctx context.Context, in *GetServiceProfileRequest, opts ...grpc.CallOption) (*GetServiceProfileResponse, error) {
	out := new(GetServiceProfileResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/GetServiceProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServerServiceClient) CreateServiceProfile(ctx context.Context, in *CreateServiceProfileRequest, opts ...grpc.CallOption) (*CreateServiceProfileResponse, error) {
	out := new(CreateServiceProfileResponse)
	err := c.cc.Invoke(ctx, "/as.ApplicationServerService/CreateServiceProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationServerServiceServer is the server API for ApplicationServerService service.
type ApplicationServerServiceServer interface {
	// HandleUplinkData handles uplink data received from an end-device.
	HandleUplinkData(context.Context, *HandleUplinkDataRequest) (*empty.Empty, error)
	// HandleProprietaryUplink handles proprietary uplink payloads.
	HandleProprietaryUplink(context.Context, *HandleProprietaryUplinkRequest) (*empty.Empty, error)
	// HandleError handles an error message.
	HandleError(context.Context, *HandleErrorRequest) (*empty.Empty, error)
	// HandleDownlinkACK handles a downlink ACK or nACK response.
	HandleDownlinkACK(context.Context, *HandleDownlinkACKRequest) (*empty.Empty, error)
	// HandleGatewayStats handles the given gateway stats.
	HandleGatewayStats(context.Context, *HandleGatewayStatsRequest) (*empty.Empty, error)
	// HandleTXACK handles the TX acknowledgement.
	HandleTxAck(context.Context, *HandleTxAckRequest) (*empty.Empty, error)
	// SetDeviceStatus updates the device-status for a device.
	SetDeviceStatus(context.Context, *SetDeviceStatusRequest) (*empty.Empty, error)
	// SetDeviceLocation updates the device-location for a device.
	SetDeviceLocation(context.Context, *SetDeviceLocationRequest) (*empty.Empty, error)
	// SetDeviceLocation updates the device-location for a device.
	GetDevicesSummary(context.Context, *GetDevicesSummaryRequest) (*GetDevicesSummaryResponse, error)
	// SetDeviceLocation updates the device-location for a device.
	GetGatewaysSummary(context.Context, *GetGatewaysSummaryRequest) (*GetGatewaysSummaryResponse, error)
	// SetDeviceLocation updates the device-location for a device.
	ListOrganisation(context.Context, *ListOrganizationRequest) (*ListOrganizationResponse, error)
	// GetOrgByDevEUI returns organization id by devEUI. Modification.
	GetOrgByDevEUI(context.Context, *GetOrgByDevEUIRequest) (*GetOrgByDevEUIResponse, error)
	// GetOrgIDByGwID returns organization id by gwID. Modification.
	GetOrgIDByGwID(context.Context, *GetOrgIDByGwIDRequest) (*GetOrgByDevEUIResponse, error)
	// GetDeviceAppSKey returns AES128Key by devEUI. Modification.
	GetDeviceAppSKey(context.Context, *GetOrgByDevEUIRequest) (*GetDeviceAppSKeyResponse, error)
	// ReEncryptDeviceQueueItems requests the application-server to re-encrypt
	// the given payload items using the new parameters. This request is
	// for example triggered when the associated frame-counter of a downlink
	// payload will be used by a mac-layer only payload, e.g. when the NS has
	// mac-commands (or ACKs) to send to the device and combining this with
	// an application-layer payload would exceed the max. payload size.
	// Note there is no requirement that the number of returned items must be
	// equal to the number of requested items.
	ReEncryptDeviceQueueItems(context.Context, *ReEncryptDeviceQueueItemsRequest) (*ReEncryptDeviceQueueItemsResponse, error)
	// StreamGatewayTaskResult stream ExecCmd results from gateway to save into as-db
	StreamGatewayTaskResult(ApplicationServerService_StreamGatewayTaskResultServer) error
	// GetDictionary returns list of dictionary by the type. Modification.
	GetDictionary(context.Context, *GetDictionaryRequest) (*GetDictionaryResponse, error)
	// GetGWMetaData returns a map with last metadata for the gw
	GetGWMetaData(context.Context, *empty.Empty) (*GetGWMetaDataResponse, error)
	// GetServiceProfile (TEMP for ADR MIGRATE) returns sp from as-database (local only)
	GetServiceProfile(context.Context, *GetServiceProfileRequest) (*GetServiceProfileResponse, error)
	// CreateServiceProfile (TEMP for ADR MIGRATE) creates service profile in as local db.
	CreateServiceProfile(context.Context, *CreateServiceProfileRequest) (*CreateServiceProfileResponse, error)
}

// UnimplementedApplicationServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationServerServiceServer struct {
}

func (*UnimplementedApplicationServerServiceServer) HandleUplinkData(ctx context.Context, req *HandleUplinkDataRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleUplinkData not implemented")
}
func (*UnimplementedApplicationServerServiceServer) HandleProprietaryUplink(ctx context.Context, req *HandleProprietaryUplinkRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleProprietaryUplink not implemented")
}
func (*UnimplementedApplicationServerServiceServer) HandleError(ctx context.Context, req *HandleErrorRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleError not implemented")
}
func (*UnimplementedApplicationServerServiceServer) HandleDownlinkACK(ctx context.Context, req *HandleDownlinkACKRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleDownlinkACK not implemented")
}
func (*UnimplementedApplicationServerServiceServer) HandleGatewayStats(ctx context.Context, req *HandleGatewayStatsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleGatewayStats not implemented")
}
func (*UnimplementedApplicationServerServiceServer) HandleTxAck(ctx context.Context, req *HandleTxAckRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleTxAck not implemented")
}
func (*UnimplementedApplicationServerServiceServer) SetDeviceStatus(ctx context.Context, req *SetDeviceStatusRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceStatus not implemented")
}
func (*UnimplementedApplicationServerServiceServer) SetDeviceLocation(ctx context.Context, req *SetDeviceLocationRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDeviceLocation not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetDevicesSummary(ctx context.Context, req *GetDevicesSummaryRequest) (*GetDevicesSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDevicesSummary not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetGatewaysSummary(ctx context.Context, req *GetGatewaysSummaryRequest) (*GetGatewaysSummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGatewaysSummary not implemented")
}
func (*UnimplementedApplicationServerServiceServer) ListOrganisation(ctx context.Context, req *ListOrganizationRequest) (*ListOrganizationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrganisation not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetOrgByDevEUI(ctx context.Context, req *GetOrgByDevEUIRequest) (*GetOrgByDevEUIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrgByDevEUI not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetOrgIDByGwID(ctx context.Context, req *GetOrgIDByGwIDRequest) (*GetOrgByDevEUIResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrgIDByGwID not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetDeviceAppSKey(ctx context.Context, req *GetOrgByDevEUIRequest) (*GetDeviceAppSKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceAppSKey not implemented")
}
func (*UnimplementedApplicationServerServiceServer) ReEncryptDeviceQueueItems(ctx context.Context, req *ReEncryptDeviceQueueItemsRequest) (*ReEncryptDeviceQueueItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReEncryptDeviceQueueItems not implemented")
}
func (*UnimplementedApplicationServerServiceServer) StreamGatewayTaskResult(srv ApplicationServerService_StreamGatewayTaskResultServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamGatewayTaskResult not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetDictionary(ctx context.Context, req *GetDictionaryRequest) (*GetDictionaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDictionary not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetGWMetaData(ctx context.Context, req *empty.Empty) (*GetGWMetaDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGWMetaData not implemented")
}
func (*UnimplementedApplicationServerServiceServer) GetServiceProfile(ctx context.Context, req *GetServiceProfileRequest) (*GetServiceProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceProfile not implemented")
}
func (*UnimplementedApplicationServerServiceServer) CreateServiceProfile(ctx context.Context, req *CreateServiceProfileRequest) (*CreateServiceProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServiceProfile not implemented")
}

func RegisterApplicationServerServiceServer(s *grpc.Server, srv ApplicationServerServiceServer) {
	s.RegisterService(&_ApplicationServerService_serviceDesc, srv)
}

func _ApplicationServerService_HandleUplinkData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleUplinkDataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleUplinkData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleUplinkData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleUplinkData(ctx, req.(*HandleUplinkDataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_HandleProprietaryUplink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleProprietaryUplinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleProprietaryUplink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleProprietaryUplink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleProprietaryUplink(ctx, req.(*HandleProprietaryUplinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_HandleError_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleErrorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleError(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleError",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleError(ctx, req.(*HandleErrorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_HandleDownlinkACK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleDownlinkACKRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleDownlinkACK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleDownlinkACK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleDownlinkACK(ctx, req.(*HandleDownlinkACKRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_HandleGatewayStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleGatewayStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleGatewayStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleGatewayStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleGatewayStats(ctx, req.(*HandleGatewayStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_HandleTxAck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleTxAckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).HandleTxAck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/HandleTxAck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).HandleTxAck(ctx, req.(*HandleTxAckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_SetDeviceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).SetDeviceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/SetDeviceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).SetDeviceStatus(ctx, req.(*SetDeviceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_SetDeviceLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceLocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).SetDeviceLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/SetDeviceLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).SetDeviceLocation(ctx, req.(*SetDeviceLocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetDevicesSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDevicesSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetDevicesSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetDevicesSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetDevicesSummary(ctx, req.(*GetDevicesSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetGatewaysSummary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGatewaysSummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetGatewaysSummary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetGatewaysSummary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetGatewaysSummary(ctx, req.(*GetGatewaysSummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_ListOrganisation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).ListOrganisation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/ListOrganisation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).ListOrganisation(ctx, req.(*ListOrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetOrgByDevEUI_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrgByDevEUIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetOrgByDevEUI(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetOrgByDevEUI",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetOrgByDevEUI(ctx, req.(*GetOrgByDevEUIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetOrgIDByGwID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrgIDByGwIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetOrgIDByGwID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetOrgIDByGwID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetOrgIDByGwID(ctx, req.(*GetOrgIDByGwIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetDeviceAppSKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrgByDevEUIRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetDeviceAppSKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetDeviceAppSKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetDeviceAppSKey(ctx, req.(*GetOrgByDevEUIRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_ReEncryptDeviceQueueItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReEncryptDeviceQueueItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).ReEncryptDeviceQueueItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/ReEncryptDeviceQueueItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).ReEncryptDeviceQueueItems(ctx, req.(*ReEncryptDeviceQueueItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_StreamGatewayTaskResult_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ApplicationServerServiceServer).StreamGatewayTaskResult(&applicationServerServiceStreamGatewayTaskResultServer{stream})
}

type ApplicationServerService_StreamGatewayTaskResultServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*GatewayTaskResult, error)
	grpc.ServerStream
}

type applicationServerServiceStreamGatewayTaskResultServer struct {
	grpc.ServerStream
}

func (x *applicationServerServiceStreamGatewayTaskResultServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *applicationServerServiceStreamGatewayTaskResultServer) Recv() (*GatewayTaskResult, error) {
	m := new(GatewayTaskResult)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ApplicationServerService_GetDictionary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDictionaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetDictionary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetDictionary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetDictionary(ctx, req.(*GetDictionaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetGWMetaData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetGWMetaData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetGWMetaData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetGWMetaData(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_GetServiceProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).GetServiceProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/GetServiceProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).GetServiceProfile(ctx, req.(*GetServiceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationServerService_CreateServiceProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServerServiceServer).CreateServiceProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/as.ApplicationServerService/CreateServiceProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServerServiceServer).CreateServiceProfile(ctx, req.(*CreateServiceProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "as.ApplicationServerService",
	HandlerType: (*ApplicationServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleUplinkData",
			Handler:    _ApplicationServerService_HandleUplinkData_Handler,
		},
		{
			MethodName: "HandleProprietaryUplink",
			Handler:    _ApplicationServerService_HandleProprietaryUplink_Handler,
		},
		{
			MethodName: "HandleError",
			Handler:    _ApplicationServerService_HandleError_Handler,
		},
		{
			MethodName: "HandleDownlinkACK",
			Handler:    _ApplicationServerService_HandleDownlinkACK_Handler,
		},
		{
			MethodName: "HandleGatewayStats",
			Handler:    _ApplicationServerService_HandleGatewayStats_Handler,
		},
		{
			MethodName: "HandleTxAck",
			Handler:    _ApplicationServerService_HandleTxAck_Handler,
		},
		{
			MethodName: "SetDeviceStatus",
			Handler:    _ApplicationServerService_SetDeviceStatus_Handler,
		},
		{
			MethodName: "SetDeviceLocation",
			Handler:    _ApplicationServerService_SetDeviceLocation_Handler,
		},
		{
			MethodName: "GetDevicesSummary",
			Handler:    _ApplicationServerService_GetDevicesSummary_Handler,
		},
		{
			MethodName: "GetGatewaysSummary",
			Handler:    _ApplicationServerService_GetGatewaysSummary_Handler,
		},
		{
			MethodName: "ListOrganisation",
			Handler:    _ApplicationServerService_ListOrganisation_Handler,
		},
		{
			MethodName: "GetOrgByDevEUI",
			Handler:    _ApplicationServerService_GetOrgByDevEUI_Handler,
		},
		{
			MethodName: "GetOrgIDByGwID",
			Handler:    _ApplicationServerService_GetOrgIDByGwID_Handler,
		},
		{
			MethodName: "GetDeviceAppSKey",
			Handler:    _ApplicationServerService_GetDeviceAppSKey_Handler,
		},
		{
			MethodName: "ReEncryptDeviceQueueItems",
			Handler:    _ApplicationServerService_ReEncryptDeviceQueueItems_Handler,
		},
		{
			MethodName: "GetDictionary",
			Handler:    _ApplicationServerService_GetDictionary_Handler,
		},
		{
			MethodName: "GetGWMetaData",
			Handler:    _ApplicationServerService_GetGWMetaData_Handler,
		},
		{
			MethodName: "GetServiceProfile",
			Handler:    _ApplicationServerService_GetServiceProfile_Handler,
		},
		{
			MethodName: "CreateServiceProfile",
			Handler:    _ApplicationServerService_CreateServiceProfile_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamGatewayTaskResult",
			Handler:       _ApplicationServerService_StreamGatewayTaskResult_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "as/as.proto",
}
