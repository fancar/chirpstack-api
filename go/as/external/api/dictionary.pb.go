// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/dictionary.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetDictionaryRequest struct {
	// type of a dictionary
	DicType string `protobuf:"bytes,1,opt,name=dic_type,json=dicType,proto3" json:"dic_type,omitempty"`
	// type of store. For future use.
	Store                string   `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDictionaryRequest) Reset()         { *m = GetDictionaryRequest{} }
func (m *GetDictionaryRequest) String() string { return proto.CompactTextString(m) }
func (*GetDictionaryRequest) ProtoMessage()    {}
func (*GetDictionaryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4facbf26b2c0cced, []int{0}
}

func (m *GetDictionaryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDictionaryRequest.Unmarshal(m, b)
}
func (m *GetDictionaryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDictionaryRequest.Marshal(b, m, deterministic)
}
func (m *GetDictionaryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDictionaryRequest.Merge(m, src)
}
func (m *GetDictionaryRequest) XXX_Size() int {
	return xxx_messageInfo_GetDictionaryRequest.Size(m)
}
func (m *GetDictionaryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDictionaryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDictionaryRequest proto.InternalMessageInfo

func (m *GetDictionaryRequest) GetDicType() string {
	if m != nil {
		return m.DicType
	}
	return ""
}

func (m *GetDictionaryRequest) GetStore() string {
	if m != nil {
		return m.Store
	}
	return ""
}

type GetDictionaryResponse struct {
	// type of a dictionary
	DicType              string        `protobuf:"bytes,1,opt,name=dic_type,json=dicType,proto3" json:"dic_type,omitempty"`
	Dict                 []*Dictionary `protobuf:"bytes,2,rep,name=dict,proto3" json:"dict,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDictionaryResponse) Reset()         { *m = GetDictionaryResponse{} }
func (m *GetDictionaryResponse) String() string { return proto.CompactTextString(m) }
func (*GetDictionaryResponse) ProtoMessage()    {}
func (*GetDictionaryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4facbf26b2c0cced, []int{1}
}

func (m *GetDictionaryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDictionaryResponse.Unmarshal(m, b)
}
func (m *GetDictionaryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDictionaryResponse.Marshal(b, m, deterministic)
}
func (m *GetDictionaryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDictionaryResponse.Merge(m, src)
}
func (m *GetDictionaryResponse) XXX_Size() int {
	return xxx_messageInfo_GetDictionaryResponse.Size(m)
}
func (m *GetDictionaryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDictionaryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDictionaryResponse proto.InternalMessageInfo

func (m *GetDictionaryResponse) GetDicType() string {
	if m != nil {
		return m.DicType
	}
	return ""
}

func (m *GetDictionaryResponse) GetDict() []*Dictionary {
	if m != nil {
		return m.Dict
	}
	return nil
}

type Dictionary struct {
	// id of the item
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// value of the item
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	// if true the item is active
	IsActual             bool     `protobuf:"varint,3,opt,name=is_actual,json=isActual,proto3" json:"is_actual,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dictionary) Reset()         { *m = Dictionary{} }
func (m *Dictionary) String() string { return proto.CompactTextString(m) }
func (*Dictionary) ProtoMessage()    {}
func (*Dictionary) Descriptor() ([]byte, []int) {
	return fileDescriptor_4facbf26b2c0cced, []int{2}
}

func (m *Dictionary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dictionary.Unmarshal(m, b)
}
func (m *Dictionary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dictionary.Marshal(b, m, deterministic)
}
func (m *Dictionary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dictionary.Merge(m, src)
}
func (m *Dictionary) XXX_Size() int {
	return xxx_messageInfo_Dictionary.Size(m)
}
func (m *Dictionary) XXX_DiscardUnknown() {
	xxx_messageInfo_Dictionary.DiscardUnknown(m)
}

var xxx_messageInfo_Dictionary proto.InternalMessageInfo

func (m *Dictionary) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Dictionary) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Dictionary) GetIsActual() bool {
	if m != nil {
		return m.IsActual
	}
	return false
}

func init() {
	proto.RegisterType((*GetDictionaryRequest)(nil), "api.GetDictionaryRequest")
	proto.RegisterType((*GetDictionaryResponse)(nil), "api.GetDictionaryResponse")
	proto.RegisterType((*Dictionary)(nil), "api.Dictionary")
}

func init() {
	proto.RegisterFile("as/external/api/dictionary.proto", fileDescriptor_4facbf26b2c0cced)
}

var fileDescriptor_4facbf26b2c0cced = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0xa5, 0x1f, 0x6a, 0xbb, 0x22, 0xe2, 0x52, 0x21, 0x8d, 0x3d, 0x84, 0x78, 0xe9, 0xc5, 0x2c,
	0xb4, 0x07, 0xf1, 0xa8, 0x08, 0xbd, 0xb7, 0x82, 0xe0, 0xa5, 0x4c, 0x36, 0x43, 0xba, 0x1a, 0xb3,
	0xeb, 0xee, 0xb6, 0x58, 0x44, 0x04, 0xff, 0x82, 0x3f, 0xcd, 0xbf, 0xe0, 0x0f, 0x91, 0x6c, 0x88,
	0xd5, 0x50, 0xbc, 0xcd, 0x9b, 0x79, 0xf3, 0x78, 0x33, 0x8f, 0x04, 0x60, 0x18, 0x3e, 0x5b, 0xd4,
	0x39, 0x64, 0x0c, 0x94, 0x60, 0x89, 0xe0, 0x56, 0xc8, 0x1c, 0xf4, 0x3a, 0x52, 0x5a, 0x5a, 0x49,
	0x5b, 0xa0, 0x84, 0x3f, 0x48, 0xa5, 0x4c, 0x33, 0x74, 0x0c, 0xc8, 0x73, 0x69, 0xa1, 0x20, 0x99,
	0x92, 0x12, 0x4e, 0x48, 0x6f, 0x82, 0xf6, 0xfa, 0x67, 0x73, 0x8a, 0x4f, 0x4b, 0x34, 0x96, 0xf6,
	0x49, 0x27, 0x11, 0x7c, 0x6e, 0xd7, 0x0a, 0xbd, 0x46, 0xd0, 0x18, 0x76, 0xa7, 0x7b, 0x89, 0xe0,
	0x37, 0x6b, 0x85, 0xb4, 0x47, 0x76, 0x8c, 0x95, 0x1a, 0xbd, 0xa6, 0xeb, 0x97, 0x20, 0xbc, 0x25,
	0xc7, 0x35, 0x21, 0xa3, 0x64, 0x6e, 0xf0, 0x3f, 0xa5, 0x53, 0xd2, 0x2e, 0x3c, 0x7b, 0xcd, 0xa0,
	0x35, 0xdc, 0x1f, 0x1d, 0x46, 0xa0, 0x44, 0xf4, 0x4b, 0xc1, 0x0d, 0xc3, 0x19, 0x21, 0x9b, 0x1e,
	0xa5, 0xa4, 0xcd, 0x65, 0x52, 0x29, 0xb9, 0xba, 0x30, 0x94, 0x41, 0x8c, 0x59, 0x65, 0xc8, 0x01,
	0x7a, 0x42, 0xba, 0xc2, 0xcc, 0x81, 0xdb, 0x25, 0x64, 0x5e, 0x2b, 0x68, 0x0c, 0x3b, 0xd3, 0x8e,
	0x30, 0x97, 0x0e, 0x8f, 0xde, 0xc8, 0xd1, 0x46, 0x74, 0x86, 0x7a, 0x25, 0x38, 0xd2, 0x7b, 0x72,
	0xf0, 0xe7, 0x04, 0xda, 0x77, 0x8e, 0xb6, 0xfd, 0xc7, 0xf7, 0xb7, 0x8d, 0xca, 0x8b, 0xc3, 0xf0,
	0xfd, 0xf3, 0xeb, 0xa3, 0x39, 0xa0, 0x7e, 0x2d, 0x15, 0xf6, 0x52, 0x3d, 0xe2, 0xf5, 0xea, 0xe2,
	0xee, 0x3c, 0x15, 0x76, 0xb1, 0x8c, 0x23, 0x2e, 0x1f, 0x59, 0xac, 0x25, 0x07, 0xd0, 0x8c, 0x2f,
	0x84, 0x56, 0xc6, 0x02, 0x7f, 0x38, 0x2b, 0x56, 0x53, 0xc9, 0x56, 0x63, 0x56, 0x8b, 0x39, 0xde,
	0x75, 0xc9, 0x8d, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd3, 0xb0, 0x58, 0x33, 0x00, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DictionaryServiceClient is the client API for DictionaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DictionaryServiceClient interface {
	// GetDictionary returns dictionary by dictionary type
	GetDictionary(ctx context.Context, in *GetDictionaryRequest, opts ...grpc.CallOption) (*GetDictionaryResponse, error)
}

type dictionaryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDictionaryServiceClient(cc grpc.ClientConnInterface) DictionaryServiceClient {
	return &dictionaryServiceClient{cc}
}

func (c *dictionaryServiceClient) GetDictionary(ctx context.Context, in *GetDictionaryRequest, opts ...grpc.CallOption) (*GetDictionaryResponse, error) {
	out := new(GetDictionaryResponse)
	err := c.cc.Invoke(ctx, "/api.DictionaryService/GetDictionary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DictionaryServiceServer is the server API for DictionaryService service.
type DictionaryServiceServer interface {
	// GetDictionary returns dictionary by dictionary type
	GetDictionary(context.Context, *GetDictionaryRequest) (*GetDictionaryResponse, error)
}

// UnimplementedDictionaryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDictionaryServiceServer struct {
}

func (*UnimplementedDictionaryServiceServer) GetDictionary(ctx context.Context, req *GetDictionaryRequest) (*GetDictionaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDictionary not implemented")
}

func RegisterDictionaryServiceServer(s *grpc.Server, srv DictionaryServiceServer) {
	s.RegisterService(&_DictionaryService_serviceDesc, srv)
}

func _DictionaryService_GetDictionary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDictionaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DictionaryServiceServer).GetDictionary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DictionaryService/GetDictionary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DictionaryServiceServer).GetDictionary(ctx, req.(*GetDictionaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DictionaryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DictionaryService",
	HandlerType: (*DictionaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDictionary",
			Handler:    _DictionaryService_GetDictionary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "as/external/api/dictionary.proto",
}
