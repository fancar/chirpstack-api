// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: as/external/api/dataexport.proto

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	DataExportService_GetGateways_FullMethodName = "/api.DataExportService/GetGateways"
	DataExportService_GetUsers_FullMethodName    = "/api.DataExportService/GetUsers"
	DataExportService_GetDevices_FullMethodName  = "/api.DataExportService/GetDevices"
)

// DataExportServiceClient is the client API for DataExportService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DataExportServiceClient interface {
	// GetGateways Export gateways
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetGateways(ctx context.Context, in *DataExportRequest, opts ...grpc.CallOption) (DataExportService_GetGatewaysClient, error)
	// GetUsers Export users
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (DataExportService_GetUsersClient, error)
	// GetDevices Export devices
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetDevices(ctx context.Context, in *DataExportRequest, opts ...grpc.CallOption) (DataExportService_GetDevicesClient, error)
}

type dataExportServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDataExportServiceClient(cc grpc.ClientConnInterface) DataExportServiceClient {
	return &dataExportServiceClient{cc}
}

func (c *dataExportServiceClient) GetGateways(ctx context.Context, in *DataExportRequest, opts ...grpc.CallOption) (DataExportService_GetGatewaysClient, error) {
	stream, err := c.cc.NewStream(ctx, &DataExportService_ServiceDesc.Streams[0], DataExportService_GetGateways_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &dataExportServiceGetGatewaysClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataExportService_GetGatewaysClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type dataExportServiceGetGatewaysClient struct {
	grpc.ClientStream
}

func (x *dataExportServiceGetGatewaysClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataExportServiceClient) GetUsers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (DataExportService_GetUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &DataExportService_ServiceDesc.Streams[1], DataExportService_GetUsers_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &dataExportServiceGetUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataExportService_GetUsersClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type dataExportServiceGetUsersClient struct {
	grpc.ClientStream
}

func (x *dataExportServiceGetUsersClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataExportServiceClient) GetDevices(ctx context.Context, in *DataExportRequest, opts ...grpc.CallOption) (DataExportService_GetDevicesClient, error) {
	stream, err := c.cc.NewStream(ctx, &DataExportService_ServiceDesc.Streams[2], DataExportService_GetDevices_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &dataExportServiceGetDevicesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DataExportService_GetDevicesClient interface {
	Recv() (*StreamResponse, error)
	grpc.ClientStream
}

type dataExportServiceGetDevicesClient struct {
	grpc.ClientStream
}

func (x *dataExportServiceGetDevicesClient) Recv() (*StreamResponse, error) {
	m := new(StreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DataExportServiceServer is the server API for DataExportService service.
// All implementations must embed UnimplementedDataExportServiceServer
// for forward compatibility
type DataExportServiceServer interface {
	// GetGateways Export gateways
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetGateways(*DataExportRequest, DataExportService_GetGatewaysServer) error
	// GetUsers Export users
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetUsers(*emptypb.Empty, DataExportService_GetUsersServer) error
	// GetDevices Export devices
	//
	//	(!) websocket required! The endpoint does not work from a web-swagger.
	GetDevices(*DataExportRequest, DataExportService_GetDevicesServer) error
	mustEmbedUnimplementedDataExportServiceServer()
}

// UnimplementedDataExportServiceServer must be embedded to have forward compatible implementations.
type UnimplementedDataExportServiceServer struct {
}

func (UnimplementedDataExportServiceServer) GetGateways(*DataExportRequest, DataExportService_GetGatewaysServer) error {
	return status.Errorf(codes.Unimplemented, "method GetGateways not implemented")
}
func (UnimplementedDataExportServiceServer) GetUsers(*emptypb.Empty, DataExportService_GetUsersServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (UnimplementedDataExportServiceServer) GetDevices(*DataExportRequest, DataExportService_GetDevicesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetDevices not implemented")
}
func (UnimplementedDataExportServiceServer) mustEmbedUnimplementedDataExportServiceServer() {}

// UnsafeDataExportServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DataExportServiceServer will
// result in compilation errors.
type UnsafeDataExportServiceServer interface {
	mustEmbedUnimplementedDataExportServiceServer()
}

func RegisterDataExportServiceServer(s grpc.ServiceRegistrar, srv DataExportServiceServer) {
	s.RegisterService(&DataExportService_ServiceDesc, srv)
}

func _DataExportService_GetGateways_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DataExportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataExportServiceServer).GetGateways(m, &dataExportServiceGetGatewaysServer{stream})
}

type DataExportService_GetGatewaysServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type dataExportServiceGetGatewaysServer struct {
	grpc.ServerStream
}

func (x *dataExportServiceGetGatewaysServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DataExportService_GetUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(emptypb.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataExportServiceServer).GetUsers(m, &dataExportServiceGetUsersServer{stream})
}

type DataExportService_GetUsersServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type dataExportServiceGetUsersServer struct {
	grpc.ServerStream
}

func (x *dataExportServiceGetUsersServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _DataExportService_GetDevices_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DataExportRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DataExportServiceServer).GetDevices(m, &dataExportServiceGetDevicesServer{stream})
}

type DataExportService_GetDevicesServer interface {
	Send(*StreamResponse) error
	grpc.ServerStream
}

type dataExportServiceGetDevicesServer struct {
	grpc.ServerStream
}

func (x *dataExportServiceGetDevicesServer) Send(m *StreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

// DataExportService_ServiceDesc is the grpc.ServiceDesc for DataExportService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DataExportService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.DataExportService",
	HandlerType: (*DataExportServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetGateways",
			Handler:       _DataExportService_GetGateways_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetUsers",
			Handler:       _DataExportService_GetUsers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetDevices",
			Handler:       _DataExportService_GetDevices_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "as/external/api/dataexport.proto",
}
