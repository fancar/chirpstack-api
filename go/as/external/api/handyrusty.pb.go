// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.29.1
// 	protoc        (unknown)
// source: as/external/api/handyrusty.proto

package api

import (
	context "context"
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	handyrusty "github.com/brocaar/chirpstack-api/go/v3/handyrusty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_as_external_api_handyrusty_proto protoreflect.FileDescriptor

var file_as_external_api_handyrusty_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x13, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x68,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x67, 0x77, 0x2f, 0x67, 0x77, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x32, 0xe6, 0x0c, 0x0a, 0x11, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x52, 0x75,
	0x73, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7a, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b,
	0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x68, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79,
	0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x12, 0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x18, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x3a, 0x01, 0x2a, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61,
	0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x2f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x72, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x2e, 0x68, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x67, 0x77, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x22, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68,
	0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x72, 0x63, 0x2f, 0x65, 0x78,
	0x65, 0x63, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f,
	0x67, 0x12, 0x1d, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x3a, 0x01, 0x2a, 0x22, 0x2a, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x99, 0x01, 0x0a, 0x18, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f,
	0x67, 0x43, 0x53, 0x56, 0x12, 0x1d, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x43, 0x53,
	0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x30, 0x12, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75,
	0x73, 0x74, 0x79, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x73, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x2f, 0x63, 0x73,
	0x76, 0x30, 0x01, 0x12, 0x6e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b,
	0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d,
	0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x2d, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x12, 0x63, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47, 0x77, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x15,
	0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x77, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x77,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64,
	0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e,
	0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2d, 0x32, 0x34, 0x2d, 0x68, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x77, 0x6f, 0x77, 0x65, 0x65,
	0x6b, 0x73, 0x12, 0x19, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x77, 0x6f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x6c, 0x61, 0x73,
	0x74, 0x2d, 0x31, 0x34, 0x2d, 0x64, 0x61, 0x79, 0x73, 0x12, 0xa8, 0x01, 0x0a, 0x24, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x4c, 0x61, 0x73, 0x74,
	0x54, 0x77, 0x6f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x19, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x77, 0x6f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x37, 0x12, 0x35, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x6c, 0x61, 0x73,
	0x74, 0x2d, 0x31, 0x34, 0x2d, 0x64, 0x61, 0x79, 0x73, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x64, 0x12, 0xa6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x46, 0x6f, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x39, 0x3a, 0x01, 0x2a, 0x22, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x61,
	0x6e, 0x64, 0x79, 0x2d, 0x72, 0x75, 0x73, 0x74, 0x79, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x6c, 0x61, 0x73, 0x74, 0x2d, 0x32, 0x34, 0x2d, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x2f, 0x66, 0x6f, 0x72, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x7f, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x42, 0x0f, 0x48, 0x61, 0x6e, 0x64, 0x79, 0x72,
	0x75, 0x73, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x6f, 0x63, 0x61, 0x61, 0x72, 0x2f,
	0x63, 0x68, 0x69, 0x72, 0x70, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67,
	0x6f, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x73, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x2f, 0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x03, 0x41, 0x70, 0x69,
	0xca, 0x02, 0x03, 0x41, 0x70, 0x69, 0xe2, 0x02, 0x0f, 0x41, 0x70, 0x69, 0x5c, 0x47, 0x50, 0x42,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x03, 0x41, 0x70, 0x69, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_as_external_api_handyrusty_proto_goTypes = []interface{}{
	(*handyrusty.GetFrameCountersRequest)(nil),            // 0: hr.GetFrameCountersRequest
	(*handyrusty.GetFrameSpeedRequest)(nil),               // 1: hr.GetFrameSpeedRequest
	(*handyrusty.ExecCommandRequest)(nil),                 // 2: hr.ExecCommandRequest
	(*handyrusty.GetDeviceFramesLogRequest)(nil),          // 3: hr.GetDeviceFramesLogRequest
	(*emptypb.Empty)(nil),                                 // 4: google.protobuf.Empty
	(*handyrusty.GetIntegrationRepliesRequest)(nil),       // 5: hr.GetIntegrationRepliesRequest
	(*handyrusty.GetGwStatsRequest)(nil),                  // 6: hr.GetGwStatsRequest
	(*handyrusty.GetDeviceStatsRequest)(nil),              // 7: hr.GetDeviceStatsRequest
	(*handyrusty.GetAveragesForDeviceListRequest)(nil),    // 8: hr.GetAveragesForDeviceListRequest
	(*handyrusty.GetFrameCountersResponse)(nil),           // 9: hr.GetFrameCountersResponse
	(*handyrusty.GetFrameSpeedResponse)(nil),              // 10: hr.GetFrameSpeedResponse
	(*gw.GatewayCommandExecResponse)(nil),                 // 11: gw.GatewayCommandExecResponse
	(*handyrusty.GetDeviceFramesLogResponse)(nil),         // 12: hr.GetDeviceFramesLogResponse
	(*handyrusty.StreamDeviceFramesLogCSVResponse)(nil),   // 13: hr.StreamDeviceFramesLogCSVResponse
	(*handyrusty.GetCurrentStateResponse)(nil),            // 14: hr.GetCurrentStateResponse
	(*handyrusty.GetIntegrationRepliesResponse)(nil),      // 15: hr.GetIntegrationRepliesResponse
	(*handyrusty.GetGwStatsResponse)(nil),                 // 16: hr.GetGwStatsResponse
	(*handyrusty.GetDeviceStatsResponse)(nil),             // 17: hr.GetDeviceStatsResponse
	(*handyrusty.GetDeviceStatsLastTwoweeksResponse)(nil), // 18: hr.GetDeviceStatsLastTwoweeksResponse
	(*handyrusty.GetAveragesForDeviceListResponse)(nil),   // 19: hr.GetAveragesForDeviceListResponse
}
var file_as_external_api_handyrusty_proto_depIdxs = []int32{
	0,  // 0: api.HandyRustyService.GetFrameCounters:input_type -> hr.GetFrameCountersRequest
	1,  // 1: api.HandyRustyService.GetFrameSpeed:input_type -> hr.GetFrameSpeedRequest
	2,  // 2: api.HandyRustyService.ExecCommand:input_type -> hr.ExecCommandRequest
	3,  // 3: api.HandyRustyService.GetDeviceFramesLog:input_type -> hr.GetDeviceFramesLogRequest
	3,  // 4: api.HandyRustyService.StreamDeviceFramesLogCSV:input_type -> hr.GetDeviceFramesLogRequest
	4,  // 5: api.HandyRustyService.GetCurrentState:input_type -> google.protobuf.Empty
	5,  // 6: api.HandyRustyService.GetIntegrationReplies:input_type -> hr.GetIntegrationRepliesRequest
	6,  // 7: api.HandyRustyService.GetGwStats:input_type -> hr.GetGwStatsRequest
	7,  // 8: api.HandyRustyService.GetDeviceStats:input_type -> hr.GetDeviceStatsRequest
	7,  // 9: api.HandyRustyService.GetDeviceStatsLastTwoweeks:input_type -> hr.GetDeviceStatsRequest
	7,  // 10: api.HandyRustyService.GetDeviceStatsLastTwoweeksAggregated:input_type -> hr.GetDeviceStatsRequest
	8,  // 11: api.HandyRustyService.GetAveragesForDeviceList:input_type -> hr.GetAveragesForDeviceListRequest
	9,  // 12: api.HandyRustyService.GetFrameCounters:output_type -> hr.GetFrameCountersResponse
	10, // 13: api.HandyRustyService.GetFrameSpeed:output_type -> hr.GetFrameSpeedResponse
	11, // 14: api.HandyRustyService.ExecCommand:output_type -> gw.GatewayCommandExecResponse
	12, // 15: api.HandyRustyService.GetDeviceFramesLog:output_type -> hr.GetDeviceFramesLogResponse
	13, // 16: api.HandyRustyService.StreamDeviceFramesLogCSV:output_type -> hr.StreamDeviceFramesLogCSVResponse
	14, // 17: api.HandyRustyService.GetCurrentState:output_type -> hr.GetCurrentStateResponse
	15, // 18: api.HandyRustyService.GetIntegrationReplies:output_type -> hr.GetIntegrationRepliesResponse
	16, // 19: api.HandyRustyService.GetGwStats:output_type -> hr.GetGwStatsResponse
	17, // 20: api.HandyRustyService.GetDeviceStats:output_type -> hr.GetDeviceStatsResponse
	18, // 21: api.HandyRustyService.GetDeviceStatsLastTwoweeks:output_type -> hr.GetDeviceStatsLastTwoweeksResponse
	18, // 22: api.HandyRustyService.GetDeviceStatsLastTwoweeksAggregated:output_type -> hr.GetDeviceStatsLastTwoweeksResponse
	19, // 23: api.HandyRustyService.GetAveragesForDeviceList:output_type -> hr.GetAveragesForDeviceListResponse
	12, // [12:24] is the sub-list for method output_type
	0,  // [0:12] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_as_external_api_handyrusty_proto_init() }
func file_as_external_api_handyrusty_proto_init() {
	if File_as_external_api_handyrusty_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_as_external_api_handyrusty_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_as_external_api_handyrusty_proto_goTypes,
		DependencyIndexes: file_as_external_api_handyrusty_proto_depIdxs,
	}.Build()
	File_as_external_api_handyrusty_proto = out.File
	file_as_external_api_handyrusty_proto_rawDesc = nil
	file_as_external_api_handyrusty_proto_goTypes = nil
	file_as_external_api_handyrusty_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HandyRustyServiceClient is the client API for HandyRustyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandyRustyServiceClient interface {
	// GetFrameCounters returns frame counters by type for the given range. Aggregation: day
	GetFrameCounters(ctx context.Context, in *handyrusty.GetFrameCountersRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameCountersResponse, error)
	// GetFrameSpeed returns an array with rx+tx frames per minute measurments
	GetFrameSpeed(ctx context.Context, in *handyrusty.GetFrameSpeedRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameSpeedResponse, error)
	// ExecCommand sends the command to execute on gw. It waits 30 sec for an answer from gw
	ExecCommand(ctx context.Context, in *handyrusty.ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with recieved and transmitted device's frames
	GetDeviceFramesLog(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	//   - The data is transferred by chunks (stream);
	//   - This endpoint does not work from a web-browser!
	StreamDeviceFramesLogCSV(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error)
	GetCurrentState(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*handyrusty.GetCurrentStateResponse, error)
	GetIntegrationReplies(ctx context.Context, in *handyrusty.GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*handyrusty.GetIntegrationRepliesResponse, error)
	GetGwStats(ctx context.Context, in *handyrusty.GetGwStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetGwStatsResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours
	GetDeviceStats(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours to show in list
	GetAveragesForDeviceList(ctx context.Context, in *handyrusty.GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*handyrusty.GetAveragesForDeviceListResponse, error)
}

type handyRustyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHandyRustyServiceClient(cc grpc.ClientConnInterface) HandyRustyServiceClient {
	return &handyRustyServiceClient{cc}
}

func (c *handyRustyServiceClient) GetFrameCounters(ctx context.Context, in *handyrusty.GetFrameCountersRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameCountersResponse, error) {
	out := new(handyrusty.GetFrameCountersResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetFrameCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameSpeed(ctx context.Context, in *handyrusty.GetFrameSpeedRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameSpeedResponse, error) {
	out := new(handyrusty.GetFrameSpeedResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetFrameSpeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) ExecCommand(ctx context.Context, in *handyrusty.ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error) {
	out := new(gw.GatewayCommandExecResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/ExecCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceFramesLog(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceFramesLogResponse, error) {
	out := new(handyrusty.GetDeviceFramesLogResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceFramesLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StreamDeviceFramesLogCSV(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HandyRustyService_serviceDesc.Streams[0], "/api.HandyRustyService/StreamDeviceFramesLogCSV", opts...)
	if err != nil {
		return nil, err
	}
	x := &handyRustyServiceStreamDeviceFramesLogCSVClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HandyRustyService_StreamDeviceFramesLogCSVClient interface {
	Recv() (*handyrusty.StreamDeviceFramesLogCSVResponse, error)
	grpc.ClientStream
}

type handyRustyServiceStreamDeviceFramesLogCSVClient struct {
	grpc.ClientStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVClient) Recv() (*handyrusty.StreamDeviceFramesLogCSVResponse, error) {
	m := new(handyrusty.StreamDeviceFramesLogCSVResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *handyRustyServiceClient) GetCurrentState(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*handyrusty.GetCurrentStateResponse, error) {
	out := new(handyrusty.GetCurrentStateResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetCurrentState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetIntegrationReplies(ctx context.Context, in *handyrusty.GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*handyrusty.GetIntegrationRepliesResponse, error) {
	out := new(handyrusty.GetIntegrationRepliesResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetIntegrationReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGwStats(ctx context.Context, in *handyrusty.GetGwStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetGwStatsResponse, error) {
	out := new(handyrusty.GetGwStatsResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetGwStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStats(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsResponse, error) {
	out := new(handyrusty.GetDeviceStatsResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeks(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(handyrusty.GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStatsLastTwoweeks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(handyrusty.GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStatsLastTwoweeksAggregated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetAveragesForDeviceList(ctx context.Context, in *handyrusty.GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*handyrusty.GetAveragesForDeviceListResponse, error) {
	out := new(handyrusty.GetAveragesForDeviceListResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetAveragesForDeviceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandyRustyServiceServer is the server API for HandyRustyService service.
type HandyRustyServiceServer interface {
	// GetFrameCounters returns frame counters by type for the given range. Aggregation: day
	GetFrameCounters(context.Context, *handyrusty.GetFrameCountersRequest) (*handyrusty.GetFrameCountersResponse, error)
	// GetFrameSpeed returns an array with rx+tx frames per minute measurments
	GetFrameSpeed(context.Context, *handyrusty.GetFrameSpeedRequest) (*handyrusty.GetFrameSpeedResponse, error)
	// ExecCommand sends the command to execute on gw. It waits 30 sec for an answer from gw
	ExecCommand(context.Context, *handyrusty.ExecCommandRequest) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with recieved and transmitted device's frames
	GetDeviceFramesLog(context.Context, *handyrusty.GetDeviceFramesLogRequest) (*handyrusty.GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	//   - The data is transferred by chunks (stream);
	//   - This endpoint does not work from a web-browser!
	StreamDeviceFramesLogCSV(*handyrusty.GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error
	GetCurrentState(context.Context, *emptypb.Empty) (*handyrusty.GetCurrentStateResponse, error)
	GetIntegrationReplies(context.Context, *handyrusty.GetIntegrationRepliesRequest) (*handyrusty.GetIntegrationRepliesResponse, error)
	GetGwStats(context.Context, *handyrusty.GetGwStatsRequest) (*handyrusty.GetGwStatsResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours
	GetDeviceStats(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours to show in list
	GetAveragesForDeviceList(context.Context, *handyrusty.GetAveragesForDeviceListRequest) (*handyrusty.GetAveragesForDeviceListResponse, error)
}

// UnimplementedHandyRustyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHandyRustyServiceServer struct {
}

func (*UnimplementedHandyRustyServiceServer) GetFrameCounters(context.Context, *handyrusty.GetFrameCountersRequest) (*handyrusty.GetFrameCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameCounters not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetFrameSpeed(context.Context, *handyrusty.GetFrameSpeedRequest) (*handyrusty.GetFrameSpeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameSpeed not implemented")
}
func (*UnimplementedHandyRustyServiceServer) ExecCommand(context.Context, *handyrusty.ExecCommandRequest) (*gw.GatewayCommandExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecCommand not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceFramesLog(context.Context, *handyrusty.GetDeviceFramesLogRequest) (*handyrusty.GetDeviceFramesLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceFramesLog not implemented")
}
func (*UnimplementedHandyRustyServiceServer) StreamDeviceFramesLogCSV(*handyrusty.GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeviceFramesLogCSV not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetCurrentState(context.Context, *emptypb.Empty) (*handyrusty.GetCurrentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentState not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetIntegrationReplies(context.Context, *handyrusty.GetIntegrationRepliesRequest) (*handyrusty.GetIntegrationRepliesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIntegrationReplies not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetGwStats(context.Context, *handyrusty.GetGwStatsRequest) (*handyrusty.GetGwStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGwStats not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStats(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStats not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeks(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeks not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeksAggregated(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeksAggregated not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetAveragesForDeviceList(context.Context, *handyrusty.GetAveragesForDeviceListRequest) (*handyrusty.GetAveragesForDeviceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAveragesForDeviceList not implemented")
}

func RegisterHandyRustyServiceServer(s *grpc.Server, srv HandyRustyServiceServer) {
	s.RegisterService(&_HandyRustyService_serviceDesc, srv)
}

func _HandyRustyService_GetFrameCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetFrameCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetFrameCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, req.(*handyrusty.GetFrameCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetFrameSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetFrameSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, req.(*handyrusty.GetFrameSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_ExecCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.ExecCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/ExecCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, req.(*handyrusty.ExecCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceFramesLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceFramesLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceFramesLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, req.(*handyrusty.GetDeviceFramesLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StreamDeviceFramesLogCSV_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(handyrusty.GetDeviceFramesLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HandyRustyServiceServer).StreamDeviceFramesLogCSV(m, &handyRustyServiceStreamDeviceFramesLogCSVServer{stream})
}

type HandyRustyService_StreamDeviceFramesLogCSVServer interface {
	Send(*handyrusty.StreamDeviceFramesLogCSVResponse) error
	grpc.ServerStream
}

type handyRustyServiceStreamDeviceFramesLogCSVServer struct {
	grpc.ServerStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVServer) Send(m *handyrusty.StreamDeviceFramesLogCSVResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HandyRustyService_GetCurrentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetCurrentState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetIntegrationRepliesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetIntegrationReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, req.(*handyrusty.GetIntegrationRepliesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGwStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetGwStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetGwStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, req.(*handyrusty.GetGwStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStatsLastTwoweeks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStatsLastTwoweeksAggregated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetAveragesForDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetAveragesForDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetAveragesForDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, req.(*handyrusty.GetAveragesForDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HandyRustyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.HandyRustyService",
	HandlerType: (*HandyRustyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFrameCounters",
			Handler:    _HandyRustyService_GetFrameCounters_Handler,
		},
		{
			MethodName: "GetFrameSpeed",
			Handler:    _HandyRustyService_GetFrameSpeed_Handler,
		},
		{
			MethodName: "ExecCommand",
			Handler:    _HandyRustyService_ExecCommand_Handler,
		},
		{
			MethodName: "GetDeviceFramesLog",
			Handler:    _HandyRustyService_GetDeviceFramesLog_Handler,
		},
		{
			MethodName: "GetCurrentState",
			Handler:    _HandyRustyService_GetCurrentState_Handler,
		},
		{
			MethodName: "GetIntegrationReplies",
			Handler:    _HandyRustyService_GetIntegrationReplies_Handler,
		},
		{
			MethodName: "GetGwStats",
			Handler:    _HandyRustyService_GetGwStats_Handler,
		},
		{
			MethodName: "GetDeviceStats",
			Handler:    _HandyRustyService_GetDeviceStats_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeks",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeksAggregated",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler,
		},
		{
			MethodName: "GetAveragesForDeviceList",
			Handler:    _HandyRustyService_GetAveragesForDeviceList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamDeviceFramesLogCSV",
			Handler:       _HandyRustyService_StreamDeviceFramesLogCSV_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "as/external/api/handyrusty.proto",
}
