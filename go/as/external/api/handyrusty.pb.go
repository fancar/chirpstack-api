// Code generated by protoc-gen-go. DO NOT EDIT.
// source: as/external/api/handyrusty.proto

package api

import (
	context "context"
	fmt "fmt"
	gw "github.com/brocaar/chirpstack-api/go/v3/gw"
	handyrusty "github.com/brocaar/chirpstack-api/go/v3/handyrusty"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("as/external/api/handyrusty.proto", fileDescriptor_89a3848cc56d53bf)
}

var fileDescriptor_89a3848cc56d53bf = []byte{
	// 692 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x86, 0x65, 0x90, 0x58, 0x4c, 0xb9, 0x0e, 0x6a, 0xd5, 0xa6, 0x17, 0x85, 0x50, 0x2a, 0x94,
	0xd6, 0x9e, 0xd2, 0x0b, 0x55, 0x2b, 0x21, 0x54, 0x42, 0x6b, 0x90, 0xba, 0x6a, 0x10, 0x0b, 0x76,
	0x13, 0xe7, 0x74, 0x62, 0x35, 0xf1, 0x98, 0x99, 0x71, 0xdc, 0x20, 0x56, 0x2c, 0xbb, 0xed, 0x8a,
	0x17, 0x40, 0xbc, 0x0f, 0xaf, 0x80, 0x78, 0x0e, 0x34, 0xe3, 0x71, 0xee, 0x69, 0x83, 0xc4, 0xd2,
	0xe7, 0xfc, 0xe7, 0xff, 0xbf, 0xe3, 0x19, 0xcb, 0xa8, 0x48, 0x25, 0x81, 0x0b, 0x05, 0x22, 0xa2,
	0x4d, 0x42, 0xe3, 0x90, 0x34, 0x68, 0x54, 0xef, 0x88, 0x44, 0xaa, 0x8e, 0x17, 0x0b, 0xae, 0x38,
	0xbe, 0x4d, 0xe3, 0xb0, 0xb0, 0xc4, 0x38, 0x67, 0x4d, 0x30, 0x0a, 0x1a, 0x45, 0x5c, 0x51, 0x15,
	0xf2, 0x48, 0x66, 0x92, 0xc2, 0xa2, 0xed, 0x9a, 0xa7, 0x5a, 0x72, 0x46, 0xa0, 0x15, 0xe7, 0xf3,
	0x85, 0xc7, 0x3d, 0x47, 0xd2, 0x10, 0xb6, 0x38, 0xc3, 0x52, 0xc2, 0xd2, 0xec, 0x61, 0xeb, 0xcf,
	0x5d, 0xf4, 0xe8, 0x9d, 0x16, 0x9d, 0x6a, 0x51, 0x15, 0x44, 0x3b, 0x0c, 0x00, 0x7f, 0x41, 0x0f,
	0x7d, 0x50, 0xc7, 0x82, 0xb6, 0xa0, 0xc2, 0x93, 0x48, 0x81, 0x90, 0x78, 0xd1, 0x6b, 0x08, 0x6f,
	0xb8, 0x7a, 0x0a, 0x9f, 0x13, 0x90, 0xaa, 0xb0, 0x34, 0xbe, 0x29, 0x63, 0x1e, 0x49, 0x28, 0xad,
	0x7f, 0xfb, 0xf5, 0xfb, 0xea, 0xd6, 0xb3, 0x52, 0xb1, 0xb7, 0xa5, 0x9b, 0x41, 0x9d, 0x69, 0xbd,
	0x24, 0x81, 0x9d, 0x38, 0x70, 0xca, 0x38, 0x42, 0xf7, 0x72, 0xa3, 0x6a, 0x0c, 0x50, 0xc7, 0xf3,
	0xfd, 0xde, 0xa6, 0x94, 0xa7, 0x2e, 0x8c, 0xe9, 0xd8, 0xc8, 0xe7, 0x26, 0xb2, 0x54, 0x5a, 0x9e,
	0x14, 0x29, 0xb5, 0x5c, 0xe7, 0x09, 0x34, 0x73, 0x74, 0x01, 0x41, 0x85, 0xb7, 0x5a, 0x34, 0xaa,
	0xe3, 0x39, 0xed, 0xd9, 0x57, 0xc8, 0xb3, 0x56, 0x3c, 0x96, 0x7a, 0x3e, 0x55, 0x90, 0xd2, 0x8e,
	0x6d, 0x69, 0xd5, 0x14, 0x3b, 0x8a, 0x80, 0xc0, 0x05, 0x04, 0x6e, 0x90, 0x4d, 0xe9, 0xcc, 0x4b,
	0x07, 0x61, 0x1f, 0xd4, 0x5b, 0xd0, 0x6f, 0xdb, 0xd0, 0xcb, 0x13, 0xce, 0xf0, 0xb2, 0xdd, 0x67,
	0xa8, 0xde, 0x43, 0x98, 0xd0, 0xb6, 0x08, 0xbb, 0x06, 0x81, 0x94, 0xca, 0x93, 0x76, 0x6e, 0x72,
	0x26, 0x49, 0xdd, 0x4c, 0xbb, 0x59, 0x49, 0xc3, 0x7c, 0x77, 0xd0, 0x7c, 0x55, 0x09, 0xa0, 0xad,
	0x21, 0xe3, 0x4a, 0xf5, 0xe3, 0x4d, 0x48, 0xab, 0xba, 0x3d, 0x69, 0xb8, 0x0b, 0xf6, 0xd2, 0x80,
	0x6d, 0x62, 0x6f, 0x7a, 0x30, 0x12, 0xc8, 0xf6, 0xa6, 0x83, 0x23, 0xf4, 0xc0, 0x07, 0x55, 0x49,
	0x84, 0x80, 0x48, 0x55, 0x15, 0x55, 0x80, 0xe7, 0xbc, 0xec, 0xc6, 0x7b, 0xf9, 0x8d, 0xf7, 0x8e,
	0xf4, 0x8d, 0x2f, 0xe4, 0xf7, 0xb3, 0x5f, 0xdc, 0x25, 0x58, 0x33, 0x04, 0x45, 0xbc, 0x32, 0x42,
	0x10, 0x64, 0x72, 0x57, 0x1a, 0xf3, 0x4b, 0x07, 0xcd, 0xfa, 0xa0, 0xde, 0x47, 0x0a, 0x98, 0x30,
	0xdf, 0xd9, 0x29, 0xc4, 0xcd, 0x10, 0x24, 0x2e, 0x5a, 0xfb, 0xd1, 0x56, 0xfe, 0x2e, 0x9e, 0x5c,
	0xa3, 0xb0, 0x18, 0x1b, 0x06, 0x63, 0x0d, 0xaf, 0x8e, 0x60, 0x84, 0xbd, 0x21, 0x22, 0x6c, 0x64,
	0x80, 0x90, 0x0f, 0xca, 0x4f, 0xf5, 0x2a, 0x12, 0xcf, 0x5a, 0x7b, 0xfb, 0x9c, 0xa7, 0xce, 0x0d,
	0x97, 0x6f, 0xdc, 0x98, 0x65, 0x97, 0x98, 0x48, 0x63, 0xfb, 0x15, 0xdd, 0xef, 0x1e, 0x6f, 0x16,
	0xb4, 0x30, 0x70, 0xe4, 0x03, 0x61, 0x85, 0x71, 0x2d, 0x1b, 0xb8, 0x6d, 0x02, 0x5d, 0xbc, 0x3e,
	0x12, 0x98, 0x1d, 0x6c, 0x96, 0x47, 0x9a, 0x54, 0x2a, 0x77, 0x6b, 0xc7, 0x6d, 0xf0, 0x44, 0x48,
	0x7c, 0xe5, 0xa0, 0xc2, 0xa0, 0xdf, 0x09, 0x95, 0xea, 0x43, 0xca, 0x53, 0x80, 0xf3, 0x6b, 0x51,
	0xd6, 0x46, 0x5b, 0xfd, 0xa3, 0x5d, 0xac, 0x2d, 0x83, 0xb5, 0x81, 0xcb, 0x53, 0x60, 0xbd, 0xd8,
	0x71, 0xeb, 0xb4, 0x23, 0xf1, 0x4f, 0x07, 0xad, 0x4e, 0xb6, 0x3e, 0x64, 0x4c, 0x80, 0x7e, 0x89,
	0xf5, 0xff, 0xc1, 0xf7, 0xca, 0xf0, 0xed, 0xe1, 0xdd, 0xe9, 0xf9, 0x5c, 0xda, 0x23, 0xf8, 0xe1,
	0xa0, 0x79, 0x1f, 0xd4, 0x61, 0x1b, 0x04, 0x65, 0x20, 0x8f, 0xb9, 0xc8, 0x02, 0x4f, 0x42, 0xa9,
	0xf0, 0x53, 0xcb, 0x30, 0xb6, 0x3b, 0xf0, 0x09, 0x4f, 0x16, 0x59, 0xcc, 0xd7, 0x06, 0x73, 0xbf,
	0xb4, 0xf3, 0x0f, 0xa7, 0x4b, 0xce, 0xb8, 0x70, 0x9b, 0xa1, 0x54, 0x07, 0x4e, 0xf9, 0xcd, 0xfe,
	0xa7, 0x3d, 0x16, 0xaa, 0x46, 0x52, 0xf3, 0x02, 0xde, 0x22, 0x35, 0xc1, 0x03, 0x4a, 0x05, 0x09,
	0x1a, 0xa1, 0x88, 0xa5, 0xa2, 0xc1, 0xb9, 0xab, 0x7d, 0x19, 0x27, 0xed, 0x6d, 0x32, 0xf4, 0x5b,
	0xac, 0xdd, 0x31, 0x5f, 0xfa, 0xf6, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xd1, 0xf1, 0xb2,
	0x30, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HandyRustyServiceClient is the client API for HandyRustyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HandyRustyServiceClient interface {
	// GetFrameCounters returns frame counters by type for the given range. Aggregation: day
	GetFrameCounters(ctx context.Context, in *handyrusty.GetFrameCountersRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameCountersResponse, error)
	// GetFrameSpeed returns an array with rx+tx frames per minute measurments
	GetFrameSpeed(ctx context.Context, in *handyrusty.GetFrameSpeedRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameSpeedResponse, error)
	// ExecCommand sends the command to execute on gw. It waits 30 sec for an answer from gw
	ExecCommand(ctx context.Context, in *handyrusty.ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with recieved and transmitted device's frames
	GetDeviceFramesLog(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	//   * The data is transferred by chunks (stream);
	//   * This endpoint does not work from a web-browser!
	StreamDeviceFramesLogCSV(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error)
	GetCurrentState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*handyrusty.GetCurrentStateResponse, error)
	//
	GetIntegrationReplies(ctx context.Context, in *handyrusty.GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*handyrusty.GetIntegrationRepliesResponse, error)
	GetGwStats(ctx context.Context, in *handyrusty.GetGwStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetGwStatsResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours
	GetDeviceStats(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours to show in list
	GetAveragesForDeviceList(ctx context.Context, in *handyrusty.GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*handyrusty.GetAveragesForDeviceListResponse, error)
}

type handyRustyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHandyRustyServiceClient(cc grpc.ClientConnInterface) HandyRustyServiceClient {
	return &handyRustyServiceClient{cc}
}

func (c *handyRustyServiceClient) GetFrameCounters(ctx context.Context, in *handyrusty.GetFrameCountersRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameCountersResponse, error) {
	out := new(handyrusty.GetFrameCountersResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetFrameCounters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetFrameSpeed(ctx context.Context, in *handyrusty.GetFrameSpeedRequest, opts ...grpc.CallOption) (*handyrusty.GetFrameSpeedResponse, error) {
	out := new(handyrusty.GetFrameSpeedResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetFrameSpeed", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) ExecCommand(ctx context.Context, in *handyrusty.ExecCommandRequest, opts ...grpc.CallOption) (*gw.GatewayCommandExecResponse, error) {
	out := new(gw.GatewayCommandExecResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/ExecCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceFramesLog(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceFramesLogResponse, error) {
	out := new(handyrusty.GetDeviceFramesLogResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceFramesLog", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) StreamDeviceFramesLogCSV(ctx context.Context, in *handyrusty.GetDeviceFramesLogRequest, opts ...grpc.CallOption) (HandyRustyService_StreamDeviceFramesLogCSVClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HandyRustyService_serviceDesc.Streams[0], "/api.HandyRustyService/StreamDeviceFramesLogCSV", opts...)
	if err != nil {
		return nil, err
	}
	x := &handyRustyServiceStreamDeviceFramesLogCSVClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HandyRustyService_StreamDeviceFramesLogCSVClient interface {
	Recv() (*handyrusty.StreamDeviceFramesLogCSVResponse, error)
	grpc.ClientStream
}

type handyRustyServiceStreamDeviceFramesLogCSVClient struct {
	grpc.ClientStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVClient) Recv() (*handyrusty.StreamDeviceFramesLogCSVResponse, error) {
	m := new(handyrusty.StreamDeviceFramesLogCSVResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *handyRustyServiceClient) GetCurrentState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*handyrusty.GetCurrentStateResponse, error) {
	out := new(handyrusty.GetCurrentStateResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetCurrentState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetIntegrationReplies(ctx context.Context, in *handyrusty.GetIntegrationRepliesRequest, opts ...grpc.CallOption) (*handyrusty.GetIntegrationRepliesResponse, error) {
	out := new(handyrusty.GetIntegrationRepliesResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetIntegrationReplies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetGwStats(ctx context.Context, in *handyrusty.GetGwStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetGwStatsResponse, error) {
	out := new(handyrusty.GetGwStatsResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetGwStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStats(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsResponse, error) {
	out := new(handyrusty.GetDeviceStatsResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeks(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(handyrusty.GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStatsLastTwoweeks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, in *handyrusty.GetDeviceStatsRequest, opts ...grpc.CallOption) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	out := new(handyrusty.GetDeviceStatsLastTwoweeksResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetDeviceStatsLastTwoweeksAggregated", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *handyRustyServiceClient) GetAveragesForDeviceList(ctx context.Context, in *handyrusty.GetAveragesForDeviceListRequest, opts ...grpc.CallOption) (*handyrusty.GetAveragesForDeviceListResponse, error) {
	out := new(handyrusty.GetAveragesForDeviceListResponse)
	err := c.cc.Invoke(ctx, "/api.HandyRustyService/GetAveragesForDeviceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HandyRustyServiceServer is the server API for HandyRustyService service.
type HandyRustyServiceServer interface {
	// GetFrameCounters returns frame counters by type for the given range. Aggregation: day
	GetFrameCounters(context.Context, *handyrusty.GetFrameCountersRequest) (*handyrusty.GetFrameCountersResponse, error)
	// GetFrameSpeed returns an array with rx+tx frames per minute measurments
	GetFrameSpeed(context.Context, *handyrusty.GetFrameSpeedRequest) (*handyrusty.GetFrameSpeedResponse, error)
	// ExecCommand sends the command to execute on gw. It waits 30 sec for an answer from gw
	ExecCommand(context.Context, *handyrusty.ExecCommandRequest) (*gw.GatewayCommandExecResponse, error)
	// GetDeviceFramesLog returns an array with recieved and transmitted device's frames
	GetDeviceFramesLog(context.Context, *handyrusty.GetDeviceFramesLogRequest) (*handyrusty.GetDeviceFramesLogResponse, error)
	// StreamDeviceFramesLogCSV streams the frame-logs from handyrusty CH-storage.
	//   * The data is transferred by chunks (stream);
	//   * This endpoint does not work from a web-browser!
	StreamDeviceFramesLogCSV(*handyrusty.GetDeviceFramesLogRequest, HandyRustyService_StreamDeviceFramesLogCSVServer) error
	GetCurrentState(context.Context, *empty.Empty) (*handyrusty.GetCurrentStateResponse, error)
	//
	GetIntegrationReplies(context.Context, *handyrusty.GetIntegrationRepliesRequest) (*handyrusty.GetIntegrationRepliesResponse, error)
	GetGwStats(context.Context, *handyrusty.GetGwStatsRequest) (*handyrusty.GetGwStatsResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours
	GetDeviceStats(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsResponse, error)
	// Get stats for device from clickhouse for last 14 days
	GetDeviceStatsLastTwoweeks(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse for last 14 days aggregated by day
	GetDeviceStatsLastTwoweeksAggregated(context.Context, *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error)
	// Get stats for device from clickhouse current and for last 24 hours to show in list
	GetAveragesForDeviceList(context.Context, *handyrusty.GetAveragesForDeviceListRequest) (*handyrusty.GetAveragesForDeviceListResponse, error)
}

// UnimplementedHandyRustyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHandyRustyServiceServer struct {
}

func (*UnimplementedHandyRustyServiceServer) GetFrameCounters(ctx context.Context, req *handyrusty.GetFrameCountersRequest) (*handyrusty.GetFrameCountersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameCounters not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetFrameSpeed(ctx context.Context, req *handyrusty.GetFrameSpeedRequest) (*handyrusty.GetFrameSpeedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFrameSpeed not implemented")
}
func (*UnimplementedHandyRustyServiceServer) ExecCommand(ctx context.Context, req *handyrusty.ExecCommandRequest) (*gw.GatewayCommandExecResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecCommand not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceFramesLog(ctx context.Context, req *handyrusty.GetDeviceFramesLogRequest) (*handyrusty.GetDeviceFramesLogResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceFramesLog not implemented")
}
func (*UnimplementedHandyRustyServiceServer) StreamDeviceFramesLogCSV(req *handyrusty.GetDeviceFramesLogRequest, srv HandyRustyService_StreamDeviceFramesLogCSVServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamDeviceFramesLogCSV not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetCurrentState(ctx context.Context, req *empty.Empty) (*handyrusty.GetCurrentStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentState not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetIntegrationReplies(ctx context.Context, req *handyrusty.GetIntegrationRepliesRequest) (*handyrusty.GetIntegrationRepliesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIntegrationReplies not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetGwStats(ctx context.Context, req *handyrusty.GetGwStatsRequest) (*handyrusty.GetGwStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGwStats not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStats(ctx context.Context, req *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStats not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeks(ctx context.Context, req *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeks not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetDeviceStatsLastTwoweeksAggregated(ctx context.Context, req *handyrusty.GetDeviceStatsRequest) (*handyrusty.GetDeviceStatsLastTwoweeksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDeviceStatsLastTwoweeksAggregated not implemented")
}
func (*UnimplementedHandyRustyServiceServer) GetAveragesForDeviceList(ctx context.Context, req *handyrusty.GetAveragesForDeviceListRequest) (*handyrusty.GetAveragesForDeviceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAveragesForDeviceList not implemented")
}

func RegisterHandyRustyServiceServer(s *grpc.Server, srv HandyRustyServiceServer) {
	s.RegisterService(&_HandyRustyService_serviceDesc, srv)
}

func _HandyRustyService_GetFrameCounters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetFrameCountersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetFrameCounters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameCounters(ctx, req.(*handyrusty.GetFrameCountersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetFrameSpeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetFrameSpeedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetFrameSpeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetFrameSpeed(ctx, req.(*handyrusty.GetFrameSpeedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_ExecCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.ExecCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/ExecCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).ExecCommand(ctx, req.(*handyrusty.ExecCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceFramesLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceFramesLogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceFramesLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceFramesLog(ctx, req.(*handyrusty.GetDeviceFramesLogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_StreamDeviceFramesLogCSV_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(handyrusty.GetDeviceFramesLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HandyRustyServiceServer).StreamDeviceFramesLogCSV(m, &handyRustyServiceStreamDeviceFramesLogCSVServer{stream})
}

type HandyRustyService_StreamDeviceFramesLogCSVServer interface {
	Send(*handyrusty.StreamDeviceFramesLogCSVResponse) error
	grpc.ServerStream
}

type handyRustyServiceStreamDeviceFramesLogCSVServer struct {
	grpc.ServerStream
}

func (x *handyRustyServiceStreamDeviceFramesLogCSVServer) Send(m *handyrusty.StreamDeviceFramesLogCSVResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _HandyRustyService_GetCurrentState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetCurrentState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetCurrentState(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetIntegrationReplies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetIntegrationRepliesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetIntegrationReplies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetIntegrationReplies(ctx, req.(*handyrusty.GetIntegrationRepliesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetGwStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetGwStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetGwStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetGwStats(ctx, req.(*handyrusty.GetGwStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStats(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStatsLastTwoweeks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeks(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetDeviceStatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetDeviceStatsLastTwoweeksAggregated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetDeviceStatsLastTwoweeksAggregated(ctx, req.(*handyrusty.GetDeviceStatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HandyRustyService_GetAveragesForDeviceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(handyrusty.GetAveragesForDeviceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HandyRustyService/GetAveragesForDeviceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HandyRustyServiceServer).GetAveragesForDeviceList(ctx, req.(*handyrusty.GetAveragesForDeviceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HandyRustyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.HandyRustyService",
	HandlerType: (*HandyRustyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFrameCounters",
			Handler:    _HandyRustyService_GetFrameCounters_Handler,
		},
		{
			MethodName: "GetFrameSpeed",
			Handler:    _HandyRustyService_GetFrameSpeed_Handler,
		},
		{
			MethodName: "ExecCommand",
			Handler:    _HandyRustyService_ExecCommand_Handler,
		},
		{
			MethodName: "GetDeviceFramesLog",
			Handler:    _HandyRustyService_GetDeviceFramesLog_Handler,
		},
		{
			MethodName: "GetCurrentState",
			Handler:    _HandyRustyService_GetCurrentState_Handler,
		},
		{
			MethodName: "GetIntegrationReplies",
			Handler:    _HandyRustyService_GetIntegrationReplies_Handler,
		},
		{
			MethodName: "GetGwStats",
			Handler:    _HandyRustyService_GetGwStats_Handler,
		},
		{
			MethodName: "GetDeviceStats",
			Handler:    _HandyRustyService_GetDeviceStats_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeks",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeks_Handler,
		},
		{
			MethodName: "GetDeviceStatsLastTwoweeksAggregated",
			Handler:    _HandyRustyService_GetDeviceStatsLastTwoweeksAggregated_Handler,
		},
		{
			MethodName: "GetAveragesForDeviceList",
			Handler:    _HandyRustyService_GetAveragesForDeviceList_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamDeviceFramesLogCSV",
			Handler:       _HandyRustyService_StreamDeviceFramesLogCSV_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "as/external/api/handyrusty.proto",
}
