syntax = "proto3";

package api;

option go_package = "github.com/brocaar/chirpstack-api/go/v3/as/external/api";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "handyrusty/hr.proto";

// DataExportService the service manages all data exports
service DataExportService {

    // GetGateways Export gateways
    //   (!) websocket required! The endpoint does not work from a web-swagger.
    rpc GetGateways(DataExportRequest) returns (stream StreamResponse) {
        option (google.api.http) = {
            get: "/api/dataexport/gateways"
        };
    }

    // GetUsers Export users
    //   (!) websocket required! The endpoint does not work from a web-swagger.
    rpc GetUsers(google.protobuf.Empty) returns (stream StreamResponse) {
        option (google.api.http) = {
            get: "/api/dataexport/users"
        };
    }

    // GetDevices Export devices
    //   (!) websocket required! The endpoint does not work from a web-swagger.
    rpc GetDevices(DataExportRequest) returns (stream StreamResponse) {
        option (google.api.http) = {
            get: "/api/dataexport/devices"
        };
    }

    // CountDeviceFramesPerDevEui counts frames for device-list and\or period between start and end
    rpc CountDeviceFramesPerDevEui(hr.CountDeviceFramesPerDevEuiRequest) returns (hr.CountDeviceFramesPerDevEuiResponse) {
        option (google.api.http) = {
            get: "/api/dataexport/devices/count_frames"
        };
    }     
}

message DataExportRequest {
    // Organization ID.
    int64 org_id = 1;

    // network_server id
    int64 ns_id = 2;
}

message StreamResponse {
    oneof row {
        uint32 current = 1;
        uint32 total = 2;
    }

    bytes chunk = 3;
}