/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.api.DeviceQueueItem', null, global);
goog.exportSymbol('proto.api.EnqueueDeviceQueueActilityItemRequest', null, global);
goog.exportSymbol('proto.api.EnqueueDeviceQueueActilityItemResponse', null, global);
goog.exportSymbol('proto.api.EnqueueDeviceQueueItemRequest', null, global);
goog.exportSymbol('proto.api.EnqueueDeviceQueueItemResponse', null, global);
goog.exportSymbol('proto.api.FlushDeviceQueueRequest', null, global);
goog.exportSymbol('proto.api.GetNextDownlinkFCntRequest', null, global);
goog.exportSymbol('proto.api.GetNextDownlinkFCntResponse', null, global);
goog.exportSymbol('proto.api.ListDeviceQueueItemsRequest', null, global);
goog.exportSymbol('proto.api.ListDeviceQueueItemsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeviceQueueItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeviceQueueItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeviceQueueItem.displayName = 'proto.api.DeviceQueueItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeviceQueueItem.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeviceQueueItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeviceQueueItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeviceQueueItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui(),
    confirmed: msg.getConfirmed(),
    fCnt: msg.getFCnt(),
    fPort: msg.getFPort(),
    data: msg.getData_asB64(),
    jsonObject: msg.getJsonObject(),
    ttl: msg.getTtl()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeviceQueueItem}
 */
proto.api.DeviceQueueItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeviceQueueItem;
  return proto.api.DeviceQueueItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeviceQueueItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeviceQueueItem}
 */
proto.api.DeviceQueueItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFPort(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonObject(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeviceQueueItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeviceQueueItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeviceQueueItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeviceQueueItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getConfirmed();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = this.getFPort();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = this.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = this.getJsonObject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getTtl();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeviceQueueItem} The clone.
 */
proto.api.DeviceQueueItem.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeviceQueueItem} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.DeviceQueueItem.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.DeviceQueueItem.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool confirmed = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.DeviceQueueItem.prototype.getConfirmed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.api.DeviceQueueItem.prototype.setConfirmed = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 f_cnt = 6;
 * @return {number}
 */
proto.api.DeviceQueueItem.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.api.DeviceQueueItem.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint32 f_port = 3;
 * @return {number}
 */
proto.api.DeviceQueueItem.prototype.getFPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.DeviceQueueItem.prototype.setFPort = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bytes data = 4;
 * @return {!(string|Uint8Array)}
 */
proto.api.DeviceQueueItem.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/**
 * optional bytes data = 4;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.api.DeviceQueueItem.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.api.DeviceQueueItem.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value  */
proto.api.DeviceQueueItem.prototype.setData = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string json_object = 5;
 * @return {string}
 */
proto.api.DeviceQueueItem.prototype.getJsonObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.DeviceQueueItem.prototype.setJsonObject = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint32 ttl = 7;
 * @return {number}
 */
proto.api.DeviceQueueItem.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.api.DeviceQueueItem.prototype.setTtl = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueDeviceQueueItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueDeviceQueueItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueDeviceQueueItemRequest.displayName = 'proto.api.EnqueueDeviceQueueItemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueDeviceQueueItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueDeviceQueueItemRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceQueueItem: (f = msg.getDeviceQueueItem()) && proto.api.DeviceQueueItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueDeviceQueueItemRequest}
 */
proto.api.EnqueueDeviceQueueItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueDeviceQueueItemRequest;
  return proto.api.EnqueueDeviceQueueItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueDeviceQueueItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueDeviceQueueItemRequest}
 */
proto.api.EnqueueDeviceQueueItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DeviceQueueItem;
      reader.readMessage(value,proto.api.DeviceQueueItem.deserializeBinaryFromReader);
      msg.setDeviceQueueItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueDeviceQueueItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueItemRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeviceQueueItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.DeviceQueueItem.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueDeviceQueueItemRequest} The clone.
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueDeviceQueueItemRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional DeviceQueueItem device_queue_item = 1;
 * @return {proto.api.DeviceQueueItem}
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.getDeviceQueueItem = function() {
  return /** @type{proto.api.DeviceQueueItem} */ (
    jspb.Message.getWrapperField(this, proto.api.DeviceQueueItem, 1));
};


/** @param {proto.api.DeviceQueueItem|undefined} value  */
proto.api.EnqueueDeviceQueueItemRequest.prototype.setDeviceQueueItem = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EnqueueDeviceQueueItemRequest.prototype.clearDeviceQueueItem = function() {
  this.setDeviceQueueItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.EnqueueDeviceQueueItemRequest.prototype.hasDeviceQueueItem = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueDeviceQueueItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueDeviceQueueItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueDeviceQueueItemResponse.displayName = 'proto.api.EnqueueDeviceQueueItemResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueDeviceQueueItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueDeviceQueueItemResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fCnt: msg.getFCnt()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueDeviceQueueItemResponse}
 */
proto.api.EnqueueDeviceQueueItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueDeviceQueueItemResponse;
  return proto.api.EnqueueDeviceQueueItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueDeviceQueueItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueDeviceQueueItemResponse}
 */
proto.api.EnqueueDeviceQueueItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueDeviceQueueItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueItemResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueDeviceQueueItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueItemResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueDeviceQueueItemResponse} The clone.
 */
proto.api.EnqueueDeviceQueueItemResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueDeviceQueueItemResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 f_cnt = 1;
 * @return {number}
 */
proto.api.EnqueueDeviceQueueItemResponse.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.EnqueueDeviceQueueItemResponse.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FlushDeviceQueueRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FlushDeviceQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.FlushDeviceQueueRequest.displayName = 'proto.api.FlushDeviceQueueRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FlushDeviceQueueRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FlushDeviceQueueRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FlushDeviceQueueRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.FlushDeviceQueueRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FlushDeviceQueueRequest}
 */
proto.api.FlushDeviceQueueRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FlushDeviceQueueRequest;
  return proto.api.FlushDeviceQueueRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FlushDeviceQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FlushDeviceQueueRequest}
 */
proto.api.FlushDeviceQueueRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.FlushDeviceQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.FlushDeviceQueueRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FlushDeviceQueueRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.FlushDeviceQueueRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.FlushDeviceQueueRequest} The clone.
 */
proto.api.FlushDeviceQueueRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.FlushDeviceQueueRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.FlushDeviceQueueRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.FlushDeviceQueueRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListDeviceQueueItemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListDeviceQueueItemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListDeviceQueueItemsRequest.displayName = 'proto.api.ListDeviceQueueItemsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListDeviceQueueItemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListDeviceQueueItemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListDeviceQueueItemsRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListDeviceQueueItemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui(),
    countOnly: msg.getCountOnly()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListDeviceQueueItemsRequest}
 */
proto.api.ListDeviceQueueItemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListDeviceQueueItemsRequest;
  return proto.api.ListDeviceQueueItemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListDeviceQueueItemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListDeviceQueueItemsRequest}
 */
proto.api.ListDeviceQueueItemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCountOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListDeviceQueueItemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListDeviceQueueItemsRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListDeviceQueueItemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListDeviceQueueItemsRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getCountOnly();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListDeviceQueueItemsRequest} The clone.
 */
proto.api.ListDeviceQueueItemsRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListDeviceQueueItemsRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.ListDeviceQueueItemsRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.ListDeviceQueueItemsRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool count_only = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.ListDeviceQueueItemsRequest.prototype.getCountOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.api.ListDeviceQueueItemsRequest.prototype.setCountOnly = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListDeviceQueueItemsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListDeviceQueueItemsResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListDeviceQueueItemsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListDeviceQueueItemsResponse.displayName = 'proto.api.ListDeviceQueueItemsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListDeviceQueueItemsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListDeviceQueueItemsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListDeviceQueueItemsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListDeviceQueueItemsResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListDeviceQueueItemsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceQueueItemsList: jspb.Message.toObjectList(msg.getDeviceQueueItemsList(),
    proto.api.DeviceQueueItem.toObject, includeInstance),
    totalCount: msg.getTotalCount()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListDeviceQueueItemsResponse}
 */
proto.api.ListDeviceQueueItemsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListDeviceQueueItemsResponse;
  return proto.api.ListDeviceQueueItemsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListDeviceQueueItemsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListDeviceQueueItemsResponse}
 */
proto.api.ListDeviceQueueItemsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.DeviceQueueItem;
      reader.readMessage(value,proto.api.DeviceQueueItem.deserializeBinaryFromReader);
      msg.getDeviceQueueItemsList().push(value);
      msg.setDeviceQueueItemsList(msg.getDeviceQueueItemsList());
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListDeviceQueueItemsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListDeviceQueueItemsResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListDeviceQueueItemsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListDeviceQueueItemsResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDeviceQueueItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.DeviceQueueItem.serializeBinaryToWriter
    );
  }
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListDeviceQueueItemsResponse} The clone.
 */
proto.api.ListDeviceQueueItemsResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListDeviceQueueItemsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated DeviceQueueItem device_queue_items = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.DeviceQueueItem>}
 */
proto.api.ListDeviceQueueItemsResponse.prototype.getDeviceQueueItemsList = function() {
  return /** @type{!Array.<!proto.api.DeviceQueueItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.DeviceQueueItem, 1));
};


/** @param {Array.<!proto.api.DeviceQueueItem>} value  */
proto.api.ListDeviceQueueItemsResponse.prototype.setDeviceQueueItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.api.ListDeviceQueueItemsResponse.prototype.clearDeviceQueueItemsList = function() {
  this.setDeviceQueueItemsList([]);
};


/**
 * optional uint32 total_count = 2;
 * @return {number}
 */
proto.api.ListDeviceQueueItemsResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.ListDeviceQueueItemsResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueDeviceQueueActilityItemRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueDeviceQueueActilityItemRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueDeviceQueueActilityItemRequest.displayName = 'proto.api.EnqueueDeviceQueueActilityItemRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueDeviceQueueActilityItemRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueDeviceQueueActilityItemRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui(),
    confirmDownlink: msg.getConfirmDownlink(),
    flushDownlinkQueue: msg.getFlushDownlinkQueue(),
    payloadHex: msg.getPayloadHex(),
    targetPorts: msg.getTargetPorts(),
    fCnt: msg.getFCnt(),
    ttl: msg.getTtl()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemRequest}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueDeviceQueueActilityItemRequest;
  return proto.api.EnqueueDeviceQueueActilityItemRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueDeviceQueueActilityItemRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemRequest}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmDownlink(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushDownlinkQueue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadHex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetPorts(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTtl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueDeviceQueueActilityItemRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getConfirmDownlink();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getFlushDownlinkQueue();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getPayloadHex();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getTargetPorts();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = this.getTtl();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemRequest} The clone.
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueDeviceQueueActilityItemRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool confirm_downlink = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getConfirmDownlink = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setConfirmDownlink = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool flush_downlink_queue = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getFlushDownlinkQueue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setFlushDownlinkQueue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string payload_hex = 4;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getPayloadHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setPayloadHex = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string target_ports = 5;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getTargetPorts = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setTargetPorts = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint32 f_cnt = 6;
 * @return {number}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 6, 0));
};


/** @param {number} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint32 ttl = 7;
 * @return {number}
 */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.getTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 7, 0));
};


/** @param {number} value  */
proto.api.EnqueueDeviceQueueActilityItemRequest.prototype.setTtl = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EnqueueDeviceQueueActilityItemResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EnqueueDeviceQueueActilityItemResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EnqueueDeviceQueueActilityItemResponse.displayName = 'proto.api.EnqueueDeviceQueueActilityItemResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EnqueueDeviceQueueActilityItemResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EnqueueDeviceQueueActilityItemResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    confirmDownlink: msg.getConfirmDownlink(),
    flushDownlinkQueue: msg.getFlushDownlinkQueue(),
    payloadHex: msg.getPayloadHex(),
    targetPorts: msg.getTargetPorts(),
    status: msg.getStatus()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemResponse}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EnqueueDeviceQueueActilityItemResponse;
  return proto.api.EnqueueDeviceQueueActilityItemResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EnqueueDeviceQueueActilityItemResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemResponse}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setConfirmDownlink(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFlushDownlinkQueue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayloadHex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTargetPorts(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.EnqueueDeviceQueueActilityItemResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getConfirmDownlink();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = this.getFlushDownlinkQueue();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = this.getPayloadHex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getTargetPorts();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.EnqueueDeviceQueueActilityItemResponse} The clone.
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.EnqueueDeviceQueueActilityItemResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool confirm_downlink = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.getConfirmDownlink = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.setConfirmDownlink = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bool flush_downlink_queue = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.getFlushDownlinkQueue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 2, false));
};


/** @param {boolean} value  */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.setFlushDownlinkQueue = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string payload_hex = 3;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.getPayloadHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.setPayloadHex = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string target_ports = 4;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.getTargetPorts = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.setTargetPorts = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.api.EnqueueDeviceQueueActilityItemResponse.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetNextDownlinkFCntRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetNextDownlinkFCntRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetNextDownlinkFCntRequest.displayName = 'proto.api.GetNextDownlinkFCntRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetNextDownlinkFCntRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetNextDownlinkFCntRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetNextDownlinkFCntRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetNextDownlinkFCntRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    devEui: msg.getDevEui()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetNextDownlinkFCntRequest}
 */
proto.api.GetNextDownlinkFCntRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetNextDownlinkFCntRequest;
  return proto.api.GetNextDownlinkFCntRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetNextDownlinkFCntRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetNextDownlinkFCntRequest}
 */
proto.api.GetNextDownlinkFCntRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDevEui(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetNextDownlinkFCntRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetNextDownlinkFCntRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetNextDownlinkFCntRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetNextDownlinkFCntRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getDevEui();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetNextDownlinkFCntRequest} The clone.
 */
proto.api.GetNextDownlinkFCntRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetNextDownlinkFCntRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string dev_eui = 1;
 * @return {string}
 */
proto.api.GetNextDownlinkFCntRequest.prototype.getDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GetNextDownlinkFCntRequest.prototype.setDevEui = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetNextDownlinkFCntResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetNextDownlinkFCntResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetNextDownlinkFCntResponse.displayName = 'proto.api.GetNextDownlinkFCntResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetNextDownlinkFCntResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetNextDownlinkFCntResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetNextDownlinkFCntResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetNextDownlinkFCntResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fCnt: msg.getFCnt()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetNextDownlinkFCntResponse}
 */
proto.api.GetNextDownlinkFCntResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetNextDownlinkFCntResponse;
  return proto.api.GetNextDownlinkFCntResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetNextDownlinkFCntResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetNextDownlinkFCntResponse}
 */
proto.api.GetNextDownlinkFCntResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFCnt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetNextDownlinkFCntResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetNextDownlinkFCntResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetNextDownlinkFCntResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetNextDownlinkFCntResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFCnt();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetNextDownlinkFCntResponse} The clone.
 */
proto.api.GetNextDownlinkFCntResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetNextDownlinkFCntResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 f_cnt = 1;
 * @return {number}
 */
proto.api.GetNextDownlinkFCntResponse.prototype.getFCnt = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetNextDownlinkFCntResponse.prototype.setFCnt = function(value) {
  jspb.Message.setField(this, 1, value);
};


goog.object.extend(exports, proto.api);
