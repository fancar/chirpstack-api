/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
var as_external_api_user_pb = require('../../../as/external/api/user_pb.js');
var handyrusty_hr_pb = require('../../../handyrusty/hr_pb.js');
goog.exportSymbol('proto.api.APIKey', null, global);
goog.exportSymbol('proto.api.Branding', null, global);
goog.exportSymbol('proto.api.CreateAPIKeyRequest', null, global);
goog.exportSymbol('proto.api.CreateAPIKeyResponse', null, global);
goog.exportSymbol('proto.api.DeleteAPIKeyRequest', null, global);
goog.exportSymbol('proto.api.GetDevicesSummaryRequest', null, global);
goog.exportSymbol('proto.api.GetDevicesSummaryResponse', null, global);
goog.exportSymbol('proto.api.GetGatewaysSummaryRequest', null, global);
goog.exportSymbol('proto.api.GetGatewaysSummaryResponse', null, global);
goog.exportSymbol('proto.api.GlobalSearchRequest', null, global);
goog.exportSymbol('proto.api.GlobalSearchResponse', null, global);
goog.exportSymbol('proto.api.GlobalSearchResult', null, global);
goog.exportSymbol('proto.api.ListAPIKeysRequest', null, global);
goog.exportSymbol('proto.api.ListAPIKeysResponse', null, global);
goog.exportSymbol('proto.api.LoginRequest', null, global);
goog.exportSymbol('proto.api.LoginResponse', null, global);
goog.exportSymbol('proto.api.OpenIDConnect', null, global);
goog.exportSymbol('proto.api.OpenIDConnectLoginRequest', null, global);
goog.exportSymbol('proto.api.OpenIDConnectLoginResponse', null, global);
goog.exportSymbol('proto.api.OrganizationLink', null, global);
goog.exportSymbol('proto.api.ProfileResponse', null, global);
goog.exportSymbol('proto.api.SettingsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.APIKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.APIKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.APIKey.displayName = 'proto.api.APIKey';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.APIKey.prototype.toObject = function(opt_includeInstance) {
  return proto.api.APIKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.APIKey} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.APIKey.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    isAdmin: msg.getIsAdmin(),
    organizationId: msg.getOrganizationId(),
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.APIKey}
 */
proto.api.APIKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.APIKey;
  return proto.api.APIKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.APIKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.APIKey}
 */
proto.api.APIKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.APIKey} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.APIKey.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.APIKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.APIKey.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getIsAdmin();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.APIKey} The clone.
 */
proto.api.APIKey.prototype.cloneMessage = function() {
  return /** @type {!proto.api.APIKey} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.APIKey.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.APIKey.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api.APIKey.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.APIKey.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_admin = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.APIKey.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.api.APIKey.prototype.setIsAdmin = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 organization_id = 4;
 * @return {number}
 */
proto.api.APIKey.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.APIKey.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 application_id = 5;
 * @return {number}
 */
proto.api.APIKey.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.APIKey.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateAPIKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateAPIKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateAPIKeyRequest.displayName = 'proto.api.CreateAPIKeyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateAPIKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateAPIKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateAPIKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateAPIKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    apiKey: (f = msg.getApiKey()) && proto.api.APIKey.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateAPIKeyRequest}
 */
proto.api.CreateAPIKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateAPIKeyRequest;
  return proto.api.CreateAPIKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateAPIKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateAPIKeyRequest}
 */
proto.api.CreateAPIKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.APIKey;
      reader.readMessage(value,proto.api.APIKey.deserializeBinaryFromReader);
      msg.setApiKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateAPIKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateAPIKeyRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateAPIKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateAPIKeyRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getApiKey();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.APIKey.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateAPIKeyRequest} The clone.
 */
proto.api.CreateAPIKeyRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateAPIKeyRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional APIKey api_key = 1;
 * @return {proto.api.APIKey}
 */
proto.api.CreateAPIKeyRequest.prototype.getApiKey = function() {
  return /** @type{proto.api.APIKey} */ (
    jspb.Message.getWrapperField(this, proto.api.APIKey, 1));
};


/** @param {proto.api.APIKey|undefined} value  */
proto.api.CreateAPIKeyRequest.prototype.setApiKey = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CreateAPIKeyRequest.prototype.clearApiKey = function() {
  this.setApiKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.CreateAPIKeyRequest.prototype.hasApiKey = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CreateAPIKeyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CreateAPIKeyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CreateAPIKeyResponse.displayName = 'proto.api.CreateAPIKeyResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CreateAPIKeyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CreateAPIKeyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CreateAPIKeyResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.CreateAPIKeyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    jwtToken: msg.getJwtToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CreateAPIKeyResponse}
 */
proto.api.CreateAPIKeyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CreateAPIKeyResponse;
  return proto.api.CreateAPIKeyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CreateAPIKeyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CreateAPIKeyResponse}
 */
proto.api.CreateAPIKeyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwtToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.CreateAPIKeyResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateAPIKeyResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CreateAPIKeyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.CreateAPIKeyResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getJwtToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.CreateAPIKeyResponse} The clone.
 */
proto.api.CreateAPIKeyResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.CreateAPIKeyResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.CreateAPIKeyResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.CreateAPIKeyResponse.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string jwt_token = 2;
 * @return {string}
 */
proto.api.CreateAPIKeyResponse.prototype.getJwtToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.CreateAPIKeyResponse.prototype.setJwtToken = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DeleteAPIKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DeleteAPIKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DeleteAPIKeyRequest.displayName = 'proto.api.DeleteAPIKeyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DeleteAPIKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DeleteAPIKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DeleteAPIKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.DeleteAPIKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DeleteAPIKeyRequest}
 */
proto.api.DeleteAPIKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DeleteAPIKeyRequest;
  return proto.api.DeleteAPIKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DeleteAPIKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DeleteAPIKeyRequest}
 */
proto.api.DeleteAPIKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.DeleteAPIKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteAPIKeyRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DeleteAPIKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.DeleteAPIKeyRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.DeleteAPIKeyRequest} The clone.
 */
proto.api.DeleteAPIKeyRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.DeleteAPIKeyRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api.DeleteAPIKeyRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.DeleteAPIKeyRequest.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListAPIKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ListAPIKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListAPIKeysRequest.displayName = 'proto.api.ListAPIKeysRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListAPIKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListAPIKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListAPIKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListAPIKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: msg.getLimit(),
    offset: msg.getOffset(),
    isAdmin: msg.getIsAdmin(),
    organizationId: msg.getOrganizationId(),
    applicationId: msg.getApplicationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListAPIKeysRequest}
 */
proto.api.ListAPIKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListAPIKeysRequest;
  return proto.api.ListAPIKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListAPIKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListAPIKeysRequest}
 */
proto.api.ListAPIKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListAPIKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListAPIKeysRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListAPIKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListAPIKeysRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getIsAdmin();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListAPIKeysRequest} The clone.
 */
proto.api.ListAPIKeysRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListAPIKeysRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 limit = 1;
 * @return {number}
 */
proto.api.ListAPIKeysRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListAPIKeysRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 offset = 2;
 * @return {number}
 */
proto.api.ListAPIKeysRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.ListAPIKeysRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_admin = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.ListAPIKeysRequest.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.api.ListAPIKeysRequest.prototype.setIsAdmin = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int64 organization_id = 4;
 * @return {number}
 */
proto.api.ListAPIKeysRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.ListAPIKeysRequest.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 application_id = 5;
 * @return {number}
 */
proto.api.ListAPIKeysRequest.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.ListAPIKeysRequest.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ListAPIKeysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ListAPIKeysResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ListAPIKeysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ListAPIKeysResponse.displayName = 'proto.api.ListAPIKeysResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ListAPIKeysResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ListAPIKeysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ListAPIKeysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ListAPIKeysResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ListAPIKeysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalCount: msg.getTotalCount(),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.APIKey.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ListAPIKeysResponse}
 */
proto.api.ListAPIKeysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ListAPIKeysResponse;
  return proto.api.ListAPIKeysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ListAPIKeysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ListAPIKeysResponse}
 */
proto.api.ListAPIKeysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalCount(value);
      break;
    case 2:
      var value = new proto.api.APIKey;
      reader.readMessage(value,proto.api.APIKey.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ListAPIKeysResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListAPIKeysResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ListAPIKeysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ListAPIKeysResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getTotalCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.APIKey.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ListAPIKeysResponse} The clone.
 */
proto.api.ListAPIKeysResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ListAPIKeysResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 total_count = 1;
 * @return {number}
 */
proto.api.ListAPIKeysResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.ListAPIKeysResponse.prototype.setTotalCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * repeated APIKey result = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.APIKey>}
 */
proto.api.ListAPIKeysResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.APIKey>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.APIKey, 2));
};


/** @param {Array.<!proto.api.APIKey>} value  */
proto.api.ListAPIKeysResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


proto.api.ListAPIKeysResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OrganizationLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OrganizationLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OrganizationLink.displayName = 'proto.api.OrganizationLink';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OrganizationLink.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OrganizationLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OrganizationLink} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.OrganizationLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: msg.getOrganizationId(),
    organizationName: msg.getOrganizationName(),
    isAdmin: msg.getIsAdmin(),
    isDeviceAdmin: msg.getIsDeviceAdmin(),
    isGatewayAdmin: msg.getIsGatewayAdmin(),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OrganizationLink}
 */
proto.api.OrganizationLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OrganizationLink;
  return proto.api.OrganizationLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OrganizationLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OrganizationLink}
 */
proto.api.OrganizationLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationName(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsDeviceAdmin(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGatewayAdmin(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.OrganizationLink} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OrganizationLink.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OrganizationLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OrganizationLink.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = this.getOrganizationName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getIsAdmin();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = this.getIsDeviceAdmin();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = this.getIsGatewayAdmin();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = this.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = this.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.OrganizationLink} The clone.
 */
proto.api.OrganizationLink.prototype.cloneMessage = function() {
  return /** @type {!proto.api.OrganizationLink} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 organization_id = 1;
 * @return {number}
 */
proto.api.OrganizationLink.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.OrganizationLink.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string organization_name = 2;
 * @return {string}
 */
proto.api.OrganizationLink.prototype.getOrganizationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.OrganizationLink.prototype.setOrganizationName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional bool is_admin = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.OrganizationLink.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 3, false));
};


/** @param {boolean} value  */
proto.api.OrganizationLink.prototype.setIsAdmin = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional bool is_device_admin = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.OrganizationLink.prototype.getIsDeviceAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 6, false));
};


/** @param {boolean} value  */
proto.api.OrganizationLink.prototype.setIsDeviceAdmin = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional bool is_gateway_admin = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.OrganizationLink.prototype.getIsGatewayAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 7, false));
};


/** @param {boolean} value  */
proto.api.OrganizationLink.prototype.setIsGatewayAdmin = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 4;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.OrganizationLink.prototype.getCreatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.OrganizationLink.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.OrganizationLink.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.OrganizationLink.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 5;
 * @return {proto.google.protobuf.Timestamp}
 */
proto.api.OrganizationLink.prototype.getUpdatedAt = function() {
  return /** @type{proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {proto.google.protobuf.Timestamp|undefined} value  */
proto.api.OrganizationLink.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.OrganizationLink.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.OrganizationLink.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.LoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.LoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.LoginRequest.displayName = 'proto.api.LoginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.LoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.LoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.LoginRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.LoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: msg.getEmail(),
    password: msg.getPassword()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.LoginRequest}
 */
proto.api.LoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.LoginRequest;
  return proto.api.LoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.LoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.LoginRequest}
 */
proto.api.LoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.LoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.LoginRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.LoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.LoginRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.LoginRequest} The clone.
 */
proto.api.LoginRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.LoginRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.api.LoginRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.LoginRequest.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string password = 2;
 * @return {string}
 */
proto.api.LoginRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.LoginRequest.prototype.setPassword = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.LoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.LoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.LoginResponse.displayName = 'proto.api.LoginResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.LoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.LoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.LoginResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.LoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwt: msg.getJwt()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.LoginResponse}
 */
proto.api.LoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.LoginResponse;
  return proto.api.LoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.LoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.LoginResponse}
 */
proto.api.LoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.LoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.LoginResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.LoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.LoginResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getJwt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.LoginResponse} The clone.
 */
proto.api.LoginResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.LoginResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string jwt = 1;
 * @return {string}
 */
proto.api.LoginResponse.prototype.getJwt = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.LoginResponse.prototype.setJwt = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.ProfileResponse.repeatedFields_, null);
};
goog.inherits(proto.api.ProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ProfileResponse.displayName = 'proto.api.ProfileResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.ProfileResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.ProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && as_external_api_user_pb.User.toObject(includeInstance, f),
    organizationsList: jspb.Message.toObjectList(msg.getOrganizationsList(),
    proto.api.OrganizationLink.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ProfileResponse}
 */
proto.api.ProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ProfileResponse;
  return proto.api.ProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ProfileResponse}
 */
proto.api.ProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new as_external_api_user_pb.User;
      reader.readMessage(value,as_external_api_user_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 3:
      var value = new proto.api.OrganizationLink;
      reader.readMessage(value,proto.api.OrganizationLink.deserializeBinaryFromReader);
      msg.getOrganizationsList().push(value);
      msg.setOrganizationsList(msg.getOrganizationsList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.ProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ProfileResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.ProfileResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      as_external_api_user_pb.User.serializeBinaryToWriter
    );
  }
  f = this.getOrganizationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api.OrganizationLink.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.ProfileResponse} The clone.
 */
proto.api.ProfileResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.ProfileResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional User user = 1;
 * @return {proto.api.User}
 */
proto.api.ProfileResponse.prototype.getUser = function() {
  return /** @type{proto.api.User} */ (
    jspb.Message.getWrapperField(this, as_external_api_user_pb.User, 1));
};


/** @param {proto.api.User|undefined} value  */
proto.api.ProfileResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ProfileResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.ProfileResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated OrganizationLink organizations = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.OrganizationLink>}
 */
proto.api.ProfileResponse.prototype.getOrganizationsList = function() {
  return /** @type{!Array.<!proto.api.OrganizationLink>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.OrganizationLink, 3));
};


/** @param {Array.<!proto.api.OrganizationLink>} value  */
proto.api.ProfileResponse.prototype.setOrganizationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


proto.api.ProfileResponse.prototype.clearOrganizationsList = function() {
  this.setOrganizationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GlobalSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GlobalSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GlobalSearchRequest.displayName = 'proto.api.GlobalSearchRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GlobalSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GlobalSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GlobalSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GlobalSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    search: msg.getSearch(),
    limit: msg.getLimit(),
    offset: msg.getOffset()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GlobalSearchRequest}
 */
proto.api.GlobalSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GlobalSearchRequest;
  return proto.api.GlobalSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GlobalSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GlobalSearchRequest}
 */
proto.api.GlobalSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GlobalSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GlobalSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSearch();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getLimit();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = this.getOffset();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GlobalSearchRequest} The clone.
 */
proto.api.GlobalSearchRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GlobalSearchRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string search = 1;
 * @return {string}
 */
proto.api.GlobalSearchRequest.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchRequest.prototype.setSearch = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int64 limit = 2;
 * @return {number}
 */
proto.api.GlobalSearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.GlobalSearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 offset = 3;
 * @return {number}
 */
proto.api.GlobalSearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.GlobalSearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GlobalSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.GlobalSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.api.GlobalSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GlobalSearchResponse.displayName = 'proto.api.GlobalSearchResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.GlobalSearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GlobalSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GlobalSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GlobalSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GlobalSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.api.GlobalSearchResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GlobalSearchResponse}
 */
proto.api.GlobalSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GlobalSearchResponse;
  return proto.api.GlobalSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GlobalSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GlobalSearchResponse}
 */
proto.api.GlobalSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.GlobalSearchResult;
      reader.readMessage(value,proto.api.GlobalSearchResult.deserializeBinaryFromReader);
      msg.getResultList().push(value);
      msg.setResultList(msg.getResultList());
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GlobalSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GlobalSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.GlobalSearchResult.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GlobalSearchResponse} The clone.
 */
proto.api.GlobalSearchResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GlobalSearchResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated GlobalSearchResult result = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.api.GlobalSearchResult>}
 */
proto.api.GlobalSearchResponse.prototype.getResultList = function() {
  return /** @type{!Array.<!proto.api.GlobalSearchResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.GlobalSearchResult, 1));
};


/** @param {Array.<!proto.api.GlobalSearchResult>} value  */
proto.api.GlobalSearchResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.api.GlobalSearchResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GlobalSearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GlobalSearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GlobalSearchResult.displayName = 'proto.api.GlobalSearchResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GlobalSearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GlobalSearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GlobalSearchResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GlobalSearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: msg.getKind(),
    score: msg.getScore(),
    organizationId: msg.getOrganizationId(),
    organizationName: msg.getOrganizationName(),
    applicationId: msg.getApplicationId(),
    applicationName: msg.getApplicationName(),
    deviceDevEui: msg.getDeviceDevEui(),
    deviceName: msg.getDeviceName(),
    gatewayMac: msg.getGatewayMac(),
    gatewayName: msg.getGatewayName()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GlobalSearchResult}
 */
proto.api.GlobalSearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GlobalSearchResult;
  return proto.api.GlobalSearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GlobalSearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GlobalSearchResult}
 */
proto.api.GlobalSearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrganizationName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplicationId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceDevEui(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayMac(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setGatewayName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GlobalSearchResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchResult.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GlobalSearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GlobalSearchResult.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getKind();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = this.getOrganizationName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getApplicationId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = this.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getDeviceDevEui();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getGatewayMac();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = this.getGatewayName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GlobalSearchResult} The clone.
 */
proto.api.GlobalSearchResult.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GlobalSearchResult} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string kind = 1;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getKind = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setKind = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional float score = 2;
 * @return {number}
 */
proto.api.GlobalSearchResult.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.GlobalSearchResult.prototype.setScore = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int64 organization_id = 3;
 * @return {number}
 */
proto.api.GlobalSearchResult.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.GlobalSearchResult.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string organization_name = 4;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getOrganizationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setOrganizationName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional int64 application_id = 5;
 * @return {number}
 */
proto.api.GlobalSearchResult.prototype.getApplicationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 5, 0));
};


/** @param {number} value  */
proto.api.GlobalSearchResult.prototype.setApplicationId = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string application_name = 6;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 6, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setApplicationName = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string device_dev_eui = 7;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getDeviceDevEui = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 7, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setDeviceDevEui = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string device_name = 8;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 8, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setDeviceName = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string gateway_mac = 9;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getGatewayMac = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 9, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setGatewayMac = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string gateway_name = 10;
 * @return {string}
 */
proto.api.GlobalSearchResult.prototype.getGatewayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 10, ""));
};


/** @param {string} value  */
proto.api.GlobalSearchResult.prototype.setGatewayName = function(value) {
  jspb.Message.setField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SettingsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SettingsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SettingsResponse.displayName = 'proto.api.SettingsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SettingsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SettingsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SettingsResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.SettingsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    branding: (f = msg.getBranding()) && proto.api.Branding.toObject(includeInstance, f),
    openidConnect: (f = msg.getOpenidConnect()) && proto.api.OpenIDConnect.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SettingsResponse}
 */
proto.api.SettingsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SettingsResponse;
  return proto.api.SettingsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SettingsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SettingsResponse}
 */
proto.api.SettingsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = new proto.api.Branding;
      reader.readMessage(value,proto.api.Branding.deserializeBinaryFromReader);
      msg.setBranding(value);
      break;
    case 3:
      var value = new proto.api.OpenIDConnect;
      reader.readMessage(value,proto.api.OpenIDConnect.deserializeBinaryFromReader);
      msg.setOpenidConnect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.SettingsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.SettingsResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SettingsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.SettingsResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getBranding();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.Branding.serializeBinaryToWriter
    );
  }
  f = this.getOpenidConnect();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.OpenIDConnect.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.SettingsResponse} The clone.
 */
proto.api.SettingsResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.SettingsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Branding branding = 2;
 * @return {proto.api.Branding}
 */
proto.api.SettingsResponse.prototype.getBranding = function() {
  return /** @type{proto.api.Branding} */ (
    jspb.Message.getWrapperField(this, proto.api.Branding, 2));
};


/** @param {proto.api.Branding|undefined} value  */
proto.api.SettingsResponse.prototype.setBranding = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SettingsResponse.prototype.clearBranding = function() {
  this.setBranding(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.SettingsResponse.prototype.hasBranding = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OpenIDConnect openid_connect = 3;
 * @return {proto.api.OpenIDConnect}
 */
proto.api.SettingsResponse.prototype.getOpenidConnect = function() {
  return /** @type{proto.api.OpenIDConnect} */ (
    jspb.Message.getWrapperField(this, proto.api.OpenIDConnect, 3));
};


/** @param {proto.api.OpenIDConnect|undefined} value  */
proto.api.SettingsResponse.prototype.setOpenidConnect = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SettingsResponse.prototype.clearOpenidConnect = function() {
  this.setOpenidConnect(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.api.SettingsResponse.prototype.hasOpenidConnect = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Branding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Branding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Branding.displayName = 'proto.api.Branding';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Branding.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Branding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Branding} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.Branding.toObject = function(includeInstance, msg) {
  var f, obj = {
    registration: msg.getRegistration(),
    footer: msg.getFooter()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Branding}
 */
proto.api.Branding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Branding;
  return proto.api.Branding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Branding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Branding}
 */
proto.api.Branding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegistration(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFooter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.Branding} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.Branding.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Branding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.Branding.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRegistration();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getFooter();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.Branding} The clone.
 */
proto.api.Branding.prototype.cloneMessage = function() {
  return /** @type {!proto.api.Branding} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string registration = 1;
 * @return {string}
 */
proto.api.Branding.prototype.getRegistration = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.Branding.prototype.setRegistration = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string footer = 2;
 * @return {string}
 */
proto.api.Branding.prototype.getFooter = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.Branding.prototype.setFooter = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OpenIDConnect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OpenIDConnect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OpenIDConnect.displayName = 'proto.api.OpenIDConnect';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OpenIDConnect.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OpenIDConnect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OpenIDConnect} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.OpenIDConnect.toObject = function(includeInstance, msg) {
  var f, obj = {
    enabled: msg.getEnabled(),
    loginUrl: msg.getLoginUrl(),
    loginLabel: msg.getLoginLabel(),
    logoutUrl: msg.getLogoutUrl()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OpenIDConnect}
 */
proto.api.OpenIDConnect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OpenIDConnect;
  return proto.api.OpenIDConnect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OpenIDConnect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OpenIDConnect}
 */
proto.api.OpenIDConnect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLoginLabel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoutUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.OpenIDConnect} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnect.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OpenIDConnect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnect.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getEnabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = this.getLoginUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getLoginLabel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getLogoutUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.OpenIDConnect} The clone.
 */
proto.api.OpenIDConnect.prototype.cloneMessage = function() {
  return /** @type {!proto.api.OpenIDConnect} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional bool enabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.OpenIDConnect.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldProto3(this, 1, false));
};


/** @param {boolean} value  */
proto.api.OpenIDConnect.prototype.setEnabled = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string login_url = 2;
 * @return {string}
 */
proto.api.OpenIDConnect.prototype.getLoginUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnect.prototype.setLoginUrl = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string login_label = 3;
 * @return {string}
 */
proto.api.OpenIDConnect.prototype.getLoginLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnect.prototype.setLoginLabel = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string logout_url = 4;
 * @return {string}
 */
proto.api.OpenIDConnect.prototype.getLogoutUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnect.prototype.setLogoutUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OpenIDConnectLoginRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OpenIDConnectLoginRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OpenIDConnectLoginRequest.displayName = 'proto.api.OpenIDConnectLoginRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OpenIDConnectLoginRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OpenIDConnectLoginRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OpenIDConnectLoginRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.OpenIDConnectLoginRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: msg.getCode(),
    state: msg.getState()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OpenIDConnectLoginRequest}
 */
proto.api.OpenIDConnectLoginRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OpenIDConnectLoginRequest;
  return proto.api.OpenIDConnectLoginRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OpenIDConnectLoginRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OpenIDConnectLoginRequest}
 */
proto.api.OpenIDConnectLoginRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.OpenIDConnectLoginRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnectLoginRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OpenIDConnectLoginRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnectLoginRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getState();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.OpenIDConnectLoginRequest} The clone.
 */
proto.api.OpenIDConnectLoginRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.OpenIDConnectLoginRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.api.OpenIDConnectLoginRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnectLoginRequest.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string state = 2;
 * @return {string}
 */
proto.api.OpenIDConnectLoginRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnectLoginRequest.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OpenIDConnectLoginResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OpenIDConnectLoginResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OpenIDConnectLoginResponse.displayName = 'proto.api.OpenIDConnectLoginResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OpenIDConnectLoginResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OpenIDConnectLoginResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OpenIDConnectLoginResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.OpenIDConnectLoginResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwtToken: msg.getJwtToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OpenIDConnectLoginResponse}
 */
proto.api.OpenIDConnectLoginResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OpenIDConnectLoginResponse;
  return proto.api.OpenIDConnectLoginResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OpenIDConnectLoginResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OpenIDConnectLoginResponse}
 */
proto.api.OpenIDConnectLoginResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwtToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.OpenIDConnectLoginResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnectLoginResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OpenIDConnectLoginResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.OpenIDConnectLoginResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getJwtToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.OpenIDConnectLoginResponse} The clone.
 */
proto.api.OpenIDConnectLoginResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.OpenIDConnectLoginResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string jwt_token = 1;
 * @return {string}
 */
proto.api.OpenIDConnectLoginResponse.prototype.getJwtToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.api.OpenIDConnectLoginResponse.prototype.setJwtToken = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetDevicesSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetDevicesSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetDevicesSummaryRequest.displayName = 'proto.api.GetDevicesSummaryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetDevicesSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetDevicesSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetDevicesSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetDevicesSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: msg.getOrganizationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetDevicesSummaryRequest}
 */
proto.api.GetDevicesSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetDevicesSummaryRequest;
  return proto.api.GetDevicesSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetDevicesSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetDevicesSummaryRequest}
 */
proto.api.GetDevicesSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetDevicesSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetDevicesSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetDevicesSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetDevicesSummaryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetDevicesSummaryRequest} The clone.
 */
proto.api.GetDevicesSummaryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetDevicesSummaryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 organization_id = 1;
 * @return {number}
 */
proto.api.GetDevicesSummaryRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetDevicesSummaryRequest.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetDevicesSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetDevicesSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetDevicesSummaryResponse.displayName = 'proto.api.GetDevicesSummaryResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetDevicesSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetDevicesSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetDevicesSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetDevicesSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    activeCount: msg.getActiveCount(),
    inactiveCount: msg.getInactiveCount(),
    drCountMap: (f = msg.getDrCountMap(true)) ? f.toArray() : [],
    neverSeenCount: msg.getNeverSeenCount()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetDevicesSummaryResponse}
 */
proto.api.GetDevicesSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetDevicesSummaryResponse;
  return proto.api.GetDevicesSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetDevicesSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetDevicesSummaryResponse}
 */
proto.api.GetDevicesSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setActiveCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInactiveCount(value);
      break;
    case 3:
      var value = msg.getDrCountMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint32, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNeverSeenCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetDevicesSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetDevicesSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetDevicesSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetDevicesSummaryResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getActiveCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getInactiveCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = this.getDrCountMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeUint32, jspb.BinaryWriter.prototype.writeUint32);
  }
  f = this.getNeverSeenCount();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetDevicesSummaryResponse} The clone.
 */
proto.api.GetDevicesSummaryResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetDevicesSummaryResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 active_count = 1;
 * @return {number}
 */
proto.api.GetDevicesSummaryResponse.prototype.getActiveCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetDevicesSummaryResponse.prototype.setActiveCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 inactive_count = 2;
 * @return {number}
 */
proto.api.GetDevicesSummaryResponse.prototype.getInactiveCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.GetDevicesSummaryResponse.prototype.setInactiveCount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * map<uint32, uint32> dr_count = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.api.GetDevicesSummaryResponse.prototype.getDrCountMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * optional uint32 never_seen_count = 4;
 * @return {number}
 */
proto.api.GetDevicesSummaryResponse.prototype.getNeverSeenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.api.GetDevicesSummaryResponse.prototype.setNeverSeenCount = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetGatewaysSummaryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetGatewaysSummaryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetGatewaysSummaryRequest.displayName = 'proto.api.GetGatewaysSummaryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetGatewaysSummaryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetGatewaysSummaryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetGatewaysSummaryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetGatewaysSummaryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    organizationId: msg.getOrganizationId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetGatewaysSummaryRequest}
 */
proto.api.GetGatewaysSummaryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetGatewaysSummaryRequest;
  return proto.api.GetGatewaysSummaryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetGatewaysSummaryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetGatewaysSummaryRequest}
 */
proto.api.GetGatewaysSummaryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOrganizationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetGatewaysSummaryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetGatewaysSummaryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetGatewaysSummaryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetGatewaysSummaryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getOrganizationId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetGatewaysSummaryRequest} The clone.
 */
proto.api.GetGatewaysSummaryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetGatewaysSummaryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int64 organization_id = 1;
 * @return {number}
 */
proto.api.GetGatewaysSummaryRequest.prototype.getOrganizationId = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetGatewaysSummaryRequest.prototype.setOrganizationId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetGatewaysSummaryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetGatewaysSummaryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetGatewaysSummaryResponse.displayName = 'proto.api.GetGatewaysSummaryResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetGatewaysSummaryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetGatewaysSummaryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetGatewaysSummaryResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.api.GetGatewaysSummaryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    activeCount: msg.getActiveCount(),
    inactiveCount: msg.getInactiveCount(),
    neverSeenCount: msg.getNeverSeenCount()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetGatewaysSummaryResponse}
 */
proto.api.GetGatewaysSummaryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetGatewaysSummaryResponse;
  return proto.api.GetGatewaysSummaryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetGatewaysSummaryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetGatewaysSummaryResponse}
 */
proto.api.GetGatewaysSummaryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setActiveCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInactiveCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNeverSeenCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.api.GetGatewaysSummaryResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetGatewaysSummaryResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetGatewaysSummaryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.api.GetGatewaysSummaryResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getActiveCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = this.getInactiveCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = this.getNeverSeenCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.api.GetGatewaysSummaryResponse} The clone.
 */
proto.api.GetGatewaysSummaryResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.api.GetGatewaysSummaryResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional uint32 active_count = 1;
 * @return {number}
 */
proto.api.GetGatewaysSummaryResponse.prototype.getActiveCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.api.GetGatewaysSummaryResponse.prototype.setActiveCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional uint32 inactive_count = 2;
 * @return {number}
 */
proto.api.GetGatewaysSummaryResponse.prototype.getInactiveCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.api.GetGatewaysSummaryResponse.prototype.setInactiveCount = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 never_seen_count = 3;
 * @return {number}
 */
proto.api.GetGatewaysSummaryResponse.prototype.getNeverSeenCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.api.GetGatewaysSummaryResponse.prototype.setNeverSeenCount = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.api);
