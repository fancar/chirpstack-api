# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chirpstack_api.as_pb.external.api import dataexport_pb2 as chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DataExportServiceStub(object):
    """DataExportService the service manages all data exports
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGateways = channel.unary_stream(
                '/api.DataExportService/GetGateways',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
                )
        self.GetUsers = channel.unary_stream(
                '/api.DataExportService/GetUsers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
                )
        self.GetDevices = channel.unary_stream(
                '/api.DataExportService/GetDevices',
                request_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
                )


class DataExportServiceServicer(object):
    """DataExportService the service manages all data exports
    """

    def GetGateways(self, request, context):
        """GetGateways Export gateways
        (!) websocket required! The endpoint does not work from a web-swagger.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """GetUsers Export users
        (!) websocket required! The endpoint does not work from a web-swagger.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevices(self, request, context):
        """GetDevices Export devices
        (!) websocket required! The endpoint does not work from a web-swagger.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataExportServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGateways': grpc.unary_stream_rpc_method_handler(
                    servicer.GetGateways,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.SerializeToString,
            ),
            'GetDevices': grpc.unary_stream_rpc_method_handler(
                    servicer.GetDevices,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.DataExportService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataExportService(object):
    """DataExportService the service manages all data exports
    """

    @staticmethod
    def GetGateways(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.DataExportService/GetGateways',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.DataExportService/GetUsers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.DataExportService/GetDevices',
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.DataExportRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_external_dot_api_dot_dataexport__pb2.StreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
