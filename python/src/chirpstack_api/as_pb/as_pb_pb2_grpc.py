# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chirpstack_api.as_pb import as_pb_pb2 as chirpstack__api_dot_as__pb_dot_as__pb__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ApplicationServerServiceStub(object):
    """ApplicationServerService is the service providing the application-server interface.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.HandleUplinkData = channel.unary_unary(
                '/as.ApplicationServerService/HandleUplinkData',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleUplinkDataRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HandleProprietaryUplink = channel.unary_unary(
                '/as.ApplicationServerService/HandleProprietaryUplink',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleProprietaryUplinkRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HandleError = channel.unary_unary(
                '/as.ApplicationServerService/HandleError',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleErrorRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HandleDownlinkACK = channel.unary_unary(
                '/as.ApplicationServerService/HandleDownlinkACK',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleDownlinkACKRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HandleGatewayStats = channel.unary_unary(
                '/as.ApplicationServerService/HandleGatewayStats',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleGatewayStatsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.HandleTxAck = channel.unary_unary(
                '/as.ApplicationServerService/HandleTxAck',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleTxAckRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetDeviceStatus = channel.unary_unary(
                '/as.ApplicationServerService/SetDeviceStatus',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceStatusRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetDeviceLocation = channel.unary_unary(
                '/as.ApplicationServerService/SetDeviceLocation',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceLocationRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetDevicesSummary = channel.unary_unary(
                '/as.ApplicationServerService/GetDevicesSummary',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryResponse.FromString,
                )
        self.GetGatewaysSummary = channel.unary_unary(
                '/as.ApplicationServerService/GetGatewaysSummary',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryResponse.FromString,
                )
        self.ListOrganisation = channel.unary_unary(
                '/as.ApplicationServerService/ListOrganisation',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationResponse.FromString,
                )
        self.GetOrgByDevEUI = channel.unary_unary(
                '/as.ApplicationServerService/GetOrgByDevEUI',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.FromString,
                )
        self.GetOrgIDByGwID = channel.unary_unary(
                '/as.ApplicationServerService/GetOrgIDByGwID',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgIDByGwIDRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.FromString,
                )
        self.GetDeviceAppSKey = channel.unary_unary(
                '/as.ApplicationServerService/GetDeviceAppSKey',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.FromString,
                )
        self.GetDeviceKeys = channel.unary_unary(
                '/as.ApplicationServerService/GetDeviceKeys',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceKeysResponse.FromString,
                )
        self.ReEncryptDeviceQueueItems = channel.unary_unary(
                '/as.ApplicationServerService/ReEncryptDeviceQueueItems',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsResponse.FromString,
                )
        self.StreamGatewayTaskResult = channel.stream_unary(
                '/as.ApplicationServerService/StreamGatewayTaskResult',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GatewayTaskResult.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetDictionary = channel.unary_unary(
                '/as.ApplicationServerService/GetDictionary',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryResponse.FromString,
                )
        self.GetGWMetaData = channel.unary_unary(
                '/as.ApplicationServerService/GetGWMetaData',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGWMetaDataResponse.FromString,
                )
        self.GetServiceProfile = channel.unary_unary(
                '/as.ApplicationServerService/GetServiceProfile',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileResponse.FromString,
                )
        self.CreateServiceProfile = channel.unary_unary(
                '/as.ApplicationServerService/CreateServiceProfile',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileResponse.FromString,
                )
        self.UpdateSPonDevice = channel.unary_unary(
                '/as.ApplicationServerService/UpdateSPonDevice',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.UpdateSPonDeviceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.NewAppSKey = channel.unary_unary(
                '/as.ApplicationServerService/NewAppSKey',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.NewAppSKeyRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.FromString,
                )
        self.CheckJwt = channel.unary_unary(
                '/as.ApplicationServerService/CheckJwt',
                request_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtRequest.SerializeToString,
                response_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtResponse.FromString,
                )


class ApplicationServerServiceServicer(object):
    """ApplicationServerService is the service providing the application-server interface.
    """

    def HandleUplinkData(self, request, context):
        """HandleUplinkData handles uplink data received from an end-device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleProprietaryUplink(self, request, context):
        """HandleProprietaryUplink handles proprietary uplink payloads.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleError(self, request, context):
        """HandleError handles an error message.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleDownlinkACK(self, request, context):
        """HandleDownlinkACK handles a downlink ACK or nACK response.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleGatewayStats(self, request, context):
        """HandleGatewayStats handles the given gateway stats.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HandleTxAck(self, request, context):
        """HandleTXACK handles the TX acknowledgement.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceStatus(self, request, context):
        """SetDeviceStatus updates the device-status for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceLocation(self, request, context):
        """SetDeviceLocation updates the device-location for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevicesSummary(self, request, context):
        """SetDeviceLocation updates the device-location for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGatewaysSummary(self, request, context):
        """SetDeviceLocation updates the device-location for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganisation(self, request, context):
        """SetDeviceLocation updates the device-location for a device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrgByDevEUI(self, request, context):
        """GetOrgByDevEUI returns organization id by devEUI. Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrgIDByGwID(self, request, context):
        """GetOrgIDByGwID returns organization id by gwID. Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceAppSKey(self, request, context):
        """GetDeviceAppSKey returns AES128Key by devEUI. Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceKeys(self, request, context):
        """GetDeviceKeys returns NwkKey,AppKey by devEUI. Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReEncryptDeviceQueueItems(self, request, context):
        """ReEncryptDeviceQueueItems requests the application-server to re-encrypt
        the given payload items using the new parameters. This request is
        for example triggered when the associated frame-counter of a downlink
        payload will be used by a mac-layer only payload, e.g. when the NS has
        mac-commands (or ACKs) to send to the device and combining this with
        an application-layer payload would exceed the max. payload size.
        Note there is no requirement that the number of returned items must be
        equal to the number of requested items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamGatewayTaskResult(self, request_iterator, context):
        """StreamGatewayTaskResult stream ExecCmd results from gateway to save into as-db
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDictionary(self, request, context):
        """GetDictionary returns list of dictionary by the type. Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGWMetaData(self, request, context):
        """GetGWMetaData returns a map with last metadata for the gw
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceProfile(self, request, context):
        """GetServiceProfile (TEMP for ADR MIGRATE) returns sp from as-database (local only)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateServiceProfile(self, request, context):
        """CreateServiceProfile (TEMP for ADR MIGRATE) creates service profile in as local db.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSPonDevice(self, request, context):
        """UpdateSPonDevice (TEMP for ADR MIGRATE) update SP for device in local db.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewAppSKey(self, request, context):
        """NewAppSKey returns and saves AppSKey (AES128Key) according to join_server config (if kek is enabled). Modification.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckJwt(self, request, context):
        """CheckJwt checks if the JWT recieved is valid
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApplicationServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'HandleUplinkData': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleUplinkData,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleUplinkDataRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HandleProprietaryUplink': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleProprietaryUplink,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleProprietaryUplinkRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HandleError': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleError,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleErrorRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HandleDownlinkACK': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleDownlinkACK,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleDownlinkACKRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HandleGatewayStats': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleGatewayStats,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleGatewayStatsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'HandleTxAck': grpc.unary_unary_rpc_method_handler(
                    servicer.HandleTxAck,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleTxAckRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetDeviceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceStatus,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceStatusRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetDeviceLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceLocation,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceLocationRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDevicesSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevicesSummary,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryResponse.SerializeToString,
            ),
            'GetGatewaysSummary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGatewaysSummary,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryResponse.SerializeToString,
            ),
            'ListOrganisation': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganisation,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationResponse.SerializeToString,
            ),
            'GetOrgByDevEUI': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrgByDevEUI,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.SerializeToString,
            ),
            'GetOrgIDByGwID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrgIDByGwID,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgIDByGwIDRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.SerializeToString,
            ),
            'GetDeviceAppSKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceAppSKey,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.SerializeToString,
            ),
            'GetDeviceKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceKeys,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceKeysResponse.SerializeToString,
            ),
            'ReEncryptDeviceQueueItems': grpc.unary_unary_rpc_method_handler(
                    servicer.ReEncryptDeviceQueueItems,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsResponse.SerializeToString,
            ),
            'StreamGatewayTaskResult': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamGatewayTaskResult,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GatewayTaskResult.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDictionary': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDictionary,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryResponse.SerializeToString,
            ),
            'GetGWMetaData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGWMetaData,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGWMetaDataResponse.SerializeToString,
            ),
            'GetServiceProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceProfile,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileResponse.SerializeToString,
            ),
            'CreateServiceProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateServiceProfile,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileResponse.SerializeToString,
            ),
            'UpdateSPonDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSPonDevice,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.UpdateSPonDeviceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'NewAppSKey': grpc.unary_unary_rpc_method_handler(
                    servicer.NewAppSKey,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.NewAppSKeyRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.SerializeToString,
            ),
            'CheckJwt': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckJwt,
                    request_deserializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtRequest.FromString,
                    response_serializer=chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'as.ApplicationServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ApplicationServerService(object):
    """ApplicationServerService is the service providing the application-server interface.
    """

    @staticmethod
    def HandleUplinkData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleUplinkData',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleUplinkDataRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleProprietaryUplink(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleProprietaryUplink',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleProprietaryUplinkRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleError(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleError',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleErrorRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleDownlinkACK(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleDownlinkACK',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleDownlinkACKRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleGatewayStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleGatewayStats',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleGatewayStatsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HandleTxAck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/HandleTxAck',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.HandleTxAckRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/SetDeviceStatus',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceStatusRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/SetDeviceLocation',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.SetDeviceLocationRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevicesSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetDevicesSummary',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDevicesSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGatewaysSummary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetGatewaysSummary',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGatewaysSummaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganisation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/ListOrganisation',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.ListOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrgByDevEUI(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetOrgByDevEUI',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrgIDByGwID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetOrgIDByGwID',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgIDByGwIDRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceAppSKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetDeviceAppSKey',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetDeviceKeys',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetOrgByDevEUIRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceKeysResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReEncryptDeviceQueueItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/ReEncryptDeviceQueueItems',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.ReEncryptDeviceQueueItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamGatewayTaskResult(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/as.ApplicationServerService/StreamGatewayTaskResult',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GatewayTaskResult.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDictionary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetDictionary',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDictionaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetGWMetaData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetGWMetaData',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetGWMetaDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/GetServiceProfile',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetServiceProfileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateServiceProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/CreateServiceProfile',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.CreateServiceProfileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSPonDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/UpdateSPonDevice',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.UpdateSPonDeviceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewAppSKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/NewAppSKey',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.NewAppSKeyRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.GetDeviceAppSKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckJwt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/as.ApplicationServerService/CheckJwt',
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtRequest.SerializeToString,
            chirpstack__api_dot_as__pb_dot_as__pb__pb2.CheckJwtResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
